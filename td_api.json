{"types":[{"documentation":{"code":"Error code; subject to future changes. If the error code is 406, the error message must not be processed in any way and must not be displayed to the user ","message":"Error message; subject to future changes","_":"An object of this type can be returned on every function call, in case of an error "},"type":{"subclass":"error","properties":[{"name":"code","type":"int32"},{"name":"message","type":"string"}],"abstractClass":"Error"}},{"documentation":{"_":"An object of this type is returned on a successful function call for certain functions"},"type":{"subclass":"ok","properties":[],"abstractClass":"Ok"}},{"documentation":{"class":"AuthenticationCodeType ","length":"Length of the code","_":"An authentication code is delivered via a private Telegram message, which can be viewed from another active session "},"type":{"subclass":"authenticationCodeTypeTelegramMessage","properties":[{"name":"length","type":"int32"}],"abstractClass":"AuthenticationCodeType"}},{"documentation":{"length":"Length of the code","_":"An authentication code is delivered via an SMS message to the specified phone number "},"type":{"subclass":"authenticationCodeTypeSms","properties":[{"name":"length","type":"int32"}],"abstractClass":"AuthenticationCodeType"}},{"documentation":{"length":"Length of the code","_":"An authentication code is delivered via a phone call to the specified phone number "},"type":{"subclass":"authenticationCodeTypeCall","properties":[{"name":"length","type":"int32"}],"abstractClass":"AuthenticationCodeType"}},{"documentation":{"pattern":"Pattern of the phone number from which the call will be made","_":"An authentication code is delivered by an immediately canceled call to the specified phone number. The phone number that calls is the code that must be entered automatically "},"type":{"subclass":"authenticationCodeTypeFlashCall","properties":[{"name":"pattern","type":"string"}],"abstractClass":"AuthenticationCodeType"}},{"documentation":{"phone_number_prefix":"Prefix of the phone number from which the call will be made ","length":"Number of digits in the code, excluding the prefix","_":"An authentication code is delivered by an immediately canceled call to the specified phone number. The last digits of the phone number that calls are the code that must be entered manually by the user "},"type":{"subclass":"authenticationCodeTypeMissedCall","properties":[{"name":"phone_number_prefix","type":"string"},{"name":"length","type":"int32"}],"abstractClass":"AuthenticationCodeType"}},{"documentation":{"url":"URL to open to receive the code ","length":"Length of the code","_":"An authentication code is delivered to https://fragment.com. The user must be logged in there via a wallet owning the phone number's NFT "},"type":{"subclass":"authenticationCodeTypeFragment","properties":[{"name":"url","type":"string"},{"name":"length","type":"int32"}],"abstractClass":"AuthenticationCodeType"}},{"documentation":{"phone_number":"A phone number that is being authenticated ","type":"The way the code was sent to the user ","next_type":"The way the next code will be sent to the user; may be null ","timeout":"Timeout before the code can be re-sent, in seconds","_":"Information about the authentication code that was sent "},"type":{"subclass":"authenticationCodeInfo","properties":[{"name":"phone_number","type":"string"},{"name":"type","type":"AuthenticationCodeType"},{"name":"next_type","type":"AuthenticationCodeType"},{"name":"timeout","type":"int32"}],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"email_address_pattern":"Pattern of the email address to which an authentication code was sent ","length":"Length of the code; 0 if unknown","_":"Information about the email address authentication code that was sent "},"type":{"subclass":"emailAddressAuthenticationCodeInfo","properties":[{"name":"email_address_pattern","type":"string"},{"name":"length","type":"int32"}],"abstractClass":"EmailAddressAuthenticationCodeInfo"}},{"documentation":{"class":"EmailAddressAuthentication ","code":"The code","_":"An authentication code delivered to a user's email address "},"type":{"subclass":"emailAddressAuthenticationCode","properties":[{"name":"code","type":"string"}],"abstractClass":"EmailAddressAuthentication"}},{"documentation":{"token":"The token","_":"An authentication token received through Apple ID "},"type":{"subclass":"emailAddressAuthenticationAppleId","properties":[{"name":"token","type":"string"}],"abstractClass":"EmailAddressAuthentication"}},{"documentation":{"token":"The token","_":"An authentication token received through Google ID "},"type":{"subclass":"emailAddressAuthenticationGoogleId","properties":[{"name":"token","type":"string"}],"abstractClass":"EmailAddressAuthentication"}},{"documentation":{"offset":"Offset of the entity, in UTF-16 code units ","length":"Length of the entity, in UTF-16 code units ","type":"Type of the entity","_":"Represents a part of the text that needs to be formatted in some unusual way "},"type":{"subclass":"textEntity","properties":[{"name":"offset","type":"int32"},{"name":"length","type":"int32"},{"name":"type","type":"TextEntityType"}],"abstractClass":"TextEntity"}},{"documentation":{"entities":"List of text entities","_":"Contains a list of text entities "},"type":{"subclass":"textEntities","properties":[{"name":"entities","type":"vector<textEntity>"}],"abstractClass":"TextEntities"}},{"documentation":{"text":"The text ","entities":"Entities contained in the text. Entities can be nested, but must not mutually intersect with each other. -Pre, Code and PreCode entities can't contain other entities. Bold, Italic, Underline, Strikethrough, and Spoiler entities can contain and can be part of any other entities. All other entities can't contain each other","_":"A text with some entities "},"type":{"subclass":"formattedText","properties":[{"name":"text","type":"string"},{"name":"entities","type":"vector<textEntity>"}],"abstractClass":"FormattedText"}},{"documentation":{"text":"Text of the terms of service ","min_user_age":"The minimum age of a user to be able to accept the terms; 0 if age isn't restricted ","show_popup":"True, if a blocking popup with terms of service must be shown to the user","_":"Contains Telegram terms of service "},"type":{"subclass":"termsOfService","properties":[{"name":"text","type":"formattedText"},{"name":"min_user_age","type":"int32"},{"name":"show_popup","type":"Bool"}],"abstractClass":"TermsOfService"}},{"documentation":{"class":"AuthorizationState ","_":"Initializetion parameters are needed. Call `setTdlibParameters` to provide them"},"type":{"subclass":"authorizationStateWaitTdlibParameters","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"_":"TDLib needs the user's phone number to authorize. Call `setAuthenticationPhoneNumber` to provide the phone number, or use `requestQrCodeAuthentication`, or `checkAuthenticationBotToken` for other authentication options"},"type":{"subclass":"authorizationStateWaitPhoneNumber","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"allow_apple_id":"True, if authorization through Apple ID is allowed ","allow_google_id":"True, if authorization through Google ID is allowed","_":"TDLib needs the user's email address to authorize. Call `setAuthenticationEmailAddress` to provide the email address, or directly call `checkAuthenticationEmailCode` with Apple ID/Google ID token if allowed "},"type":{"subclass":"authorizationStateWaitEmailAddress","properties":[{"name":"allow_apple_id","type":"Bool"},{"name":"allow_google_id","type":"Bool"}],"abstractClass":"AuthorizationState"}},{"documentation":{"allow_apple_id":"True, if authorization through Apple ID is allowed ","allow_google_id":"True, if authorization through Google ID is allowed ","code_info":"Information about the sent authentication code ","next_phone_number_authorization_date":"Point in time (Unix timestamp) when the user will be able to authorize with a code sent to the user's phone number; 0 if unknown","_":"TDLib needs the user's authentication code sent to an email address to authorize. Call `checkAuthenticationEmailCode` to provide the code "},"type":{"subclass":"authorizationStateWaitEmailCode","properties":[{"name":"allow_apple_id","type":"Bool"},{"name":"allow_google_id","type":"Bool"},{"name":"code_info","type":"emailAddressAuthenticationCodeInfo"},{"name":"next_phone_number_authorization_date","type":"int32"}],"abstractClass":"AuthorizationState"}},{"documentation":{"code_info":"Information about the authorization code that was sent","_":"TDLib needs the user's authentication code to authorize "},"type":{"subclass":"authorizationStateWaitCode","properties":[{"name":"code_info","type":"authenticationCodeInfo"}],"abstractClass":"AuthorizationState"}},{"documentation":{"link":"A tg:// URL for the QR code. The link will be updated frequently","_":"The user needs to confirm authorization on another logged in device by scanning a QR code with the provided link "},"type":{"subclass":"authorizationStateWaitOtherDeviceConfirmation","properties":[{"name":"link","type":"string"}],"abstractClass":"AuthorizationState"}},{"documentation":{"terms_of_service":"Telegram terms of service","_":"The user is unregistered and need to accept terms of service and enter their first name and last name to finish registration "},"type":{"subclass":"authorizationStateWaitRegistration","properties":[{"name":"terms_of_service","type":"termsOfService"}],"abstractClass":"AuthorizationState"}},{"documentation":{"password_hint":"Hint for the password; may be empty ","has_recovery_email_address":"True, if a recovery email address has been set up ","recovery_email_address_pattern":"Pattern of the email address to which the recovery email was sent; empty until a recovery email has been sent","_":"The user has been authorized, but needs to enter a 2-step verification password to start using the application "},"type":{"subclass":"authorizationStateWaitPassword","properties":[{"name":"password_hint","type":"string"},{"name":"has_recovery_email_address","type":"Bool"},{"name":"recovery_email_address_pattern","type":"string"}],"abstractClass":"AuthorizationState"}},{"documentation":{"_":"The user has been successfully authorized. TDLib is now ready to answer queries"},"type":{"subclass":"authorizationStateReady","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"_":"The user is currently logging out"},"type":{"subclass":"authorizationStateLoggingOut","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"_":"TDLib is closing, all subsequent queries will be answered with the error 500. Note that closing TDLib can take a while. All resources will be freed only after authorizationStateClosed has been received"},"type":{"subclass":"authorizationStateClosing","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"_":"TDLib client is in its final state. All databases are closed and all resources are released. No other updates will be received after this. All queries will be responded to -with error code 500. To continue working, one must create a new instance of the TDLib client"},"type":{"subclass":"authorizationStateClosed","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"has_password":"True, if a 2-step verification password is set ","password_hint":"Hint for the password; may be empty ","has_recovery_email_address":"True, if a recovery email is set ","has_passport_data":"True, if some Telegram Passport elements were saved ","recovery_email_address_code_info":"Information about the recovery email address to which the confirmation email was sent; may be null ","login_email_address_pattern":"Pattern of the email address set up for logging in ","pending_reset_date":"If not 0, point in time (Unix timestamp) after which the 2-step verification password can be reset immediately using resetPassword","_":"Represents the current state of 2-step verification "},"type":{"subclass":"passwordState","properties":[{"name":"has_password","type":"Bool"},{"name":"password_hint","type":"string"},{"name":"has_recovery_email_address","type":"Bool"},{"name":"has_passport_data","type":"Bool"},{"name":"recovery_email_address_code_info","type":"emailAddressAuthenticationCodeInfo"},{"name":"login_email_address_pattern","type":"string"},{"name":"pending_reset_date","type":"int32"}],"abstractClass":"PasswordState"}},{"documentation":{"recovery_email_address":"Recovery email address","_":"Contains information about the current recovery email address "},"type":{"subclass":"recoveryEmailAddress","properties":[{"name":"recovery_email_address","type":"string"}],"abstractClass":"RecoveryEmailAddress"}},{"documentation":{"has_password":"True, if a temporary password is available ","valid_for":"Time left before the temporary password expires, in seconds","_":"Returns information about the availability of a temporary password, which can be used for payments "},"type":{"subclass":"temporaryPasswordState","properties":[{"name":"has_password","type":"Bool"},{"name":"valid_for","type":"int32"}],"abstractClass":"TemporaryPasswordState"}},{"documentation":{"path":"Local path to the locally available file part; may be empty ","can_be_downloaded":"True, if it is possible to download or generate the file ","can_be_deleted":"True, if the file can be deleted ","is_downloading_active":"True, if the file is currently being downloaded (or a local copy is being generated by some other means) ","is_downloading_completed":"True, if the local copy is fully available ","download_offset":"Download will be started from this offset. downloaded_prefix_size is calculated from this offset ","downloaded_prefix_size":"If is_downloading_completed is false, then only some prefix of the file starting from download_offset is ready to be read. downloaded_prefix_size is the size of that prefix in bytes ","downloaded_size":"Total downloaded file size, in bytes. Can be used only for calculating download progress. The actual file size may be bigger, and some parts of it may contain garbage","_":"Represents a local file "},"type":{"subclass":"localFile","properties":[{"name":"path","type":"string"},{"name":"can_be_downloaded","type":"Bool"},{"name":"can_be_deleted","type":"Bool"},{"name":"is_downloading_active","type":"Bool"},{"name":"is_downloading_completed","type":"Bool"},{"name":"download_offset","type":"int53"},{"name":"downloaded_prefix_size","type":"int53"},{"name":"downloaded_size","type":"int53"}],"abstractClass":"LocalFile"}},{"documentation":{"id":"Remote file identifier; may be empty. Can be used by the current user across application restarts or even from other devices. Uniquely identifies a file, but a file can have a lot of different valid identifiers. -If the ID starts with \"http://\" or \"https://\", it represents the HTTP URL of the file. TDLib is currently unable to download files if only their URL is known. -If downloadFile/addFileToDownloads is called on such a file or if it is sent to a secret chat, TDLib starts a file generation process by sending updateFileGenerationStart to the application with the HTTP URL in the original_path and \"#url#\" as the conversion string. Application must generate the file by downloading it to the specified location ","unique_id":"Unique file identifier; may be empty if unknown. The unique file identifier which is the same for the same file even for different users and is persistent over time ","is_uploading_active":"True, if the file is currently being uploaded (or a remote copy is being generated by some other means) ","is_uploading_completed":"True, if a remote copy is fully available ","uploaded_size":"Size of the remote available part of the file, in bytes; 0 if unknown","_":"Represents a remote file "},"type":{"subclass":"remoteFile","properties":[{"name":"id","type":"string"},{"name":"unique_id","type":"string"},{"name":"is_uploading_active","type":"Bool"},{"name":"is_uploading_completed","type":"Bool"},{"name":"uploaded_size","type":"int53"}],"abstractClass":"RemoteFile"}},{"documentation":{"id":"Unique file identifier ","size":"File size, in bytes; 0 if unknown ","expected_size":"Approximate file size in bytes in case the exact file size is unknown. Can be used to show download/upload progress ","local":"Information about the local copy of the file ","remote":"Information about the remote copy of the file","_":"Represents a file "},"type":{"subclass":"file","properties":[{"name":"id","type":"int32"},{"name":"size","type":"int53"},{"name":"expected_size","type":"int53"},{"name":"local","type":"localFile"},{"name":"remote","type":"remoteFile"}],"abstractClass":"File"}},{"documentation":{"class":"InputFile ","id":"Unique file identifier","_":"A file defined by its unique ID "},"type":{"subclass":"inputFileId","properties":[{"name":"id","type":"int32"}],"abstractClass":"InputFile"}},{"documentation":{"id":"Remote file identifier","_":"A file defined by its remote ID. The remote ID is guaranteed to be usable only if the corresponding file is still accessible to the user and known to TDLib. -For example, if the file is from a message, then the message must be not deleted and accessible to the user. If the file database is disabled, then the corresponding object with the file must be preloaded by the application "},"type":{"subclass":"inputFileRemote","properties":[{"name":"id","type":"string"}],"abstractClass":"InputFile"}},{"documentation":{"path":"Local path to the file","_":"A file defined by a local path "},"type":{"subclass":"inputFileLocal","properties":[{"name":"path","type":"string"}],"abstractClass":"InputFile"}},{"documentation":{"original_path":"Local path to a file from which the file is generated; may be empty if there is no such file ","conversion":"String specifying the conversion applied to the original file; must be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage ","expected_size":"Expected size of the generated file, in bytes; 0 if unknown","_":"A file generated by the application "},"type":{"subclass":"inputFileGenerated","properties":[{"name":"original_path","type":"string"},{"name":"conversion","type":"string"},{"name":"expected_size","type":"int53"}],"abstractClass":"InputFile"}},{"documentation":{"type":"Image type (see https://core.telegram.org/constructor/photoSize) ","photo":"Information about the image file ","width":"Image width ","height":"Image height ","progressive_sizes":"Sizes of progressive JPEG file prefixes, which can be used to preliminarily show the image; in bytes","_":"Describes an image in JPEG format "},"type":{"subclass":"photoSize","properties":[{"name":"type","type":"string"},{"name":"photo","type":"file"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"progressive_sizes","type":"vector<int32>"}],"abstractClass":"PhotoSize"}},{"documentation":{"width":"Thumbnail width, usually doesn't exceed 40 ","height":"Thumbnail height, usually doesn't exceed 40 ","data":"The thumbnail in JPEG format","_":"Thumbnail image of a very poor quality and low resolution "},"type":{"subclass":"minithumbnail","properties":[{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"data","type":"bytes"}],"abstractClass":"Minithumbnail"}},{"documentation":{"class":"ThumbnailFormat ","_":"The thumbnail is in JPEG format"},"type":{"subclass":"thumbnailFormatJpeg","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"_":"The thumbnail is in static GIF format. It will be used only for some bot inline results"},"type":{"subclass":"thumbnailFormatGif","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"_":"The thumbnail is in MPEG4 format. It will be used only for some animations and videos"},"type":{"subclass":"thumbnailFormatMpeg4","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"_":"The thumbnail is in PNG format. It will be used only for background patterns"},"type":{"subclass":"thumbnailFormatPng","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"_":"The thumbnail is in TGS format. It will be used only for TGS sticker sets"},"type":{"subclass":"thumbnailFormatTgs","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"_":"The thumbnail is in WEBM format. It will be used only for WEBM sticker sets"},"type":{"subclass":"thumbnailFormatWebm","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"_":"The thumbnail is in WEBP format. It will be used only for some stickers"},"type":{"subclass":"thumbnailFormatWebp","properties":[],"abstractClass":"ThumbnailFormat"}},{"documentation":{"format":"Thumbnail format ","width":"Thumbnail width ","height":"Thumbnail height ","file":"The thumbnail","_":"Represents a thumbnail "},"type":{"subclass":"thumbnail","properties":[{"name":"format","type":"ThumbnailFormat"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"file","type":"file"}],"abstractClass":"Thumbnail"}},{"documentation":{"class":"MaskPoint ","_":"The mask is placed relatively to the forehead"},"type":{"subclass":"maskPointForehead","properties":[],"abstractClass":"MaskPoint"}},{"documentation":{"_":"The mask is placed relatively to the eyes"},"type":{"subclass":"maskPointEyes","properties":[],"abstractClass":"MaskPoint"}},{"documentation":{"_":"The mask is placed relatively to the mouth"},"type":{"subclass":"maskPointMouth","properties":[],"abstractClass":"MaskPoint"}},{"documentation":{"_":"The mask is placed relatively to the chin"},"type":{"subclass":"maskPointChin","properties":[],"abstractClass":"MaskPoint"}},{"documentation":{"point":"Part of the face, relative to which the mask is placed ","x_shift":"Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. (For example, -1.0 will place the mask just to the left of the default mask position) ","y_shift":"Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. (For example, 1.0 will place the mask just below the default mask position) ","scale":"Mask scaling coefficient. (For example, 2.0 means a doubled size)","_":"Position on a photo where a mask is placed "},"type":{"subclass":"maskPosition","properties":[{"name":"point","type":"MaskPoint"},{"name":"x_shift","type":"double"},{"name":"y_shift","type":"double"},{"name":"scale","type":"double"}],"abstractClass":"MaskPosition"}},{"documentation":{"class":"StickerFormat ","_":"The sticker is an image in WEBP format"},"type":{"subclass":"stickerFormatWebp","properties":[],"abstractClass":"StickerFormat"}},{"documentation":{"_":"The sticker is an animation in TGS format"},"type":{"subclass":"stickerFormatTgs","properties":[],"abstractClass":"StickerFormat"}},{"documentation":{"_":"The sticker is a video in WEBM format"},"type":{"subclass":"stickerFormatWebm","properties":[],"abstractClass":"StickerFormat"}},{"documentation":{"class":"StickerType ","_":"The sticker is a regular sticker"},"type":{"subclass":"stickerTypeRegular","properties":[],"abstractClass":"StickerType"}},{"documentation":{"_":"The sticker is a mask in WEBP format to be placed on photos or videos"},"type":{"subclass":"stickerTypeMask","properties":[],"abstractClass":"StickerType"}},{"documentation":{"_":"The sticker is a custom emoji to be used inside message text and caption"},"type":{"subclass":"stickerTypeCustomEmoji","properties":[],"abstractClass":"StickerType"}},{"documentation":{"commands":"List of vector path commands","_":"Represents a closed vector path. The path begins at the end point of the last command "},"type":{"subclass":"closedVectorPath","properties":[{"name":"commands","type":"vector<VectorPathCommand>"}],"abstractClass":"ClosedVectorPath"}},{"documentation":{"text":"Option text; 1-100 characters ","voter_count":"Number of voters for this option, available only for closed or voted polls ","vote_percentage":"The percentage of votes for this option; 0-100 ","is_chosen":"True, if the option was chosen by the user ","is_being_chosen":"True, if the option is being chosen by a pending setPollAnswer request","_":"Describes one answer option of a poll "},"type":{"subclass":"pollOption","properties":[{"name":"text","type":"string"},{"name":"voter_count","type":"int32"},{"name":"vote_percentage","type":"int32"},{"name":"is_chosen","type":"Bool"},{"name":"is_being_chosen","type":"Bool"}],"abstractClass":"PollOption"}},{"documentation":{"class":"PollType ","allow_multiple_answers":"True, if multiple answer options can be chosen simultaneously","_":"A regular poll "},"type":{"subclass":"pollTypeRegular","properties":[{"name":"allow_multiple_answers","type":"Bool"}],"abstractClass":"PollType"}},{"documentation":{"correct_option_id":"0-based identifier of the correct answer option; -1 for a yet unanswered poll ","explanation":"Text that is shown when the user chooses an incorrect answer or taps on the lamp icon; 0-200 characters with at most 2 line feeds; empty for a yet unanswered poll","_":"A poll in quiz mode, which has exactly one correct answer option and can be answered only once "},"type":{"subclass":"pollTypeQuiz","properties":[{"name":"correct_option_id","type":"int32"},{"name":"explanation","type":"formattedText"}],"abstractClass":"PollType"}},{"documentation":{"duration":"Duration of the animation, in seconds; as defined by the sender ","width":"Width of the animation ","height":"Height of the animation ","file_name":"Original name of the file; as defined by the sender ","mime_type":"MIME type of the file, usually \"image/gif\" or \"video/mp4\" ","has_stickers":"True, if stickers were added to the animation. The list of corresponding sticker set can be received using getAttachedStickerSets ","minithumbnail":"Animation minithumbnail; may be null ","thumbnail":"Animation thumbnail in JPEG or MPEG4 format; may be null ","animation":"File containing the animation","_":"Describes an animation file. The animation must be encoded in GIF or MPEG4 format "},"type":{"subclass":"animation","properties":[{"name":"duration","type":"int32"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"file_name","type":"string"},{"name":"mime_type","type":"string"},{"name":"has_stickers","type":"Bool"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"thumbnail","type":"thumbnail"},{"name":"animation","type":"file"}],"abstractClass":"Animation"}},{"documentation":{"duration":"Duration of the audio, in seconds; as defined by the sender ","title":"Title of the audio; as defined by the sender ","performer":"Performer of the audio; as defined by the sender ","file_name":"Original name of the file; as defined by the sender ","mime_type":"The MIME type of the file; as defined by the sender ","album_cover_minithumbnail":"The minithumbnail of the album cover; may be null ","album_cover_thumbnail":"The thumbnail of the album cover in JPEG format; as defined by the sender. The full size thumbnail is supposed to be extracted from the downloaded audio file; may be null ","external_album_covers":"Album cover variants to use if the downloaded audio file contains no album cover. Provided thumbnail dimensions are approximate ","audio":"File containing the audio","_":"Describes an audio file. Audio is usually in MP3 or M4A format "},"type":{"subclass":"audio","properties":[{"name":"duration","type":"int32"},{"name":"title","type":"string"},{"name":"performer","type":"string"},{"name":"file_name","type":"string"},{"name":"mime_type","type":"string"},{"name":"album_cover_minithumbnail","type":"minithumbnail"},{"name":"album_cover_thumbnail","type":"thumbnail"},{"name":"external_album_covers","type":"vector<thumbnail>"},{"name":"audio","type":"file"}],"abstractClass":"Audio"}},{"documentation":{"file_name":"Original name of the file; as defined by the sender ","mime_type":"MIME type of the file; as defined by the sender ","minithumbnail":"Document minithumbnail; may be null ","thumbnail":"Document thumbnail in JPEG or PNG format (PNG will be used only for background patterns); as defined by the sender; may be null ","document":"File containing the document","_":"Describes a document of any type "},"type":{"subclass":"document","properties":[{"name":"file_name","type":"string"},{"name":"mime_type","type":"string"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"thumbnail","type":"thumbnail"},{"name":"document","type":"file"}],"abstractClass":"Document"}},{"documentation":{"has_stickers":"True, if stickers were added to the photo. The list of corresponding sticker sets can be received using getAttachedStickerSets ","minithumbnail":"Photo minithumbnail; may be null ","sizes":"Available variants of the photo, in different sizes","_":"Describes a photo "},"type":{"subclass":"photo","properties":[{"name":"has_stickers","type":"Bool"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"sizes","type":"vector<photoSize>"}],"abstractClass":"Photo"}},{"documentation":{"set_id":"The identifier of the sticker set to which the sticker belongs; 0 if none ","width":"Sticker width; as defined by the sender ","height":"Sticker height; as defined by the sender ","emoji":"Emoji corresponding to the sticker ","format":"Sticker format ","type":"Sticker type ","mask_position":"Position where the mask is placed; may be null even the sticker is a mask ","custom_emoji_id":"Identifier of the emoji if the sticker is a custom emoji ","outline":"Sticker's outline represented as a list of closed vector paths; may be empty. The coordinate system origin is in the upper-left corner ","thumbnail":"Sticker thumbnail in WEBP or JPEG format; may be null ","is_premium":"True, if only Premium users can use the sticker ","premium_animation":"Premium animation of the sticker; may be null ","sticker":"File containing the sticker","_":"Describes a sticker "},"type":{"subclass":"sticker","properties":[{"name":"set_id","type":"int64"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"emoji","type":"string"},{"name":"format","type":"StickerFormat"},{"name":"type","type":"StickerType"},{"name":"mask_position","type":"maskPosition"},{"name":"custom_emoji_id","type":"int64"},{"name":"outline","type":"vector<closedVectorPath>"},{"name":"thumbnail","type":"thumbnail"},{"name":"is_premium","type":"Bool"},{"name":"premium_animation","type":"file"},{"name":"sticker","type":"file"}],"abstractClass":"Sticker"}},{"documentation":{"duration":"Duration of the video, in seconds; as defined by the sender ","width":"Video width; as defined by the sender ","height":"Video height; as defined by the sender ","file_name":"Original name of the file; as defined by the sender ","mime_type":"MIME type of the file; as defined by the sender ","has_stickers":"True, if stickers were added to the video. The list of corresponding sticker sets can be received using getAttachedStickerSets ","supports_streaming":"True, if the video is supposed to be streamed ","minithumbnail":"Video minithumbnail; may be null ","thumbnail":"Video thumbnail in JPEG or MPEG4 format; as defined by the sender; may be null ","video":"File containing the video","_":"Describes a video file "},"type":{"subclass":"video","properties":[{"name":"duration","type":"int32"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"file_name","type":"string"},{"name":"mime_type","type":"string"},{"name":"has_stickers","type":"Bool"},{"name":"supports_streaming","type":"Bool"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"thumbnail","type":"thumbnail"},{"name":"video","type":"file"}],"abstractClass":"Video"}},{"documentation":{"duration":"Duration of the video, in seconds; as defined by the sender ","waveform":"A waveform representation of the video note's audio in 5-bit format; may be empty if unknown ","length":"Video width and height; as defined by the sender ","minithumbnail":"Video minithumbnail; may be null ","thumbnail":"Video thumbnail in JPEG format; as defined by the sender; may be null ","speech_recognition_result":"Result of speech recognition in the video note; may be null ","video":"File containing the video","_":"Describes a video note. The video must be equal in width and height, cropped to a circle, and stored in MPEG4 format "},"type":{"subclass":"videoNote","properties":[{"name":"duration","type":"int32"},{"name":"waveform","type":"bytes"},{"name":"length","type":"int32"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"thumbnail","type":"thumbnail"},{"name":"speech_recognition_result","type":"SpeechRecognitionResult"},{"name":"video","type":"file"}],"abstractClass":"VideoNote"}},{"documentation":{"duration":"Duration of the voice note, in seconds; as defined by the sender ","waveform":"A waveform representation of the voice note in 5-bit format ","mime_type":"MIME type of the file; as defined by the sender ","speech_recognition_result":"Result of speech recognition in the voice note; may be null ","voice":"File containing the voice note","_":"Describes a voice note. The voice note must be encoded with the Opus codec, and stored inside an OGG container. Voice notes can have only a single audio channel "},"type":{"subclass":"voiceNote","properties":[{"name":"duration","type":"int32"},{"name":"waveform","type":"bytes"},{"name":"mime_type","type":"string"},{"name":"speech_recognition_result","type":"SpeechRecognitionResult"},{"name":"voice","type":"file"}],"abstractClass":"VoiceNote"}},{"documentation":{"sticker":"Sticker for the emoji; may be null if yet unknown for a custom emoji. If the sticker is a custom emoji, it can have arbitrary format different from stickerFormatTgs ","sticker_width":"Expected width of the sticker, which can be used if the sticker is null ","sticker_height":"Expected height of the sticker, which can be used if the sticker is null ","fitzpatrick_type":"Emoji modifier fitzpatrick type; 0-6; 0 if none ","sound":"File containing the sound to be played when the sticker is clicked; may be null. The sound is encoded with the Opus codec, and stored inside an OGG container","_":"Describes an animated or custom representation of an emoji "},"type":{"subclass":"animatedEmoji","properties":[{"name":"sticker","type":"sticker"},{"name":"sticker_width","type":"int32"},{"name":"sticker_height","type":"int32"},{"name":"fitzpatrick_type","type":"int32"},{"name":"sound","type":"file"}],"abstractClass":"AnimatedEmoji"}},{"documentation":{"phone_number":"Phone number of the user ","first_name":"First name of the user; 1-255 characters in length ","last_name":"Last name of the user ","vcard":"Additional data about the user in a form of vCard; 0-2048 bytes in length ","user_id":"Identifier of the user, if known; otherwise 0","_":"Describes a user contact "},"type":{"subclass":"contact","properties":[{"name":"phone_number","type":"string"},{"name":"first_name","type":"string"},{"name":"last_name","type":"string"},{"name":"vcard","type":"string"},{"name":"user_id","type":"int53"}],"abstractClass":"Contact"}},{"documentation":{"latitude":"Latitude of the location in degrees; as defined by the sender ","longitude":"Longitude of the location, in degrees; as defined by the sender ","horizontal_accuracy":"The estimated horizontal accuracy of the location, in meters; as defined by the sender. 0 if unknown","_":"Describes a location on planet Earth "},"type":{"subclass":"location","properties":[{"name":"latitude","type":"double"},{"name":"longitude","type":"double"},{"name":"horizontal_accuracy","type":"double"}],"abstractClass":"Location"}},{"documentation":{"location":"Venue location; as defined by the sender ","title":"Venue name; as defined by the sender ","address":"Venue address; as defined by the sender ","provider":"Provider of the venue database; as defined by the sender. Currently, only \"foursquare\" and \"gplaces\" (Google Places) need to be supported ","id":"Identifier of the venue in the provider database; as defined by the sender ","type":"Type of the venue in the provider database; as defined by the sender","_":"Describes a venue "},"type":{"subclass":"venue","properties":[{"name":"location","type":"location"},{"name":"title","type":"string"},{"name":"address","type":"string"},{"name":"provider","type":"string"},{"name":"id","type":"string"},{"name":"type","type":"string"}],"abstractClass":"Venue"}},{"documentation":{"description":"Game description ","id":"Game ID ","short_name":"Game short name. To share a game use the URL https://t.me/{bot_username}?game={game_short_name} ","title":"Game title ","text":"Game text, usually containing scoreboards for a game ","param_description":"Game description ","photo":"Game photo ","animation":"Game animation; may be null","_":"Describes a game "},"type":{"subclass":"game","properties":[{"name":"id","type":"int64"},{"name":"short_name","type":"string"},{"name":"title","type":"string"},{"name":"text","type":"formattedText"},{"name":"description","type":"string"},{"name":"photo","type":"photo"},{"name":"animation","type":"animation"}],"abstractClass":"Game"}},{"documentation":{"id":"Unique poll identifier ","question":"Poll question; 1-300 characters ","options":"List of poll answer options ","total_voter_count":"Total number of voters, participating in the poll ","recent_voter_user_ids":"User identifiers of recent voters, if the poll is non-anonymous ","is_anonymous":"True, if the poll is anonymous ","type":"Type of the poll ","open_period":"Amount of time the poll will be active after creation, in seconds ","close_date":"Point in time (Unix timestamp) when the poll will automatically be closed ","is_closed":"True, if the poll is closed","_":"Describes a poll "},"type":{"subclass":"poll","properties":[{"name":"id","type":"int64"},{"name":"question","type":"string"},{"name":"options","type":"vector<pollOption>"},{"name":"total_voter_count","type":"int32"},{"name":"recent_voter_user_ids","type":"vector<int53>"},{"name":"is_anonymous","type":"Bool"},{"name":"type","type":"PollType"},{"name":"open_period","type":"int32"},{"name":"close_date","type":"int32"},{"name":"is_closed","type":"Bool"}],"abstractClass":"Poll"}},{"documentation":{"id":"Photo identifier; 0 for an empty photo. Can be used to find a photo in a list of user profile photos ","small":"A small (160x160) user profile photo. The file can be downloaded only before the photo is changed ","big":"A big (640x640) user profile photo. The file can be downloaded only before the photo is changed ","minithumbnail":"User profile photo minithumbnail; may be null ","has_animation":"True, if the photo has animated variant","_":"Describes a user profile photo "},"type":{"subclass":"profilePhoto","properties":[{"name":"id","type":"int64"},{"name":"small","type":"file"},{"name":"big","type":"file"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"has_animation","type":"Bool"}],"abstractClass":"ProfilePhoto"}},{"documentation":{"small":"A small (160x160) chat photo variant in JPEG format. The file can be downloaded only before the photo is changed ","big":"A big (640x640) chat photo variant in JPEG format. The file can be downloaded only before the photo is changed ","minithumbnail":"Chat photo minithumbnail; may be null ","has_animation":"True, if the photo has animated variant","_":"Contains basic information about the photo of a chat "},"type":{"subclass":"chatPhotoInfo","properties":[{"name":"small","type":"file"},{"name":"big","type":"file"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"has_animation","type":"Bool"}],"abstractClass":"ChatPhotoInfo"}},{"documentation":{"class":"UserType ","_":"A regular user"},"type":{"subclass":"userTypeRegular","properties":[],"abstractClass":"UserType"}},{"documentation":{"_":"A deleted user or deleted bot. No information on the user besides the user identifier is available. It is not possible to perform any active actions on this type of user"},"type":{"subclass":"userTypeDeleted","properties":[],"abstractClass":"UserType"}},{"documentation":{"can_join_groups":"True, if the bot can be invited to basic group and supergroup chats ","can_read_all_group_messages":"True, if the bot can read all messages in basic group or supergroup chats and not just those addressed to the bot. In private and channel chats a bot can always read all messages ","is_inline":"True, if the bot supports inline queries ","inline_query_placeholder":"Placeholder for inline queries (displayed on the application input field) ","need_location":"True, if the location of the user is expected to be sent with every inline query to this bot ","can_be_added_to_attachment_menu":"True, if the bot can be added to attachment menu","_":"A bot (see https://core.telegram.org/bots) "},"type":{"subclass":"userTypeBot","properties":[{"name":"can_join_groups","type":"Bool"},{"name":"can_read_all_group_messages","type":"Bool"},{"name":"is_inline","type":"Bool"},{"name":"inline_query_placeholder","type":"string"},{"name":"need_location","type":"Bool"},{"name":"can_be_added_to_attachment_menu","type":"Bool"}],"abstractClass":"UserType"}},{"documentation":{"_":"No information on the user besides the user identifier is available, yet this user has not been deleted. This object is extremely rare and must be handled like a deleted user. It is not possible to perform any actions on users of this type"},"type":{"subclass":"userTypeUnknown","properties":[],"abstractClass":"UserType"}},{"documentation":{"description":"Description of the bot command","command":"Text of the bot command ","param_description":"Description of the bot command","_":"Represents a command supported by a bot "},"type":{"subclass":"botCommand","properties":[{"name":"command","type":"string"},{"name":"description","type":"string"}],"abstractClass":"BotCommand"}},{"documentation":{"bot_user_id":"Bot's user identifier ","commands":"List of bot commands","_":"Contains a list of bot commands "},"type":{"subclass":"botCommands","properties":[{"name":"bot_user_id","type":"int53"},{"name":"commands","type":"vector<botCommand>"}],"abstractClass":"BotCommands"}},{"documentation":{"text":"Text of the button ","url":"URL to be passed to openWebApp","_":"Describes a button to be shown instead of bot commands menu button "},"type":{"subclass":"botMenuButton","properties":[{"name":"text","type":"string"},{"name":"url","type":"string"}],"abstractClass":"BotMenuButton"}},{"documentation":{"location":"The location ","address":"Location address; 1-64 characters, as defined by the chat owner","_":"Represents a location to which a chat is connected "},"type":{"subclass":"chatLocation","properties":[{"name":"location","type":"location"},{"name":"address","type":"string"}],"abstractClass":"ChatLocation"}},{"documentation":{"length":"Animation width and height ","file":"Information about the animation file ","main_frame_timestamp":"Timestamp of the frame, used as a static chat photo","_":"Animated variant of a chat photo in MPEG4 format "},"type":{"subclass":"animatedChatPhoto","properties":[{"name":"length","type":"int32"},{"name":"file","type":"file"},{"name":"main_frame_timestamp","type":"double"}],"abstractClass":"AnimatedChatPhoto"}},{"documentation":{"id":"Unique photo identifier ","added_date":"Point in time (Unix timestamp) when the photo has been added ","minithumbnail":"Photo minithumbnail; may be null ","sizes":"Available variants of the photo in JPEG format, in different size ","animation":"A big (640x640) animated variant of the photo in MPEG4 format; may be null ","small_animation":"A small (160x160) animated variant of the photo in MPEG4 format; may be null even the big animation is available","_":"Describes a chat or user profile photo "},"type":{"subclass":"chatPhoto","properties":[{"name":"id","type":"int64"},{"name":"added_date","type":"int32"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"sizes","type":"vector<photoSize>"},{"name":"animation","type":"animatedChatPhoto"},{"name":"small_animation","type":"animatedChatPhoto"}],"abstractClass":"ChatPhoto"}},{"documentation":{"total_count":"Total number of photos ","photos":"List of photos","_":"Contains a list of chat or user profile photos "},"type":{"subclass":"chatPhotos","properties":[{"name":"total_count","type":"int32"},{"name":"photos","type":"vector<chatPhoto>"}],"abstractClass":"ChatPhotos"}},{"documentation":{"class":"InputChatPhoto ","chat_photo_id":"Identifier of the current user's profile photo to reuse","_":"A previously used profile photo of the current user "},"type":{"subclass":"inputChatPhotoPrevious","properties":[{"name":"chat_photo_id","type":"int64"}],"abstractClass":"InputChatPhoto"}},{"documentation":{"photo":"Photo to be set as profile photo. Only inputFileLocal and inputFileGenerated are allowed","_":"A static photo in JPEG format "},"type":{"subclass":"inputChatPhotoStatic","properties":[{"name":"photo","type":"InputFile"}],"abstractClass":"InputChatPhoto"}},{"documentation":{"animation":"Animation to be set as profile photo. Only inputFileLocal and inputFileGenerated are allowed ","main_frame_timestamp":"Timestamp of the frame, which will be used as static chat photo","_":"An animation in MPEG4 format; must be square, at most 10 seconds long, have width between 160 and 800 and be at most 2MB in size "},"type":{"subclass":"inputChatPhotoAnimation","properties":[{"name":"animation","type":"InputFile"},{"name":"main_frame_timestamp","type":"double"}],"abstractClass":"InputChatPhoto"}},{"documentation":{"can_send_messages":"True, if the user can send text messages, contacts, locations, and venues ","can_send_media_messages":"True, if the user can send audio files, documents, photos, videos, video notes, and voice notes. Implies can_send_messages permissions ","can_send_polls":"True, if the user can send polls. Implies can_send_messages permissions ","can_send_other_messages":"True, if the user can send animations, games, stickers, and dice and use inline bots. Implies can_send_messages permissions ","can_add_web_page_previews":"True, if the user may add a web page preview to their messages. Implies can_send_messages permissions ","can_change_info":"True, if the user can change the chat title, photo, and other settings ","can_invite_users":"True, if the user can invite new users to the chat ","can_pin_messages":"True, if the user can pin messages ","can_manage_topics":"True, if the user can manage topics","_":"Describes actions that a user is allowed to take in a chat "},"type":{"subclass":"chatPermissions","properties":[{"name":"can_send_messages","type":"Bool"},{"name":"can_send_media_messages","type":"Bool"},{"name":"can_send_polls","type":"Bool"},{"name":"can_send_other_messages","type":"Bool"},{"name":"can_add_web_page_previews","type":"Bool"},{"name":"can_change_info","type":"Bool"},{"name":"can_invite_users","type":"Bool"},{"name":"can_pin_messages","type":"Bool"},{"name":"can_manage_topics","type":"Bool"}],"abstractClass":"ChatPermissions"}},{"documentation":{"can_manage_chat":"True, if the administrator can get chat event log, get chat statistics, get message statistics in channels, get channel members, see anonymous administrators in supergroups and ignore slow mode. Implied by any other privilege; applicable to supergroups and channels only ","can_change_info":"True, if the administrator can change the chat title, photo, and other settings ","can_post_messages":"True, if the administrator can create channel posts; applicable to channels only ","can_edit_messages":"True, if the administrator can edit messages of other users and pin messages; applicable to channels only ","can_delete_messages":"True, if the administrator can delete messages of other users ","can_invite_users":"True, if the administrator can invite new users to the chat ","can_restrict_members":"True, if the administrator can restrict, ban, or unban chat members; always true for channels ","can_pin_messages":"True, if the administrator can pin messages; applicable to basic groups and supergroups only ","can_manage_topics":"True, if the administrator can manage topics; applicable to forum supergroups only ","can_promote_members":"True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that were directly or indirectly promoted by them ","can_manage_video_chats":"True, if the administrator can manage video chats ","is_anonymous":"True, if the administrator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only","_":"Describes rights of the administrator "},"type":{"subclass":"chatAdministratorRights","properties":[{"name":"can_manage_chat","type":"Bool"},{"name":"can_change_info","type":"Bool"},{"name":"can_post_messages","type":"Bool"},{"name":"can_edit_messages","type":"Bool"},{"name":"can_delete_messages","type":"Bool"},{"name":"can_invite_users","type":"Bool"},{"name":"can_restrict_members","type":"Bool"},{"name":"can_pin_messages","type":"Bool"},{"name":"can_manage_topics","type":"Bool"},{"name":"can_promote_members","type":"Bool"},{"name":"can_manage_video_chats","type":"Bool"},{"name":"is_anonymous","type":"Bool"}],"abstractClass":"ChatAdministratorRights"}},{"documentation":{"currency":"ISO 4217 currency code for Telegram Premium subscription payment ","amount":"The amount to pay, in the smallest units of the currency ","discount_percentage":"The discount associated with this option, as a percentage ","month_count":"Number of month the Telegram Premium subscription will be active ","store_product_id":"Identifier of the store product associated with the option ","payment_link":"An internal link to be opened for buying Telegram Premium to the user if store payment isn't possible; may be null if direct payment isn't available","_":"Describes an option for buying Telegram Premium to a user "},"type":{"subclass":"premiumPaymentOption","properties":[{"name":"currency","type":"string"},{"name":"amount","type":"int53"},{"name":"discount_percentage","type":"int32"},{"name":"month_count","type":"int32"},{"name":"store_product_id","type":"string"},{"name":"payment_link","type":"InternalLinkType"}],"abstractClass":"PremiumPaymentOption"}},{"documentation":{"custom_emoji_id":"Identifier of the custom emoji in stickerFormatTgs format. If the custom emoji belongs to the sticker set getOption(\"themed_emoji_statuses_sticker_set_id\"), then it's color must be changed to the color of the Telegram Premium badge","_":"Describes a custom emoji to be shown instead of the Telegram Premium badge "},"type":{"subclass":"emojiStatus","properties":[{"name":"custom_emoji_id","type":"int64"}],"abstractClass":"EmojiStatus"}},{"documentation":{"emoji_statuses":"The list of emoji statuses","_":"Contains a list of emoji statuses "},"type":{"subclass":"emojiStatuses","properties":[{"name":"emoji_statuses","type":"vector<emojiStatus>"}],"abstractClass":"EmojiStatuses"}},{"documentation":{"active_usernames":"List of active usernames; the first one must be shown as the primary username. The order of active usernames can be changed with reorderActiveUsernames or reorderSupergroupActiveUsernames ","disabled_usernames":"List of currently disabled usernames; the username can be activated with toggleUsernameIsActive/toggleSupergroupUsernameIsActive ","editable_username":"The active username, which can be changed with setUsername/setSupergroupUsername","_":"Describes usernames assigned to a user, a supergroup, or a channel "},"type":{"subclass":"usernames","properties":[{"name":"active_usernames","type":"vector<string>"},{"name":"disabled_usernames","type":"vector<string>"},{"name":"editable_username","type":"string"}],"abstractClass":"Usernames"}},{"documentation":{"id":"User identifier ","first_name":"First name of the user ","last_name":"Last name of the user ","usernames":"Usernames of the user; may be null ","phone_number":"Phone number of the user ","status":"Current online status of the user ","profile_photo":"Profile photo of the user; may be null ","emoji_status":"Emoji status to be shown instead of the default Telegram Premium badge; may be null. For Telegram Premium users only ","is_contact":"The user is a contact of the current user ","is_mutual_contact":"The user is a contact of the current user and the current user is a contact of the user ","is_verified":"True, if the user is verified ","is_premium":"True, if the user is a Telegram Premium user ","is_support":"True, if the user is Telegram support account ","has_anonymous_phone_number":"True, if the user's phone number was bought on Fragment and isn't tied to a SIM card ","restriction_reason":"If non-empty, it contains a human-readable description of the reason why access to this user must be restricted ","is_scam":"True, if many users reported this user as a scam ","is_fake":"True, if many users reported this user as a fake account ","have_access":"If false, the user is inaccessible, and the only information known about the user is inside this class. Identifier of the user can't be passed to any method ","type":"Type of the user ","language_code":"IETF language tag of the user's language; only available to bots ","added_to_attachment_menu":"True, if the user added the current bot to attachment menu; only available to bots","_":"Represents a user "},"type":{"subclass":"user","properties":[{"name":"id","type":"int53"},{"name":"first_name","type":"string"},{"name":"last_name","type":"string"},{"name":"usernames","type":"usernames"},{"name":"phone_number","type":"string"},{"name":"status","type":"UserStatus"},{"name":"profile_photo","type":"profilePhoto"},{"name":"emoji_status","type":"emojiStatus"},{"name":"is_contact","type":"Bool"},{"name":"is_mutual_contact","type":"Bool"},{"name":"is_verified","type":"Bool"},{"name":"is_premium","type":"Bool"},{"name":"is_support","type":"Bool"},{"name":"has_anonymous_phone_number","type":"Bool"},{"name":"restriction_reason","type":"string"},{"name":"is_scam","type":"Bool"},{"name":"is_fake","type":"Bool"},{"name":"have_access","type":"Bool"},{"name":"type","type":"UserType"},{"name":"language_code","type":"string"},{"name":"added_to_attachment_menu","type":"Bool"}],"abstractClass":"User"}},{"documentation":{"description":"The text shown in the chat with the bot if the chat is empty ","share_text":"The text that is shown on the bot's profile page and is sent together with the link when users share the bot ","param_description":"The text shown in the chat with the bot if the chat is empty ","photo":"Photo shown in the chat with the bot if the chat is empty; may be null ","animation":"Animation shown in the chat with the bot if the chat is empty; may be null ","menu_button":"Information about a button to show instead of the bot commands menu button; may be null if ordinary bot commands menu must be shown ","commands":"List of the bot commands ","default_group_administrator_rights":"Default administrator rights for adding the bot to basic group and supergroup chats; may be null ","default_channel_administrator_rights":"Default administrator rights for adding the bot to channels; may be null","_":"Contains information about a bot "},"type":{"subclass":"botInfo","properties":[{"name":"share_text","type":"string"},{"name":"description","type":"string"},{"name":"photo","type":"photo"},{"name":"animation","type":"animation"},{"name":"menu_button","type":"botMenuButton"},{"name":"commands","type":"vector<botCommand>"},{"name":"default_group_administrator_rights","type":"chatAdministratorRights"},{"name":"default_channel_administrator_rights","type":"chatAdministratorRights"}],"abstractClass":"BotInfo"}},{"documentation":{"photo":"User profile photo; may be null if empty or unknown. If non-null, then it is the same photo as in user.profile_photo and chat.photo ","is_blocked":"True, if the user is blocked by the current user ","can_be_called":"True, if the user can be called ","supports_video_calls":"True, if a video call can be created with the user ","has_private_calls":"True, if the user can't be called due to their privacy settings ","has_private_forwards":"True, if the user can't be linked in forwarded messages due to their privacy settings ","has_restricted_voice_and_video_note_messages":"True, if voice and video notes can't be sent or forwarded to the user ","need_phone_number_privacy_exception":"True, if the current user needs to explicitly allow to share their phone number with the user when the method addContact is used ","bio":"A short user bio; may be null for bots ","premium_gift_options":"The list of available options for gifting Telegram Premium to the user ","group_in_common_count":"Number of group chats where both the other user and the current user are a member; 0 for the current user ","bot_info":"For bots, information about the bot; may be null","_":"Contains full information about a user "},"type":{"subclass":"userFullInfo","properties":[{"name":"photo","type":"chatPhoto"},{"name":"is_blocked","type":"Bool"},{"name":"can_be_called","type":"Bool"},{"name":"supports_video_calls","type":"Bool"},{"name":"has_private_calls","type":"Bool"},{"name":"has_private_forwards","type":"Bool"},{"name":"has_restricted_voice_and_video_note_messages","type":"Bool"},{"name":"need_phone_number_privacy_exception","type":"Bool"},{"name":"bio","type":"formattedText"},{"name":"premium_gift_options","type":"vector<premiumPaymentOption>"},{"name":"group_in_common_count","type":"int32"},{"name":"bot_info","type":"botInfo"}],"abstractClass":"UserFullInfo"}},{"documentation":{"total_count":"Approximate total number of users found ","user_ids":"A list of user identifiers","_":"Represents a list of users "},"type":{"subclass":"users","properties":[{"name":"total_count","type":"int32"},{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"Users"}},{"documentation":{"user_id":"User identifier of the administrator ","custom_title":"Custom title of the administrator ","is_owner":"True, if the user is the owner of the chat","_":"Contains information about a chat administrator "},"type":{"subclass":"chatAdministrator","properties":[{"name":"user_id","type":"int53"},{"name":"custom_title","type":"string"},{"name":"is_owner","type":"Bool"}],"abstractClass":"ChatAdministrator"}},{"documentation":{"administrators":"A list of chat administrators","_":"Represents a list of chat administrators "},"type":{"subclass":"chatAdministrators","properties":[{"name":"administrators","type":"vector<chatAdministrator>"}],"abstractClass":"ChatAdministrators"}},{"documentation":{"class":"ChatMemberStatus ","custom_title":"A custom title of the owner; 0-16 characters without emojis; applicable to supergroups only ","is_anonymous":"True, if the creator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only ","is_member":"True, if the user is a member of the chat","_":"The user is the owner of the chat and has all the administrator privileges "},"type":{"subclass":"chatMemberStatusCreator","properties":[{"name":"custom_title","type":"string"},{"name":"is_anonymous","type":"Bool"},{"name":"is_member","type":"Bool"}],"abstractClass":"ChatMemberStatus"}},{"documentation":{"custom_title":"A custom title of the administrator; 0-16 characters without emojis; applicable to supergroups only ","can_be_edited":"True, if the current user can edit the administrator privileges for the called user ","rights":"Rights of the administrator","_":"The user is a member of the chat and has some additional privileges. In basic groups, administrators can edit and delete messages sent by others, add new members, ban unprivileged members, and manage video chats. In supergroups and channels, there are more detailed options for administrator privileges "},"type":{"subclass":"chatMemberStatusAdministrator","properties":[{"name":"custom_title","type":"string"},{"name":"can_be_edited","type":"Bool"},{"name":"rights","type":"chatAdministratorRights"}],"abstractClass":"ChatMemberStatus"}},{"documentation":{"_":"The user is a member of the chat, without any additional privileges or restrictions"},"type":{"subclass":"chatMemberStatusMember","properties":[],"abstractClass":"ChatMemberStatus"}},{"documentation":{"is_member":"True, if the user is a member of the chat ","restricted_until_date":"Point in time (Unix timestamp) when restrictions will be lifted from the user; 0 if never. If the user is restricted for more than 366 days or for less than 30 seconds from the current time, the user is considered to be restricted forever ","permissions":"User permissions in the chat","_":"The user is under certain restrictions in the chat. Not supported in basic groups and channels "},"type":{"subclass":"chatMemberStatusRestricted","properties":[{"name":"is_member","type":"Bool"},{"name":"restricted_until_date","type":"int32"},{"name":"permissions","type":"chatPermissions"}],"abstractClass":"ChatMemberStatus"}},{"documentation":{"_":"The user or the chat is not a chat member"},"type":{"subclass":"chatMemberStatusLeft","properties":[],"abstractClass":"ChatMemberStatus"}},{"documentation":{"banned_until_date":"Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever. Always 0 in basic groups","_":"The user or the chat was banned (and hence is not a member of the chat). Implies the user can't return to the chat, view messages, or be used as a participant identifier to join a video chat of the chat "},"type":{"subclass":"chatMemberStatusBanned","properties":[{"name":"banned_until_date","type":"int32"}],"abstractClass":"ChatMemberStatus"}},{"documentation":{"member_id":"Identifier of the chat member. Currently, other chats can be only Left or Banned. Only supergroups and channels can have other chats as Left or Banned members and these chats must be supergroups or channels ","inviter_user_id":"Identifier of a user that invited/promoted/banned this member in the chat; 0 if unknown ","joined_chat_date":"Point in time (Unix timestamp) when the user joined/was promoted/was banned in the chat ","status":"Status of the member in the chat","_":"Describes a user or a chat as a member of another chat "},"type":{"subclass":"chatMember","properties":[{"name":"member_id","type":"MessageSender"},{"name":"inviter_user_id","type":"int53"},{"name":"joined_chat_date","type":"int32"},{"name":"status","type":"ChatMemberStatus"}],"abstractClass":"ChatMember"}},{"documentation":{"total_count":"Approximate total number of chat members found ","members":"A list of chat members","_":"Contains a list of chat members "},"type":{"subclass":"chatMembers","properties":[{"name":"total_count","type":"int32"},{"name":"members","type":"vector<chatMember>"}],"abstractClass":"ChatMembers"}},{"documentation":{"class":"ChatMembersFilter ","_":"Returns contacts of the user"},"type":{"subclass":"chatMembersFilterContacts","properties":[],"abstractClass":"ChatMembersFilter"}},{"documentation":{"_":"Returns the owner and administrators"},"type":{"subclass":"chatMembersFilterAdministrators","properties":[],"abstractClass":"ChatMembersFilter"}},{"documentation":{"_":"Returns all chat members, including restricted chat members"},"type":{"subclass":"chatMembersFilterMembers","properties":[],"abstractClass":"ChatMembersFilter"}},{"documentation":{"message_thread_id":"If non-zero, the identifier of the current message thread","_":"Returns users which can be mentioned in the chat "},"type":{"subclass":"chatMembersFilterMention","properties":[{"name":"message_thread_id","type":"int53"}],"abstractClass":"ChatMembersFilter"}},{"documentation":{"_":"Returns users under certain restrictions in the chat; can be used only by administrators in a supergroup"},"type":{"subclass":"chatMembersFilterRestricted","properties":[],"abstractClass":"ChatMembersFilter"}},{"documentation":{"_":"Returns users banned from the chat; can be used only by administrators in a supergroup or in a channel"},"type":{"subclass":"chatMembersFilterBanned","properties":[],"abstractClass":"ChatMembersFilter"}},{"documentation":{"_":"Returns bot members of the chat"},"type":{"subclass":"chatMembersFilterBots","properties":[],"abstractClass":"ChatMembersFilter"}},{"documentation":{"class":"SupergroupMembersFilter ","_":"Returns recently active users in reverse chronological order"},"type":{"subclass":"supergroupMembersFilterRecent","properties":[],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"query":"Query to search for","_":"Returns contacts of the user, which are members of the supergroup or channel "},"type":{"subclass":"supergroupMembersFilterContacts","properties":[{"name":"query","type":"string"}],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"_":"Returns the owner and administrators"},"type":{"subclass":"supergroupMembersFilterAdministrators","properties":[],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"query":"Query to search for","_":"Used to search for supergroup or channel members via a (string) query "},"type":{"subclass":"supergroupMembersFilterSearch","properties":[{"name":"query","type":"string"}],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"query":"Query to search for","_":"Returns restricted supergroup members; can be used only by administrators "},"type":{"subclass":"supergroupMembersFilterRestricted","properties":[{"name":"query","type":"string"}],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"query":"Query to search for","_":"Returns users banned from the supergroup or channel; can be used only by administrators "},"type":{"subclass":"supergroupMembersFilterBanned","properties":[{"name":"query","type":"string"}],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"query":"Query to search for ","message_thread_id":"If non-zero, the identifier of the current message thread","_":"Returns users which can be mentioned in the supergroup "},"type":{"subclass":"supergroupMembersFilterMention","properties":[{"name":"query","type":"string"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"_":"Returns bot members of the supergroup or channel"},"type":{"subclass":"supergroupMembersFilterBots","properties":[],"abstractClass":"SupergroupMembersFilter"}},{"documentation":{"invite_link":"Chat invite link ","name":"Name of the link ","creator_user_id":"User identifier of an administrator created the link ","date":"Point in time (Unix timestamp) when the link was created ","edit_date":"Point in time (Unix timestamp) when the link was last edited; 0 if never or unknown ","expiration_date":"Point in time (Unix timestamp) when the link will expire; 0 if never ","member_limit":"The maximum number of members, which can join the chat using the link simultaneously; 0 if not limited. Always 0 if the link requires approval ","member_count":"Number of chat members, which joined the chat using the link ","pending_join_request_count":"Number of pending join requests created using this link ","creates_join_request":"True, if the link only creates join request. If true, total number of joining members will be unlimited ","is_primary":"True, if the link is primary. Primary invite link can't have name, expiration date, or usage limit. There is exactly one primary invite link for each administrator with can_invite_users right at a given time ","is_revoked":"True, if the link was revoked","_":"Contains a chat invite link "},"type":{"subclass":"chatInviteLink","properties":[{"name":"invite_link","type":"string"},{"name":"name","type":"string"},{"name":"creator_user_id","type":"int53"},{"name":"date","type":"int32"},{"name":"edit_date","type":"int32"},{"name":"expiration_date","type":"int32"},{"name":"member_limit","type":"int32"},{"name":"member_count","type":"int32"},{"name":"pending_join_request_count","type":"int32"},{"name":"creates_join_request","type":"Bool"},{"name":"is_primary","type":"Bool"},{"name":"is_revoked","type":"Bool"}],"abstractClass":"ChatInviteLink"}},{"documentation":{"total_count":"Approximate total number of chat invite links found ","invite_links":"List of invite links","_":"Contains a list of chat invite links "},"type":{"subclass":"chatInviteLinks","properties":[{"name":"total_count","type":"int32"},{"name":"invite_links","type":"vector<chatInviteLink>"}],"abstractClass":"ChatInviteLinks"}},{"documentation":{"user_id":"Administrator's user identifier ","invite_link_count":"Number of active invite links ","revoked_invite_link_count":"Number of revoked invite links","_":"Describes a chat administrator with a number of active and revoked chat invite links "},"type":{"subclass":"chatInviteLinkCount","properties":[{"name":"user_id","type":"int53"},{"name":"invite_link_count","type":"int32"},{"name":"revoked_invite_link_count","type":"int32"}],"abstractClass":"ChatInviteLinkCount"}},{"documentation":{"invite_link_counts":"List of invite link counts","_":"Contains a list of chat invite link counts "},"type":{"subclass":"chatInviteLinkCounts","properties":[{"name":"invite_link_counts","type":"vector<chatInviteLinkCount>"}],"abstractClass":"ChatInviteLinkCounts"}},{"documentation":{"user_id":"User identifier ","joined_chat_date":"Point in time (Unix timestamp) when the user joined the chat ","approver_user_id":"User identifier of the chat administrator, approved user join request","_":"Describes a chat member joined a chat via an invite link "},"type":{"subclass":"chatInviteLinkMember","properties":[{"name":"user_id","type":"int53"},{"name":"joined_chat_date","type":"int32"},{"name":"approver_user_id","type":"int53"}],"abstractClass":"ChatInviteLinkMember"}},{"documentation":{"total_count":"Approximate total number of chat members found ","members":"List of chat members, joined a chat via an invite link","_":"Contains a list of chat members joined a chat via an invite link "},"type":{"subclass":"chatInviteLinkMembers","properties":[{"name":"total_count","type":"int32"},{"name":"members","type":"vector<chatInviteLinkMember>"}],"abstractClass":"ChatInviteLinkMembers"}},{"documentation":{"description":"Chat description ","chat_id":"Chat identifier of the invite link; 0 if the user has no access to the chat before joining ","accessible_for":"If non-zero, the amount of time for which read access to the chat will remain available, in seconds ","type":"Type of the chat ","title":"Title of the chat ","photo":"Chat photo; may be null ","param_description":"Chat description ","member_count":"Number of members in the chat ","member_user_ids":"User identifiers of some chat members that may be known to the current user ","creates_join_request":"True, if the link only creates join request ","is_public":"True, if the chat is a public supergroup or channel, i.e. it has a username or it is a location-based supergroup","_":"Contains information about a chat invite link "},"type":{"subclass":"chatInviteLinkInfo","properties":[{"name":"chat_id","type":"int53"},{"name":"accessible_for","type":"int32"},{"name":"type","type":"ChatType"},{"name":"title","type":"string"},{"name":"photo","type":"chatPhotoInfo"},{"name":"description","type":"string"},{"name":"member_count","type":"int32"},{"name":"member_user_ids","type":"vector<int53>"},{"name":"creates_join_request","type":"Bool"},{"name":"is_public","type":"Bool"}],"abstractClass":"ChatInviteLinkInfo"}},{"documentation":{"user_id":"User identifier ","date":"Point in time (Unix timestamp) when the user sent the join request ","bio":"A short bio of the user","_":"Describes a user that sent a join request and waits for administrator approval "},"type":{"subclass":"chatJoinRequest","properties":[{"name":"user_id","type":"int53"},{"name":"date","type":"int32"},{"name":"bio","type":"string"}],"abstractClass":"ChatJoinRequest"}},{"documentation":{"total_count":"Approximate total number of requests found ","requests":"List of the requests","_":"Contains a list of requests to join a chat "},"type":{"subclass":"chatJoinRequests","properties":[{"name":"total_count","type":"int32"},{"name":"requests","type":"vector<chatJoinRequest>"}],"abstractClass":"ChatJoinRequests"}},{"documentation":{"total_count":"Total number of pending join requests ","user_ids":"Identifiers of at most 3 users sent the newest pending join requests","_":"Contains information about pending join requests for a chat "},"type":{"subclass":"chatJoinRequestsInfo","properties":[{"name":"total_count","type":"int32"},{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"ChatJoinRequestsInfo"}},{"documentation":{"id":"Group identifier ","member_count":"Number of members in the group ","status":"Status of the current user in the group ","is_active":"True, if the group is active ","upgraded_to_supergroup_id":"Identifier of the supergroup to which this group was upgraded; 0 if none","_":"Represents a basic group of 0-200 users (must be upgraded to a supergroup to accommodate more than 200 users) "},"type":{"subclass":"basicGroup","properties":[{"name":"id","type":"int53"},{"name":"member_count","type":"int32"},{"name":"status","type":"ChatMemberStatus"},{"name":"is_active","type":"Bool"},{"name":"upgraded_to_supergroup_id","type":"int53"}],"abstractClass":"BasicGroup"}},{"documentation":{"description":"Group description. Updated only after the basic group is opened ","photo":"Chat photo; may be null if empty or unknown. If non-null, then it is the same photo as in chat.photo ","param_description":"Group description. Updated only after the basic group is opened ","creator_user_id":"User identifier of the creator of the group; 0 if unknown ","members":"Group members ","invite_link":"Primary invite link for this group; may be null. For chat administrators with can_invite_users right only. Updated only after the basic group is opened ","bot_commands":"List of commands of bots in the group","_":"Contains full information about a basic group "},"type":{"subclass":"basicGroupFullInfo","properties":[{"name":"photo","type":"chatPhoto"},{"name":"description","type":"string"},{"name":"creator_user_id","type":"int53"},{"name":"members","type":"vector<chatMember>"},{"name":"invite_link","type":"chatInviteLink"},{"name":"bot_commands","type":"vector<botCommands>"}],"abstractClass":"BasicGroupFullInfo"}},{"documentation":{"id":"Supergroup or channel identifier ","usernames":"Usernames of the supergroup or channel; may be null ","date":"Point in time (Unix timestamp) when the current user joined, or the point in time when the supergroup or channel was created, in case the user is not a member ","status":"Status of the current user in the supergroup or channel; custom title will always be empty ","member_count":"Number of members in the supergroup or channel; 0 if unknown. Currently, it is guaranteed to be known only if the supergroup or channel was received through searchPublicChats, searchChatsNearby, getInactiveSupergroupChats, getSuitableDiscussionChats, getGroupsInCommon, or getUserPrivacySettingRules ","has_linked_chat":"True, if the channel has a discussion group, or the supergroup is the designated discussion group for a channel ","has_location":"True, if the supergroup is connected to a location, i.e. the supergroup is a location-based supergroup ","sign_messages":"True, if messages sent to the channel need to contain information about the sender. This field is only applicable to channels ","join_to_send_messages":"True, if users need to join the supergroup before they can send messages. Always true for channels and non-discussion supergroups ","join_by_request":"True, if all users directly joining the supergroup need to be approved by supergroup administrators. Always false for channels and supergroups without username, location, or a linked chat ","is_slow_mode_enabled":"True, if the slow mode is enabled in the supergroup ","is_channel":"True, if the supergroup is a channel ","is_broadcast_group":"True, if the supergroup is a broadcast group, i.e. only administrators can send messages and there is no limit on the number of members ","is_forum":"True, if the supergroup must be shown as a forum by default ","is_verified":"True, if the supergroup or channel is verified ","restriction_reason":"If non-empty, contains a human-readable description of the reason why access to this supergroup or channel must be restricted ","is_scam":"True, if many users reported this supergroup or channel as a scam ","is_fake":"True, if many users reported this supergroup or channel as a fake account","_":"Represents a supergroup or channel with zero or more members (subscribers in the case of channels). From the point of view of the system, a channel is a special kind of a supergroup: only administrators can post and see the list of members, and posts from all administrators use the name and photo of the channel instead of individual names and profile photos. Unlike supergroups, channels can have an unlimited number of subscribers "},"type":{"subclass":"supergroup","properties":[{"name":"id","type":"int53"},{"name":"usernames","type":"usernames"},{"name":"date","type":"int32"},{"name":"status","type":"ChatMemberStatus"},{"name":"member_count","type":"int32"},{"name":"has_linked_chat","type":"Bool"},{"name":"has_location","type":"Bool"},{"name":"sign_messages","type":"Bool"},{"name":"join_to_send_messages","type":"Bool"},{"name":"join_by_request","type":"Bool"},{"name":"is_slow_mode_enabled","type":"Bool"},{"name":"is_channel","type":"Bool"},{"name":"is_broadcast_group","type":"Bool"},{"name":"is_forum","type":"Bool"},{"name":"is_verified","type":"Bool"},{"name":"restriction_reason","type":"string"},{"name":"is_scam","type":"Bool"},{"name":"is_fake","type":"Bool"}],"abstractClass":"Supergroup"}},{"documentation":{"description":"Supergroup or channel description ","photo":"Chat photo; may be null if empty or unknown. If non-null, then it is the same photo as in chat.photo ","param_description":"Supergroup or channel description ","member_count":"Number of members in the supergroup or channel; 0 if unknown ","administrator_count":"Number of privileged users in the supergroup or channel; 0 if unknown ","restricted_count":"Number of restricted users in the supergroup; 0 if unknown ","banned_count":"Number of users banned from chat; 0 if unknown ","linked_chat_id":"Chat identifier of a discussion group for the channel, or a channel, for which the supergroup is the designated discussion group; 0 if none or unknown ","slow_mode_delay":"Delay between consecutive sent messages for non-administrator supergroup members, in seconds ","slow_mode_delay_expires_in":"Time left before next message can be sent in the supergroup, in seconds. An updateSupergroupFullInfo update is not triggered when value of this field changes, but both new and old values are non-zero ","can_get_members":"True, if members of the chat can be retrieved ","can_set_username":"True, if the chat username can be changed ","can_set_sticker_set":"True, if the supergroup sticker set can be changed ","can_set_location":"True, if the supergroup location can be changed ","can_get_statistics":"True, if the supergroup or channel statistics are available ","is_all_history_available":"True, if new chat members will have access to old messages. In public, discussion, of forum groups and all channels, old messages are always available, so this option affects only private non-forum supergroups without a linked chat. The value of this field is only available for chat administrators ","is_aggressive_anti_spam_enabled":"True, if aggressive anti-spam checks are enabled in the supergroup. The value of this field is only available for chat administrators ","sticker_set_id":"Identifier of the supergroup sticker set; 0 if none ","location":"Location to which the supergroup is connected; may be null ","invite_link":"Primary invite link for the chat; may be null. For chat administrators with can_invite_users right only ","bot_commands":"List of commands of bots in the group ","upgraded_from_basic_group_id":"Identifier of the basic group from which supergroup was upgraded; 0 if none ","upgraded_from_max_message_id":"Identifier of the last message in the basic group from which supergroup was upgraded; 0 if none","_":"Contains full information about a supergroup or channel "},"type":{"subclass":"supergroupFullInfo","properties":[{"name":"photo","type":"chatPhoto"},{"name":"description","type":"string"},{"name":"member_count","type":"int32"},{"name":"administrator_count","type":"int32"},{"name":"restricted_count","type":"int32"},{"name":"banned_count","type":"int32"},{"name":"linked_chat_id","type":"int53"},{"name":"slow_mode_delay","type":"int32"},{"name":"slow_mode_delay_expires_in","type":"double"},{"name":"can_get_members","type":"Bool"},{"name":"can_set_username","type":"Bool"},{"name":"can_set_sticker_set","type":"Bool"},{"name":"can_set_location","type":"Bool"},{"name":"can_get_statistics","type":"Bool"},{"name":"is_all_history_available","type":"Bool"},{"name":"is_aggressive_anti_spam_enabled","type":"Bool"},{"name":"sticker_set_id","type":"int64"},{"name":"location","type":"chatLocation"},{"name":"invite_link","type":"chatInviteLink"},{"name":"bot_commands","type":"vector<botCommands>"},{"name":"upgraded_from_basic_group_id","type":"int53"},{"name":"upgraded_from_max_message_id","type":"int53"}],"abstractClass":"SupergroupFullInfo"}},{"documentation":{"class":"SecretChatState ","_":"The secret chat is not yet created; waiting for the other user to get online"},"type":{"subclass":"secretChatStatePending","properties":[],"abstractClass":"SecretChatState"}},{"documentation":{"_":"The secret chat is ready to use"},"type":{"subclass":"secretChatStateReady","properties":[],"abstractClass":"SecretChatState"}},{"documentation":{"_":"The secret chat is closed"},"type":{"subclass":"secretChatStateClosed","properties":[],"abstractClass":"SecretChatState"}},{"documentation":{"id":"Secret chat identifier ","user_id":"Identifier of the chat partner ","state":"State of the secret chat ","is_outbound":"True, if the chat was created by the current user; otherwise false ","key_hash":"Hash of the currently used key for comparison with the hash of the chat partner's key. This is a string of 36 little-endian bytes, which must be split into groups of 2 bits, each denoting a pixel of one of 4 colors FFFFFF, D5E6F3, 2D5775, and 2F99C9. -The pixels must be used to make a 12x12 square image filled from left to right, top to bottom. Alternatively, the first 32 bytes of the hash can be converted to the hexadecimal format and printed as 32 2-digit hex numbers ","layer":"Secret chat layer; determines features supported by the chat partner's application. Nested text entities and underline and strikethrough entities are supported if the layer >= 101, files bigger than 2000MB are supported if the layer >= 143, spoiler and custom emoji text entities are supported if the layer >= 144","_":"Represents a secret chat "},"type":{"subclass":"secretChat","properties":[{"name":"id","type":"int32"},{"name":"user_id","type":"int53"},{"name":"state","type":"SecretChatState"},{"name":"is_outbound","type":"Bool"},{"name":"key_hash","type":"bytes"},{"name":"layer","type":"int32"}],"abstractClass":"SecretChat"}},{"documentation":{"class":"MessageSender ","user_id":"Identifier of the user that sent the message","_":"The message was sent by a known user "},"type":{"subclass":"messageSenderUser","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"MessageSender"}},{"documentation":{"chat_id":"Identifier of the chat that sent the message","_":"The message was sent on behalf of a chat "},"type":{"subclass":"messageSenderChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"MessageSender"}},{"documentation":{"total_count":"Approximate total number of messages senders found ","senders":"List of message senders","_":"Represents a list of message senders "},"type":{"subclass":"messageSenders","properties":[{"name":"total_count","type":"int32"},{"name":"senders","type":"vector<MessageSender>"}],"abstractClass":"MessageSenders"}},{"documentation":{"sender":"Available message senders ","needs_premium":"True, if Telegram Premium is needed to use the message sender","_":"Represents a message sender, which can be used to send messages in a chat "},"type":{"subclass":"chatMessageSender","properties":[{"name":"sender","type":"MessageSender"},{"name":"needs_premium","type":"Bool"}],"abstractClass":"ChatMessageSender"}},{"documentation":{"senders":"List of available message senders","_":"Represents a list of message senders, which can be used to send messages in a chat "},"type":{"subclass":"chatMessageSenders","properties":[{"name":"senders","type":"vector<chatMessageSender>"}],"abstractClass":"ChatMessageSenders"}},{"documentation":{"class":"MessageForwardOrigin ","sender_user_id":"Identifier of the user that originally sent the message","_":"The message was originally sent by a known user "},"type":{"subclass":"messageForwardOriginUser","properties":[{"name":"sender_user_id","type":"int53"}],"abstractClass":"MessageForwardOrigin"}},{"documentation":{"sender_chat_id":"Identifier of the chat that originally sent the message ","author_signature":"For messages originally sent by an anonymous chat administrator, original message author signature","_":"The message was originally sent on behalf of a chat "},"type":{"subclass":"messageForwardOriginChat","properties":[{"name":"sender_chat_id","type":"int53"},{"name":"author_signature","type":"string"}],"abstractClass":"MessageForwardOrigin"}},{"documentation":{"sender_name":"Name of the sender","_":"The message was originally sent by a user, which is hidden by their privacy settings "},"type":{"subclass":"messageForwardOriginHiddenUser","properties":[{"name":"sender_name","type":"string"}],"abstractClass":"MessageForwardOrigin"}},{"documentation":{"chat_id":"Identifier of the chat from which the message was originally forwarded ","message_id":"Message identifier of the original message ","author_signature":"Original post author signature","_":"The message was originally a post in a channel "},"type":{"subclass":"messageForwardOriginChannel","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"author_signature","type":"string"}],"abstractClass":"MessageForwardOrigin"}},{"documentation":{"sender_name":"Name of the sender","_":"The message was imported from an exported message history "},"type":{"subclass":"messageForwardOriginMessageImport","properties":[{"name":"sender_name","type":"string"}],"abstractClass":"MessageForwardOrigin"}},{"documentation":{"class":"ReactionType ","emoji":"Text representation of the reaction","_":"A reaction with an emoji "},"type":{"subclass":"reactionTypeEmoji","properties":[{"name":"emoji","type":"string"}],"abstractClass":"ReactionType"}},{"documentation":{"custom_emoji_id":"Unique identifier of the custom emoji","_":"A reaction with a custom emoji "},"type":{"subclass":"reactionTypeCustomEmoji","properties":[{"name":"custom_emoji_id","type":"int64"}],"abstractClass":"ReactionType"}},{"documentation":{"origin":"Origin of a forwarded message ","date":"Point in time (Unix timestamp) when the message was originally sent ","public_service_announcement_type":"The type of a public service announcement for the forwarded message ","from_chat_id":"For messages forwarded to the chat with the current user (Saved Messages), to the Replies bot chat, or to the channel's discussion group, the identifier of the chat from which the message was forwarded last time; 0 if unknown ","from_message_id":"For messages forwarded to the chat with the current user (Saved Messages), to the Replies bot chat, or to the channel's discussion group, the identifier of the original message from which the new message was forwarded last time; 0 if unknown","_":"Contains information about a forwarded message "},"type":{"subclass":"messageForwardInfo","properties":[{"name":"origin","type":"MessageForwardOrigin"},{"name":"date","type":"int32"},{"name":"public_service_announcement_type","type":"string"},{"name":"from_chat_id","type":"int53"},{"name":"from_message_id","type":"int53"}],"abstractClass":"MessageForwardInfo"}},{"documentation":{"reply_count":"Number of times the message was directly or indirectly replied ","recent_replier_ids":"Identifiers of at most 3 recent repliers to the message; available in channels with a discussion supergroup. The users and chats are expected to be inaccessible: only their photo and name will be available ","last_read_inbox_message_id":"Identifier of the last read incoming reply to the message ","last_read_outbox_message_id":"Identifier of the last read outgoing reply to the message ","last_message_id":"Identifier of the last reply to the message","_":"Contains information about replies to a message "},"type":{"subclass":"messageReplyInfo","properties":[{"name":"reply_count","type":"int32"},{"name":"recent_replier_ids","type":"vector<MessageSender>"},{"name":"last_read_inbox_message_id","type":"int53"},{"name":"last_read_outbox_message_id","type":"int53"},{"name":"last_message_id","type":"int53"}],"abstractClass":"MessageReplyInfo"}},{"documentation":{"type":"Type of the reaction ","total_count":"Number of times the reaction was added ","is_chosen":"True, if the reaction is chosen by the current user ","recent_sender_ids":"Identifiers of at most 3 recent message senders, added the reaction; available in private, basic group and supergroup chats","_":"Contains information about a reaction to a message "},"type":{"subclass":"messageReaction","properties":[{"name":"type","type":"ReactionType"},{"name":"total_count","type":"int32"},{"name":"is_chosen","type":"Bool"},{"name":"recent_sender_ids","type":"vector<MessageSender>"}],"abstractClass":"MessageReaction"}},{"documentation":{"view_count":"Number of times the message was viewed ","forward_count":"Number of times the message was forwarded ","reply_info":"Information about direct or indirect replies to the message; may be null. Currently, available only in channels with a discussion supergroup and discussion supergroups for messages, which are not replies itself ","reactions":"The list of reactions added to the message","_":"Contains information about interactions with a message "},"type":{"subclass":"messageInteractionInfo","properties":[{"name":"view_count","type":"int32"},{"name":"forward_count","type":"int32"},{"name":"reply_info","type":"messageReplyInfo"},{"name":"reactions","type":"vector<messageReaction>"}],"abstractClass":"MessageInteractionInfo"}},{"documentation":{"type":"Type of the reaction ","sender_id":"Identifier of the sender, added the reaction ","is_big":"True, if the reaction was added with a big animation","_":"Contains information about an unread reaction to a message "},"type":{"subclass":"unreadReaction","properties":[{"name":"type","type":"ReactionType"},{"name":"sender_id","type":"MessageSender"},{"name":"is_big","type":"Bool"}],"abstractClass":"UnreadReaction"}},{"documentation":{"class":"MessageSendingState ","_":"The message is being sent now, but has not yet been delivered to the server"},"type":{"subclass":"messageSendingStatePending","properties":[],"abstractClass":"MessageSendingState"}},{"documentation":{"error_code":"An error code; 0 if unknown ","error_message":"Error message ","can_retry":"True, if the message can be re-sent ","need_another_sender":"True, if the message can be re-sent only on behalf of a different sender ","retry_after":"Time left before the message can be re-sent, in seconds. No update is sent when this field changes","_":"The message failed to be sent "},"type":{"subclass":"messageSendingStateFailed","properties":[{"name":"error_code","type":"int32"},{"name":"error_message","type":"string"},{"name":"can_retry","type":"Bool"},{"name":"need_another_sender","type":"Bool"},{"name":"retry_after","type":"double"}],"abstractClass":"MessageSendingState"}},{"documentation":{"id":"Message identifier; unique for the chat to which the message belongs ","sender_id":"Identifier of the sender of the message ","chat_id":"Chat identifier ","sending_state":"The sending state of the message; may be null ","scheduling_state":"The scheduling state of the message; may be null ","is_outgoing":"True, if the message is outgoing ","is_pinned":"True, if the message is pinned ","can_be_edited":"True, if the message can be edited. For live location and poll messages this fields shows whether editMessageLiveLocation or stopPoll can be used with this message by the application ","can_be_forwarded":"True, if the message can be forwarded ","can_be_saved":"True, if content of the message can be saved locally or copied ","can_be_deleted_only_for_self":"True, if the message can be deleted only for the current user while other users will continue to see it ","can_be_deleted_for_all_users":"True, if the message can be deleted for all users ","can_get_added_reactions":"True, if the list of added reactions is available through getMessageAddedReactions ","can_get_statistics":"True, if the message statistics are available through getMessageStatistics ","can_get_message_thread":"True, if information about the message thread is available through getMessageThread and getMessageThreadHistory ","can_get_viewers":"True, if chat members already viewed the message can be received through getMessageViewers ","can_get_media_timestamp_links":"True, if media timestamp links can be generated for media timestamp entities in the message text, caption or web page description through getMessageLink ","can_report_reactions":"True, if reactions on the message can be reported through reportMessageReactions ","has_timestamped_media":"True, if media timestamp entities refers to a media in this message as opposed to a media in the replied message ","is_channel_post":"True, if the message is a channel post. All messages to channels are channel posts, all other messages are not channel posts ","is_topic_message":"True, if the message is a forum topic message ","contains_unread_mention":"True, if the message contains an unread mention for the current user ","date":"Point in time (Unix timestamp) when the message was sent ","edit_date":"Point in time (Unix timestamp) when the message was last edited ","forward_info":"Information about the initial message sender; may be null ","interaction_info":"Information about interactions with the message; may be null ","unread_reactions":"Information about unread reactions added to the message ","reply_in_chat_id":"If non-zero, the identifier of the chat to which the replied message belongs; Currently, only messages in the Replies chat can have different reply_in_chat_id and chat_id ","reply_to_message_id":"If non-zero, the identifier of the message this message is replying to; can be the identifier of a deleted message ","message_thread_id":"If non-zero, the identifier of the message thread the message belongs to; unique within the chat to which the message belongs ","ttl":"For self-destructing messages, the message's TTL (Time To Live), in seconds; 0 if none. TDLib will send updateDeleteMessages or updateMessageContent once the TTL expires ","ttl_expires_in":"Time left before the message expires, in seconds. If the TTL timer isn't started yet, equals to the value of the ttl field ","via_bot_user_id":"If non-zero, the user identifier of the bot through which this message was sent ","author_signature":"For channel posts and anonymous group messages, optional author signature ","media_album_id":"Unique identifier of an album this message belongs to. Only audios, documents, photos and videos can be grouped together in albums ","restriction_reason":"If non-empty, contains a human-readable description of the reason why access to this message must be restricted ","content":"Content of the message ","reply_markup":"Reply markup for the message; may be null","_":"Describes a message "},"type":{"subclass":"message","properties":[{"name":"id","type":"int53"},{"name":"sender_id","type":"MessageSender"},{"name":"chat_id","type":"int53"},{"name":"sending_state","type":"MessageSendingState"},{"name":"scheduling_state","type":"MessageSchedulingState"},{"name":"is_outgoing","type":"Bool"},{"name":"is_pinned","type":"Bool"},{"name":"can_be_edited","type":"Bool"},{"name":"can_be_forwarded","type":"Bool"},{"name":"can_be_saved","type":"Bool"},{"name":"can_be_deleted_only_for_self","type":"Bool"},{"name":"can_be_deleted_for_all_users","type":"Bool"},{"name":"can_get_added_reactions","type":"Bool"},{"name":"can_get_statistics","type":"Bool"},{"name":"can_get_message_thread","type":"Bool"},{"name":"can_get_viewers","type":"Bool"},{"name":"can_get_media_timestamp_links","type":"Bool"},{"name":"can_report_reactions","type":"Bool"},{"name":"has_timestamped_media","type":"Bool"},{"name":"is_channel_post","type":"Bool"},{"name":"is_topic_message","type":"Bool"},{"name":"contains_unread_mention","type":"Bool"},{"name":"date","type":"int32"},{"name":"edit_date","type":"int32"},{"name":"forward_info","type":"messageForwardInfo"},{"name":"interaction_info","type":"messageInteractionInfo"},{"name":"unread_reactions","type":"vector<unreadReaction>"},{"name":"reply_in_chat_id","type":"int53"},{"name":"reply_to_message_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"ttl","type":"int32"},{"name":"ttl_expires_in","type":"double"},{"name":"via_bot_user_id","type":"int53"},{"name":"author_signature","type":"string"},{"name":"media_album_id","type":"int64"},{"name":"restriction_reason","type":"string"},{"name":"content","type":"MessageContent"},{"name":"reply_markup","type":"ReplyMarkup"}],"abstractClass":"Message"}},{"documentation":{"total_count":"Approximate total number of messages found ","messages":"List of messages; messages may be null","_":"Contains a list of messages "},"type":{"subclass":"messages","properties":[{"name":"total_count","type":"int32"},{"name":"messages","type":"vector<message>"}],"abstractClass":"Messages"}},{"documentation":{"total_count":"Approximate total number of messages found; -1 if unknown ","messages":"List of messages ","next_offset":"The offset for the next request. If empty, there are no more results","_":"Contains a list of messages found by a search "},"type":{"subclass":"foundMessages","properties":[{"name":"total_count","type":"int32"},{"name":"messages","type":"vector<message>"},{"name":"next_offset","type":"string"}],"abstractClass":"FoundMessages"}},{"documentation":{"position":"0-based message position in the full list of suitable messages ","message_id":"Message identifier ","date":"Point in time (Unix timestamp) when the message was sent","_":"Contains information about a message in a specific position "},"type":{"subclass":"messagePosition","properties":[{"name":"position","type":"int32"},{"name":"message_id","type":"int53"},{"name":"date","type":"int32"}],"abstractClass":"MessagePosition"}},{"documentation":{"total_count":"Total number of messages found ","positions":"List of message positions","_":"Contains a list of message positions "},"type":{"subclass":"messagePositions","properties":[{"name":"total_count","type":"int32"},{"name":"positions","type":"vector<messagePosition>"}],"abstractClass":"MessagePositions"}},{"documentation":{"total_count":"Total number of found messages sent on the day ","message":"First message sent on the day","_":"Contains information about found messages sent on a specific day "},"type":{"subclass":"messageCalendarDay","properties":[{"name":"total_count","type":"int32"},{"name":"message","type":"message"}],"abstractClass":"MessageCalendarDay"}},{"documentation":{"total_count":"Total number of found messages ","days":"Information about messages sent","_":"Contains information about found messages, split by days according to the option \"utc_time_offset\" "},"type":{"subclass":"messageCalendar","properties":[{"name":"total_count","type":"int32"},{"name":"days","type":"vector<messageCalendarDay>"}],"abstractClass":"MessageCalendar"}},{"documentation":{"message_id":"Message identifier; unique for the chat to which the sponsored message belongs among both ordinary and sponsored messages ","is_recommended":"True, if the message needs to be labeled as \"recommended\" instead of \"sponsored\" ","sponsor_chat_id":"Sponsor chat identifier; 0 if the sponsor chat is accessible through an invite link ","sponsor_chat_info":"Information about the sponsor chat; may be null unless sponsor_chat_id == 0 ","show_chat_photo":"True, if the sponsor's chat photo must be shown ","link":"An internal link to be opened when the sponsored message is clicked; may be null if the sponsor chat needs to be opened instead ","content":"Content of the message. Currently, can be only of the type messageText","_":"Describes a sponsored message "},"type":{"subclass":"sponsoredMessage","properties":[{"name":"message_id","type":"int53"},{"name":"is_recommended","type":"Bool"},{"name":"sponsor_chat_id","type":"int53"},{"name":"sponsor_chat_info","type":"chatInviteLinkInfo"},{"name":"show_chat_photo","type":"Bool"},{"name":"link","type":"InternalLinkType"},{"name":"content","type":"MessageContent"}],"abstractClass":"SponsoredMessage"}},{"documentation":{"messages":"List of sponsored messages ","messages_between":"The minimum number of messages between shown sponsored messages, or 0 if only one sponsored message must be shown after all ordinary messages","_":"Contains a list of sponsored messages "},"type":{"subclass":"sponsoredMessages","properties":[{"name":"messages","type":"vector<sponsoredMessage>"},{"name":"messages_between","type":"int32"}],"abstractClass":"SponsoredMessages"}},{"documentation":{"file_id":"File identifier ","message":"The message with the file ","add_date":"Point in time (Unix timestamp) when the file was added to the download list ","complete_date":"Point in time (Unix timestamp) when the file downloading was completed; 0 if the file downloading isn't completed ","is_paused":"True, if downloading of the file is paused","_":"Describes a file added to file download list "},"type":{"subclass":"fileDownload","properties":[{"name":"file_id","type":"int32"},{"name":"message","type":"message"},{"name":"add_date","type":"int32"},{"name":"complete_date","type":"int32"},{"name":"is_paused","type":"Bool"}],"abstractClass":"FileDownload"}},{"documentation":{"active_count":"Number of active file downloads found, including paused ","paused_count":"Number of paused file downloads found ","completed_count":"Number of completed file downloads found","_":"Contains number of being downloaded and recently downloaded files found "},"type":{"subclass":"downloadedFileCounts","properties":[{"name":"active_count","type":"int32"},{"name":"paused_count","type":"int32"},{"name":"completed_count","type":"int32"}],"abstractClass":"DownloadedFileCounts"}},{"documentation":{"total_counts":"Total number of suitable files, ignoring offset ","files":"The list of files ","next_offset":"The offset for the next request. If empty, there are no more results","_":"Contains a list of downloaded files, found by a search "},"type":{"subclass":"foundFileDownloads","properties":[{"name":"total_counts","type":"downloadedFileCounts"},{"name":"files","type":"vector<fileDownload>"},{"name":"next_offset","type":"string"}],"abstractClass":"FoundFileDownloads"}},{"documentation":{"class":"NotificationSettingsScope ","_":"Notification settings applied to all private and secret chats when the corresponding chat setting has a default value"},"type":{"subclass":"notificationSettingsScopePrivateChats","properties":[],"abstractClass":"NotificationSettingsScope"}},{"documentation":{"_":"Notification settings applied to all basic group and supergroup chats when the corresponding chat setting has a default value"},"type":{"subclass":"notificationSettingsScopeGroupChats","properties":[],"abstractClass":"NotificationSettingsScope"}},{"documentation":{"_":"Notification settings applied to all channel chats when the corresponding chat setting has a default value"},"type":{"subclass":"notificationSettingsScopeChannelChats","properties":[],"abstractClass":"NotificationSettingsScope"}},{"documentation":{"use_default_mute_for":"If true, mute_for is ignored and the value for the relevant type of chat or the forum chat is used instead ","mute_for":"Time left before notifications will be unmuted, in seconds ","use_default_sound":"If true, the value for the relevant type of chat or the forum chat is used instead of sound_id ","sound_id":"Identifier of the notification sound to be played; 0 if sound is disabled ","use_default_show_preview":"If true, show_preview is ignored and the value for the relevant type of chat or the forum chat is used instead ","show_preview":"True, if message content must be displayed in notifications ","use_default_disable_pinned_message_notifications":"If true, disable_pinned_message_notifications is ignored and the value for the relevant type of chat or the forum chat is used instead ","disable_pinned_message_notifications":"If true, notifications for incoming pinned messages will be created as for an ordinary unread message ","use_default_disable_mention_notifications":"If true, disable_mention_notifications is ignored and the value for the relevant type of chat or the forum chat is used instead ","disable_mention_notifications":"If true, notifications for messages with mentions will be created as for an ordinary unread message","_":"Contains information about notification settings for a chat or a froum topic "},"type":{"subclass":"chatNotificationSettings","properties":[{"name":"use_default_mute_for","type":"Bool"},{"name":"mute_for","type":"int32"},{"name":"use_default_sound","type":"Bool"},{"name":"sound_id","type":"int64"},{"name":"use_default_show_preview","type":"Bool"},{"name":"show_preview","type":"Bool"},{"name":"use_default_disable_pinned_message_notifications","type":"Bool"},{"name":"disable_pinned_message_notifications","type":"Bool"},{"name":"use_default_disable_mention_notifications","type":"Bool"},{"name":"disable_mention_notifications","type":"Bool"}],"abstractClass":"ChatNotificationSettings"}},{"documentation":{"mute_for":"Time left before notifications will be unmuted, in seconds ","sound_id":"Identifier of the notification sound to be played; 0 if sound is disabled ","show_preview":"True, if message content must be displayed in notifications ","disable_pinned_message_notifications":"True, if notifications for incoming pinned messages will be created as for an ordinary unread message ","disable_mention_notifications":"True, if notifications for messages with mentions will be created as for an ordinary unread message","_":"Contains information about notification settings for several chats "},"type":{"subclass":"scopeNotificationSettings","properties":[{"name":"mute_for","type":"int32"},{"name":"sound_id","type":"int64"},{"name":"show_preview","type":"Bool"},{"name":"disable_pinned_message_notifications","type":"Bool"},{"name":"disable_mention_notifications","type":"Bool"}],"abstractClass":"ScopeNotificationSettings"}},{"documentation":{"reply_to_message_id":"Identifier of the replied message; 0 if none ","date":"Point in time (Unix timestamp) when the draft was created ","input_message_text":"Content of the message draft; must be of the type inputMessageText","_":"Contains information about a message draft "},"type":{"subclass":"draftMessage","properties":[{"name":"reply_to_message_id","type":"int53"},{"name":"date","type":"int32"},{"name":"input_message_text","type":"InputMessageContent"}],"abstractClass":"DraftMessage"}},{"documentation":{"class":"ChatType ","user_id":"User identifier","_":"An ordinary chat with a user "},"type":{"subclass":"chatTypePrivate","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"ChatType"}},{"documentation":{"basic_group_id":"Basic group identifier","_":"A basic group (a chat with 0-200 other users) "},"type":{"subclass":"chatTypeBasicGroup","properties":[{"name":"basic_group_id","type":"int53"}],"abstractClass":"ChatType"}},{"documentation":{"supergroup_id":"Supergroup or channel identifier ","is_channel":"True, if the supergroup is a channel","_":"A supergroup or channel (with unlimited members) "},"type":{"subclass":"chatTypeSupergroup","properties":[{"name":"supergroup_id","type":"int53"},{"name":"is_channel","type":"Bool"}],"abstractClass":"ChatType"}},{"documentation":{"secret_chat_id":"Secret chat identifier ","user_id":"User identifier of the secret chat peer","_":"A secret chat with a user "},"type":{"subclass":"chatTypeSecret","properties":[{"name":"secret_chat_id","type":"int32"},{"name":"user_id","type":"int53"}],"abstractClass":"ChatType"}},{"documentation":{"title":"The title of the filter; 1-12 characters without line feeds ","icon_name":"The chosen icon name for short filter representation. If non-empty, must be one of \"All\", \"Unread\", \"Unmuted\", \"Bots\", \"Channels\", \"Groups\", \"Private\", \"Custom\", \"Setup\", \"Cat\", \"Crown\", \"Favorite\", \"Flower\", \"Game\", \"Home\", \"Love\", \"Mask\", \"Party\", \"Sport\", \"Study\", \"Trade\", \"Travel\", \"Work\", \"Airplane\", \"Book\", \"Light\", \"Like\", \"Money\", \"Note\", \"Palette\". -If empty, use getChatFilterDefaultIconName to get default icon name for the filter ","pinned_chat_ids":"The chat identifiers of pinned chats in the filtered chat list. There can be up to getOption(\"chat_filter_chosen_chat_count_max\") pinned and always included non-secret chats and the same number of secret chats, but the limit can be increased with Telegram Premium ","included_chat_ids":"The chat identifiers of always included chats in the filtered chat list. There can be up to getOption(\"chat_filter_chosen_chat_count_max\") pinned and always included non-secret chats and the same number of secret chats, but the limit can be increased with Telegram Premium ","excluded_chat_ids":"The chat identifiers of always excluded chats in the filtered chat list. There can be up to getOption(\"chat_filter_chosen_chat_count_max\") always excluded non-secret chats and the same number of secret chats, but the limit can be increased with Telegram Premium ","exclude_muted":"True, if muted chats need to be excluded ","exclude_read":"True, if read chats need to be excluded ","exclude_archived":"True, if archived chats need to be excluded ","include_contacts":"True, if contacts need to be included ","include_non_contacts":"True, if non-contact users need to be included ","include_bots":"True, if bots need to be included ","include_groups":"True, if basic groups and supergroups need to be included ","include_channels":"True, if channels need to be included","_":"Represents a filter of user chats "},"type":{"subclass":"chatFilter","properties":[{"name":"title","type":"string"},{"name":"icon_name","type":"string"},{"name":"pinned_chat_ids","type":"vector<int53>"},{"name":"included_chat_ids","type":"vector<int53>"},{"name":"excluded_chat_ids","type":"vector<int53>"},{"name":"exclude_muted","type":"Bool"},{"name":"exclude_read","type":"Bool"},{"name":"exclude_archived","type":"Bool"},{"name":"include_contacts","type":"Bool"},{"name":"include_non_contacts","type":"Bool"},{"name":"include_bots","type":"Bool"},{"name":"include_groups","type":"Bool"},{"name":"include_channels","type":"Bool"}],"abstractClass":"ChatFilter"}},{"documentation":{"id":"Unique chat filter identifier ","title":"The title of the filter; 1-12 characters without line feeds ","icon_name":"The chosen or default icon name for short filter representation. One of \"All\", \"Unread\", \"Unmuted\", \"Bots\", \"Channels\", \"Groups\", \"Private\", \"Custom\", \"Setup\", \"Cat\", \"Crown\", \"Favorite\", \"Flower\", \"Game\", \"Home\", \"Love\", \"Mask\", \"Party\", \"Sport\", \"Study\", \"Trade\", \"Travel\", \"Work\", \"Airplane\", \"Book\", \"Light\", \"Like\", \"Money\", \"Note\", \"Palette\"","_":"Contains basic information about a chat filter "},"type":{"subclass":"chatFilterInfo","properties":[{"name":"id","type":"int32"},{"name":"title","type":"string"},{"name":"icon_name","type":"string"}],"abstractClass":"ChatFilterInfo"}},{"documentation":{"description":"Chat filter description","filter":"The chat filter ","param_description":"Chat filter description","_":"Describes a recommended chat filter "},"type":{"subclass":"recommendedChatFilter","properties":[{"name":"filter","type":"chatFilter"},{"name":"description","type":"string"}],"abstractClass":"RecommendedChatFilter"}},{"documentation":{"chat_filters":"List of recommended chat filters","_":"Contains a list of recommended chat filters "},"type":{"subclass":"recommendedChatFilters","properties":[{"name":"chat_filters","type":"vector<recommendedChatFilter>"}],"abstractClass":"RecommendedChatFilters"}},{"documentation":{"class":"ChatList ","_":"A main list of chats"},"type":{"subclass":"chatListMain","properties":[],"abstractClass":"ChatList"}},{"documentation":{"_":"A list of chats usually located at the top of the main chat list. Unmuted chats are automatically moved from the Archive to the Main chat list when a new message arrives"},"type":{"subclass":"chatListArchive","properties":[],"abstractClass":"ChatList"}},{"documentation":{"chat_filter_id":"Chat filter identifier","_":"A list of chats belonging to a chat filter "},"type":{"subclass":"chatListFilter","properties":[{"name":"chat_filter_id","type":"int32"}],"abstractClass":"ChatList"}},{"documentation":{"chat_lists":"List of chat lists","_":"Contains a list of chat lists "},"type":{"subclass":"chatLists","properties":[{"name":"chat_lists","type":"vector<ChatList>"}],"abstractClass":"ChatLists"}},{"documentation":{"class":"ChatSource ","_":"The chat is sponsored by the user's MTProxy server"},"type":{"subclass":"chatSourceMtprotoProxy","properties":[],"abstractClass":"ChatSource"}},{"documentation":{"type":"The type of the announcement ","text":"The text of the announcement","_":"The chat contains a public service announcement "},"type":{"subclass":"chatSourcePublicServiceAnnouncement","properties":[{"name":"type","type":"string"},{"name":"text","type":"string"}],"abstractClass":"ChatSource"}},{"documentation":{"list":"The chat list ","order":"A parameter used to determine order of the chat in the chat list. Chats must be sorted by the pair (order, chat.id) in descending order ","is_pinned":"True, if the chat is pinned in the chat list ","source":"Source of the chat in the chat list; may be null","_":"Describes a position of a chat in a chat list "},"type":{"subclass":"chatPosition","properties":[{"name":"list","type":"ChatList"},{"name":"order","type":"int64"},{"name":"is_pinned","type":"Bool"},{"name":"source","type":"ChatSource"}],"abstractClass":"ChatPosition"}},{"documentation":{"class":"ChatAvailableReactions ","_":"All reactions are available in the chat"},"type":{"subclass":"chatAvailableReactionsAll","properties":[],"abstractClass":"ChatAvailableReactions"}},{"documentation":{"reactions":"The list of reactions","_":"Only specific reactions are available in the chat "},"type":{"subclass":"chatAvailableReactionsSome","properties":[{"name":"reactions","type":"vector<ReactionType>"}],"abstractClass":"ChatAvailableReactions"}},{"documentation":{"group_call_id":"Group call identifier of an active video chat; 0 if none. Full information about the video chat can be received through the method getGroupCall ","has_participants":"True, if the video chat has participants ","default_participant_id":"Default group call participant identifier to join the video chat; may be null","_":"Describes a video chat "},"type":{"subclass":"videoChat","properties":[{"name":"group_call_id","type":"int32"},{"name":"has_participants","type":"Bool"},{"name":"default_participant_id","type":"MessageSender"}],"abstractClass":"VideoChat"}},{"documentation":{"id":"Chat unique identifier ","type":"Type of the chat ","title":"Chat title ","photo":"Chat photo; may be null ","permissions":"Actions that non-administrator chat members are allowed to take in the chat ","last_message":"Last message in the chat; may be null ","positions":"Positions of the chat in chat lists ","message_sender_id":"Identifier of a user or chat that is selected to send messages in the chat; may be null if the user can't change message sender ","has_protected_content":"True, if chat content can't be saved locally, forwarded, or copied ","is_marked_as_unread":"True, if the chat is marked as unread ","is_blocked":"True, if the chat is blocked by the current user and private messages from the chat can't be received ","has_scheduled_messages":"True, if the chat has scheduled messages ","can_be_deleted_only_for_self":"True, if the chat messages can be deleted only for the current user while other users will continue to see the messages ","can_be_deleted_for_all_users":"True, if the chat messages can be deleted for all users ","can_be_reported":"True, if the chat can be reported to Telegram moderators through reportChat or reportChatPhoto ","default_disable_notification":"Default value of the disable_notification parameter, used when a message is sent to the chat ","unread_count":"Number of unread messages in the chat ","last_read_inbox_message_id":"Identifier of the last read incoming message ","last_read_outbox_message_id":"Identifier of the last read outgoing message ","unread_mention_count":"Number of unread messages with a mention/reply in the chat ","unread_reaction_count":"Number of messages with unread reactions in the chat ","notification_settings":"Notification settings for the chat ","available_reactions":"Types of reaction, available in the chat ","message_ttl":"Current message Time To Live setting (self-destruct timer) for the chat; 0 if not defined. TTL is counted from the time message or its content is viewed in secret chats and from the send date in other chats ","theme_name":"If non-empty, name of a theme, set for the chat ","action_bar":"Information about actions which must be possible to do through the chat action bar; may be null ","video_chat":"Information about video chat of the chat ","pending_join_requests":"Information about pending join requests; may be null ","reply_markup_message_id":"Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat ","draft_message":"A draft of a message in the chat; may be null ","client_data":"Application-specific data associated with the chat. (For example, the chat scroll position or local chat notification settings can be stored here.) Persistent if the message database is used","_":"A chat. (Can be a private chat, basic group, supergroup, or secret chat) "},"type":{"subclass":"chat","properties":[{"name":"id","type":"int53"},{"name":"type","type":"ChatType"},{"name":"title","type":"string"},{"name":"photo","type":"chatPhotoInfo"},{"name":"permissions","type":"chatPermissions"},{"name":"last_message","type":"message"},{"name":"positions","type":"vector<chatPosition>"},{"name":"message_sender_id","type":"MessageSender"},{"name":"has_protected_content","type":"Bool"},{"name":"is_marked_as_unread","type":"Bool"},{"name":"is_blocked","type":"Bool"},{"name":"has_scheduled_messages","type":"Bool"},{"name":"can_be_deleted_only_for_self","type":"Bool"},{"name":"can_be_deleted_for_all_users","type":"Bool"},{"name":"can_be_reported","type":"Bool"},{"name":"default_disable_notification","type":"Bool"},{"name":"unread_count","type":"int32"},{"name":"last_read_inbox_message_id","type":"int53"},{"name":"last_read_outbox_message_id","type":"int53"},{"name":"unread_mention_count","type":"int32"},{"name":"unread_reaction_count","type":"int32"},{"name":"notification_settings","type":"chatNotificationSettings"},{"name":"available_reactions","type":"ChatAvailableReactions"},{"name":"message_ttl","type":"int32"},{"name":"theme_name","type":"string"},{"name":"action_bar","type":"ChatActionBar"},{"name":"video_chat","type":"videoChat"},{"name":"pending_join_requests","type":"chatJoinRequestsInfo"},{"name":"reply_markup_message_id","type":"int53"},{"name":"draft_message","type":"draftMessage"},{"name":"client_data","type":"string"}],"abstractClass":"Chat"}},{"documentation":{"total_count":"Approximate total number of chats found ","chat_ids":"List of chat identifiers","_":"Represents a list of chats "},"type":{"subclass":"chats","properties":[{"name":"total_count","type":"int32"},{"name":"chat_ids","type":"vector<int53>"}],"abstractClass":"Chats"}},{"documentation":{"chat_id":"Chat identifier ","distance":"Distance to the chat location, in meters","_":"Describes a chat located nearby "},"type":{"subclass":"chatNearby","properties":[{"name":"chat_id","type":"int53"},{"name":"distance","type":"int32"}],"abstractClass":"ChatNearby"}},{"documentation":{"users_nearby":"List of users nearby ","supergroups_nearby":"List of location-based supergroups nearby","_":"Represents a list of chats located nearby "},"type":{"subclass":"chatsNearby","properties":[{"name":"users_nearby","type":"vector<chatNearby>"},{"name":"supergroups_nearby","type":"vector<chatNearby>"}],"abstractClass":"ChatsNearby"}},{"documentation":{"class":"PublicChatType ","_":"The chat is public, because it has an active username"},"type":{"subclass":"publicChatTypeHasUsername","properties":[],"abstractClass":"PublicChatType"}},{"documentation":{"_":"The chat is public, because it is a location-based supergroup"},"type":{"subclass":"publicChatTypeIsLocationBased","properties":[],"abstractClass":"PublicChatType"}},{"documentation":{"class":"ChatActionBar ","can_unarchive":"If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings","_":"The chat can be reported as spam using the method reportChat with the reason chatReportReasonSpam. If the chat is a private chat with a user with an emoji status, then a notice about emoji status usage must be shown "},"type":{"subclass":"chatActionBarReportSpam","properties":[{"name":"can_unarchive","type":"Bool"}],"abstractClass":"ChatActionBar"}},{"documentation":{"_":"The chat is a location-based supergroup, which can be reported as having unrelated location using the method reportChat with the reason chatReportReasonUnrelatedLocation"},"type":{"subclass":"chatActionBarReportUnrelatedLocation","properties":[],"abstractClass":"ChatActionBar"}},{"documentation":{"_":"The chat is a recently created group chat to which new members can be invited"},"type":{"subclass":"chatActionBarInviteMembers","properties":[],"abstractClass":"ChatActionBar"}},{"documentation":{"can_unarchive":"If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings ","distance":"If non-negative, the current user was found by the peer through searchChatsNearby and this is the distance between the users","_":"The chat is a private or secret chat, which can be reported using the method reportChat, or the other user can be blocked using the method toggleMessageSenderIsBlocked, or the other user can be added to the contact list using the method addContact. If the chat is a private chat with a user with an emoji status, then a notice about emoji status usage must be shown "},"type":{"subclass":"chatActionBarReportAddBlock","properties":[{"name":"can_unarchive","type":"Bool"},{"name":"distance","type":"int32"}],"abstractClass":"ChatActionBar"}},{"documentation":{"_":"The chat is a private or secret chat and the other user can be added to the contact list using the method addContact"},"type":{"subclass":"chatActionBarAddContact","properties":[],"abstractClass":"ChatActionBar"}},{"documentation":{"_":"The chat is a private or secret chat with a mutual contact and the user's phone number can be shared with the other user using the method sharePhoneNumber"},"type":{"subclass":"chatActionBarSharePhoneNumber","properties":[],"abstractClass":"ChatActionBar"}},{"documentation":{"title":"Title of the chat to which the join request was sent ","is_channel":"True, if the join request was sent to a channel chat ","request_date":"Point in time (Unix timestamp) when the join request was sent","_":"The chat is a private chat with an administrator of a chat to which the user sent join request "},"type":{"subclass":"chatActionBarJoinRequest","properties":[{"name":"title","type":"string"},{"name":"is_channel","type":"Bool"},{"name":"request_date","type":"int32"}],"abstractClass":"ChatActionBar"}},{"documentation":{"class":"KeyboardButtonType ","_":"A simple button, with text that must be sent when the button is pressed"},"type":{"subclass":"keyboardButtonTypeText","properties":[],"abstractClass":"KeyboardButtonType"}},{"documentation":{"_":"A button that sends the user's phone number when pressed; available only in private chats"},"type":{"subclass":"keyboardButtonTypeRequestPhoneNumber","properties":[],"abstractClass":"KeyboardButtonType"}},{"documentation":{"_":"A button that sends the user's location when pressed; available only in private chats"},"type":{"subclass":"keyboardButtonTypeRequestLocation","properties":[],"abstractClass":"KeyboardButtonType"}},{"documentation":{"force_regular":"If true, only regular polls must be allowed to create ","force_quiz":"If true, only polls in quiz mode must be allowed to create","_":"A button that allows the user to create and send a poll when pressed; available only in private chats "},"type":{"subclass":"keyboardButtonTypeRequestPoll","properties":[{"name":"force_regular","type":"Bool"},{"name":"force_quiz","type":"Bool"}],"abstractClass":"KeyboardButtonType"}},{"documentation":{"url":"An HTTP URL to pass to getWebAppUrl","_":"A button that opens a Web App by calling getWebAppUrl "},"type":{"subclass":"keyboardButtonTypeWebApp","properties":[{"name":"url","type":"string"}],"abstractClass":"KeyboardButtonType"}},{"documentation":{"text":"Text of the button ","type":"Type of the button","_":"Represents a single button in a bot keyboard "},"type":{"subclass":"keyboardButton","properties":[{"name":"text","type":"string"},{"name":"type","type":"KeyboardButtonType"}],"abstractClass":"KeyboardButton"}},{"documentation":{"class":"InlineKeyboardButtonType ","url":"HTTP or tg:// URL to open","_":"A button that opens a specified URL "},"type":{"subclass":"inlineKeyboardButtonTypeUrl","properties":[{"name":"url","type":"string"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"url":"An HTTP URL to pass to getLoginUrlInfo ","id":"Unique button identifier ","forward_text":"If non-empty, new text of the button in forwarded messages","_":"A button that opens a specified URL and automatically authorize the current user by calling getLoginUrlInfo "},"type":{"subclass":"inlineKeyboardButtonTypeLoginUrl","properties":[{"name":"url","type":"string"},{"name":"id","type":"int53"},{"name":"forward_text","type":"string"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"url":"An HTTP URL to pass to openWebApp","_":"A button that opens a Web App by calling openWebApp "},"type":{"subclass":"inlineKeyboardButtonTypeWebApp","properties":[{"name":"url","type":"string"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"data":"Data to be sent to the bot via a callback query","_":"A button that sends a callback query to a bot "},"type":{"subclass":"inlineKeyboardButtonTypeCallback","properties":[{"name":"data","type":"bytes"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"data":"Data to be sent to the bot via a callback query","_":"A button that asks for the 2-step verification password of the current user and then sends a callback query to a bot "},"type":{"subclass":"inlineKeyboardButtonTypeCallbackWithPassword","properties":[{"name":"data","type":"bytes"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"_":"A button with a game that sends a callback query to a bot. This button must be in the first column and row of the keyboard and can be attached only to a message with content of the type messageGame"},"type":{"subclass":"inlineKeyboardButtonTypeCallbackGame","properties":[],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"query":"Inline query to be sent to the bot ","in_current_chat":"True, if the inline query must be sent from the current chat","_":"A button that forces an inline query to the bot to be inserted in the input field "},"type":{"subclass":"inlineKeyboardButtonTypeSwitchInline","properties":[{"name":"query","type":"string"},{"name":"in_current_chat","type":"Bool"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"_":"A button to buy something. This button must be in the first column and row of the keyboard and can be attached only to a message with content of the type messageInvoice"},"type":{"subclass":"inlineKeyboardButtonTypeBuy","properties":[],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"user_id":"User identifier","_":"A button with a user reference to be handled in the same way as textEntityTypeMentionName entities "},"type":{"subclass":"inlineKeyboardButtonTypeUser","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"InlineKeyboardButtonType"}},{"documentation":{"text":"Text of the button ","type":"Type of the button","_":"Represents a single button in an inline keyboard "},"type":{"subclass":"inlineKeyboardButton","properties":[{"name":"text","type":"string"},{"name":"type","type":"InlineKeyboardButtonType"}],"abstractClass":"InlineKeyboardButton"}},{"documentation":{"class":"ReplyMarkup ","is_personal":"True, if the keyboard is removed only for the mentioned users or the target user of a reply","_":"Instructs application to remove the keyboard once this message has been received. This kind of keyboard can't be received in an incoming message; instead, updateChatReplyMarkup with message_id == 0 will be sent "},"type":{"subclass":"replyMarkupRemoveKeyboard","properties":[{"name":"is_personal","type":"Bool"}],"abstractClass":"ReplyMarkup"}},{"documentation":{"is_personal":"True, if a forced reply must automatically be shown to the current user. For outgoing messages, specify true to show the forced reply only for the mentioned users and for the target user of a reply ","input_field_placeholder":"If non-empty, the placeholder to be shown in the input field when the reply is active; 0-64 characters","_":"Instructs application to force a reply to this message "},"type":{"subclass":"replyMarkupForceReply","properties":[{"name":"is_personal","type":"Bool"},{"name":"input_field_placeholder","type":"string"}],"abstractClass":"ReplyMarkup"}},{"documentation":{"rows":"A list of rows of bot keyboard buttons ","resize_keyboard":"True, if the application needs to resize the keyboard vertically ","one_time":"True, if the application needs to hide the keyboard after use ","is_personal":"True, if the keyboard must automatically be shown to the current user. For outgoing messages, specify true to show the keyboard only for the mentioned users and for the target user of a reply ","input_field_placeholder":"If non-empty, the placeholder to be shown in the input field when the keyboard is active; 0-64 characters","_":"Contains a custom keyboard layout to quickly reply to bots "},"type":{"subclass":"replyMarkupShowKeyboard","properties":[{"name":"rows","type":"vector<vector<keyboardButton>>"},{"name":"resize_keyboard","type":"Bool"},{"name":"one_time","type":"Bool"},{"name":"is_personal","type":"Bool"},{"name":"input_field_placeholder","type":"string"}],"abstractClass":"ReplyMarkup"}},{"documentation":{"rows":"A list of rows of inline keyboard buttons","_":"Contains an inline keyboard layout "},"type":{"subclass":"replyMarkupInlineKeyboard","properties":[{"name":"rows","type":"vector<vector<inlineKeyboardButton>>"}],"abstractClass":"ReplyMarkup"}},{"documentation":{"class":"LoginUrlInfo ","url":"The URL to open ","skip_confirm":"True, if there is no need to show an ordinary open URL confirm","_":"An HTTP url needs to be open "},"type":{"subclass":"loginUrlInfoOpen","properties":[{"name":"url","type":"string"},{"name":"skip_confirm","type":"Bool"}],"abstractClass":"LoginUrlInfo"}},{"documentation":{"url":"An HTTP URL to be opened ","domain":"A domain of the URL ","bot_user_id":"User identifier of a bot linked with the website ","request_write_access":"True, if the user needs to be requested to give the permission to the bot to send them messages","_":"An authorization confirmation dialog needs to be shown to the user "},"type":{"subclass":"loginUrlInfoRequestConfirmation","properties":[{"name":"url","type":"string"},{"name":"domain","type":"string"},{"name":"bot_user_id","type":"int53"},{"name":"request_write_access","type":"Bool"}],"abstractClass":"LoginUrlInfo"}},{"documentation":{"launch_id":"Unique identifier for the Web App launch ","url":"A Web App URL to open in a web view","_":"Contains information about a Web App "},"type":{"subclass":"webAppInfo","properties":[{"name":"launch_id","type":"int64"},{"name":"url","type":"string"}],"abstractClass":"WebAppInfo"}},{"documentation":{"chat_id":"Identifier of the chat to which the message thread belongs ","message_thread_id":"Message thread identifier, unique within the chat ","reply_info":"Information about the message thread; may be null for forum topic threads ","unread_message_count":"Approximate number of unread messages in the message thread ","messages":"The messages from which the thread starts. The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id) ","draft_message":"A draft of a message in the message thread; may be null","_":"Contains information about a message thread "},"type":{"subclass":"messageThreadInfo","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"reply_info","type":"messageReplyInfo"},{"name":"unread_message_count","type":"int32"},{"name":"messages","type":"vector<message>"},{"name":"draft_message","type":"draftMessage"}],"abstractClass":"MessageThreadInfo"}},{"documentation":{"color":"Color of the topic icon in RGB format ","custom_emoji_id":"Unique identifier of the custom emoji shown on the topic icon; 0 if none","_":"Describes a forum topic icon "},"type":{"subclass":"forumTopicIcon","properties":[{"name":"color","type":"int32"},{"name":"custom_emoji_id","type":"int64"}],"abstractClass":"ForumTopicIcon"}},{"documentation":{"message_thread_id":"Message thread identifier of the topic ","name":"Name of the topic ","icon":"Icon of the topic ","creation_date":"Date the topic was created ","creator_id":"Identifier of the creator of the topic ","is_general":"True, if the topic is the General topic list ","is_outgoing":"True, if the topic was created by the current user ","is_closed":"True, if the topic is closed ","is_hidden":"True, if the topic is hidden above the topic list and closed; for General topic only","_":"Contains basic information about a forum topic "},"type":{"subclass":"forumTopicInfo","properties":[{"name":"message_thread_id","type":"int53"},{"name":"name","type":"string"},{"name":"icon","type":"forumTopicIcon"},{"name":"creation_date","type":"int32"},{"name":"creator_id","type":"MessageSender"},{"name":"is_general","type":"Bool"},{"name":"is_outgoing","type":"Bool"},{"name":"is_closed","type":"Bool"},{"name":"is_hidden","type":"Bool"}],"abstractClass":"ForumTopicInfo"}},{"documentation":{"info":"Basic information about the topic ","last_message":"Last message in the topic; may be null if unknown ","is_pinned":"True, if the topic is pinned in the topic list ","unread_count":"Number of unread messages in the topic ","last_read_inbox_message_id":"Identifier of the last read incoming message ","last_read_outbox_message_id":"Identifier of the last read outgoing message ","unread_mention_count":"Number of unread messages with a mention/reply in the topic ","unread_reaction_count":"Number of messages with unread reactions in the topic ","notification_settings":"Notification settings for the topic ","draft_message":"A draft of a message in the topic; may be null","_":"Describes a forum topic "},"type":{"subclass":"forumTopic","properties":[{"name":"info","type":"forumTopicInfo"},{"name":"last_message","type":"message"},{"name":"is_pinned","type":"Bool"},{"name":"unread_count","type":"int32"},{"name":"last_read_inbox_message_id","type":"int53"},{"name":"last_read_outbox_message_id","type":"int53"},{"name":"unread_mention_count","type":"int32"},{"name":"unread_reaction_count","type":"int32"},{"name":"notification_settings","type":"chatNotificationSettings"},{"name":"draft_message","type":"draftMessage"}],"abstractClass":"ForumTopic"}},{"documentation":{"total_count":"Approximate total number of forum topics found ","topics":"List of forum topics ","next_offset_date":"Offset date for the next getForumTopics request ","next_offset_message_id":"Offset message identifier for the next getForumTopics request ","next_offset_message_thread_id":"Offset message thread identifier for the next getForumTopics request","_":"Describes a list of forum topics "},"type":{"subclass":"forumTopics","properties":[{"name":"total_count","type":"int32"},{"name":"topics","type":"vector<forumTopic>"},{"name":"next_offset_date","type":"int32"},{"name":"next_offset_message_id","type":"int53"},{"name":"next_offset_message_thread_id","type":"int53"}],"abstractClass":"ForumTopics"}},{"documentation":{"class":"RichText ","text":"Text","_":"A plain text "},"type":{"subclass":"richTextPlain","properties":[{"name":"text","type":"string"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"A bold rich text "},"type":{"subclass":"richTextBold","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"An italicized rich text "},"type":{"subclass":"richTextItalic","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"An underlined rich text "},"type":{"subclass":"richTextUnderline","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"A strikethrough rich text "},"type":{"subclass":"richTextStrikethrough","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"A fixed-width rich text "},"type":{"subclass":"richTextFixed","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text ","url":"URL ","is_cached":"True, if the URL has cached instant view server-side","_":"A rich text URL link "},"type":{"subclass":"richTextUrl","properties":[{"name":"text","type":"RichText"},{"name":"url","type":"string"},{"name":"is_cached","type":"Bool"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text ","email_address":"Email address","_":"A rich text email link "},"type":{"subclass":"richTextEmailAddress","properties":[{"name":"text","type":"RichText"},{"name":"email_address","type":"string"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"A subscript rich text "},"type":{"subclass":"richTextSubscript","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"A superscript rich text "},"type":{"subclass":"richTextSuperscript","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text","_":"A marked rich text "},"type":{"subclass":"richTextMarked","properties":[{"name":"text","type":"RichText"}],"abstractClass":"RichText"}},{"documentation":{"text":"Text ","phone_number":"Phone number","_":"A rich text phone number "},"type":{"subclass":"richTextPhoneNumber","properties":[{"name":"text","type":"RichText"},{"name":"phone_number","type":"string"}],"abstractClass":"RichText"}},{"documentation":{"document":"The image represented as a document. The image can be in GIF, JPEG or PNG format ","width":"Width of a bounding box in which the image must be shown; 0 if unknown ","height":"Height of a bounding box in which the image must be shown; 0 if unknown","_":"A small image inside the text "},"type":{"subclass":"richTextIcon","properties":[{"name":"document","type":"document"},{"name":"width","type":"int32"},{"name":"height","type":"int32"}],"abstractClass":"RichText"}},{"documentation":{"text":"The text ","anchor_name":"The name of a richTextAnchor object, which is the first element of the target richTexts object ","url":"An HTTP URL, opening the reference","_":"A reference to a richTexts object on the same web page "},"type":{"subclass":"richTextReference","properties":[{"name":"text","type":"RichText"},{"name":"anchor_name","type":"string"},{"name":"url","type":"string"}],"abstractClass":"RichText"}},{"documentation":{"name":"Anchor name","_":"An anchor "},"type":{"subclass":"richTextAnchor","properties":[{"name":"name","type":"string"}],"abstractClass":"RichText"}},{"documentation":{"text":"The link text ","anchor_name":"The anchor name. If the name is empty, the link must bring back to top ","url":"An HTTP URL, opening the anchor","_":"A link to an anchor on the same web page "},"type":{"subclass":"richTextAnchorLink","properties":[{"name":"text","type":"RichText"},{"name":"anchor_name","type":"string"},{"name":"url","type":"string"}],"abstractClass":"RichText"}},{"documentation":{"texts":"Texts","_":"A concatenation of rich texts "},"type":{"subclass":"richTexts","properties":[{"name":"texts","type":"vector<RichText>"}],"abstractClass":"RichText"}},{"documentation":{"text":"Content of the caption ","credit":"Block credit (like HTML tag <cite>)","_":"Contains a caption of an instant view web page block, consisting of a text and a trailing credit "},"type":{"subclass":"pageBlockCaption","properties":[{"name":"text","type":"RichText"},{"name":"credit","type":"RichText"}],"abstractClass":"PageBlockCaption"}},{"documentation":{"label":"Item label ","page_blocks":"Item blocks","_":"Describes an item of a list page block "},"type":{"subclass":"pageBlockListItem","properties":[{"name":"label","type":"string"},{"name":"page_blocks","type":"vector<PageBlock>"}],"abstractClass":"PageBlockListItem"}},{"documentation":{"class":"PageBlockHorizontalAlignment ","_":"The content must be left-aligned"},"type":{"subclass":"pageBlockHorizontalAlignmentLeft","properties":[],"abstractClass":"PageBlockHorizontalAlignment"}},{"documentation":{"_":"The content must be center-aligned"},"type":{"subclass":"pageBlockHorizontalAlignmentCenter","properties":[],"abstractClass":"PageBlockHorizontalAlignment"}},{"documentation":{"_":"The content must be right-aligned"},"type":{"subclass":"pageBlockHorizontalAlignmentRight","properties":[],"abstractClass":"PageBlockHorizontalAlignment"}},{"documentation":{"class":"PageBlockVerticalAlignment ","_":"The content must be top-aligned"},"type":{"subclass":"pageBlockVerticalAlignmentTop","properties":[],"abstractClass":"PageBlockVerticalAlignment"}},{"documentation":{"_":"The content must be middle-aligned"},"type":{"subclass":"pageBlockVerticalAlignmentMiddle","properties":[],"abstractClass":"PageBlockVerticalAlignment"}},{"documentation":{"_":"The content must be bottom-aligned"},"type":{"subclass":"pageBlockVerticalAlignmentBottom","properties":[],"abstractClass":"PageBlockVerticalAlignment"}},{"documentation":{"text":"Cell text; may be null. If the text is null, then the cell must be invisible ","is_header":"True, if it is a header cell ","colspan":"The number of columns the cell spans ","rowspan":"The number of rows the cell spans ","align":"Horizontal cell content alignment ","valign":"Vertical cell content alignment","_":"Represents a cell of a table "},"type":{"subclass":"pageBlockTableCell","properties":[{"name":"text","type":"RichText"},{"name":"is_header","type":"Bool"},{"name":"colspan","type":"int32"},{"name":"rowspan","type":"int32"},{"name":"align","type":"PageBlockHorizontalAlignment"},{"name":"valign","type":"PageBlockVerticalAlignment"}],"abstractClass":"PageBlockTableCell"}},{"documentation":{"description":"Article description; may be empty ","url":"Related article URL ","title":"Article title; may be empty ","param_description":"Article description; may be empty ","photo":"Article photo; may be null ","author":"Article author; may be empty ","publish_date":"Point in time (Unix timestamp) when the article was published; 0 if unknown","_":"Contains information about a related article "},"type":{"subclass":"pageBlockRelatedArticle","properties":[{"name":"url","type":"string"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"photo","type":"photo"},{"name":"author","type":"string"},{"name":"publish_date","type":"int32"}],"abstractClass":"PageBlockRelatedArticle"}},{"documentation":{"class":"PageBlock ","title":"Title","_":"The title of a page "},"type":{"subclass":"pageBlockTitle","properties":[{"name":"title","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"subtitle":"Subtitle","_":"The subtitle of a page "},"type":{"subclass":"pageBlockSubtitle","properties":[{"name":"subtitle","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"author":"Author ","publish_date":"Point in time (Unix timestamp) when the article was published; 0 if unknown","_":"The author and publishing date of a page "},"type":{"subclass":"pageBlockAuthorDate","properties":[{"name":"author","type":"RichText"},{"name":"publish_date","type":"int32"}],"abstractClass":"PageBlock"}},{"documentation":{"header":"Header","_":"A header "},"type":{"subclass":"pageBlockHeader","properties":[{"name":"header","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"subheader":"Subheader","_":"A subheader "},"type":{"subclass":"pageBlockSubheader","properties":[{"name":"subheader","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"kicker":"Kicker","_":"A kicker "},"type":{"subclass":"pageBlockKicker","properties":[{"name":"kicker","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"text":"Paragraph text","_":"A text paragraph "},"type":{"subclass":"pageBlockParagraph","properties":[{"name":"text","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"text":"Paragraph text ","language":"Programming language for which the text needs to be formatted","_":"A preformatted text paragraph "},"type":{"subclass":"pageBlockPreformatted","properties":[{"name":"text","type":"RichText"},{"name":"language","type":"string"}],"abstractClass":"PageBlock"}},{"documentation":{"footer":"Footer","_":"The footer of a page "},"type":{"subclass":"pageBlockFooter","properties":[{"name":"footer","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"_":"An empty block separating a page"},"type":{"subclass":"pageBlockDivider","properties":[],"abstractClass":"PageBlock"}},{"documentation":{"name":"Name of the anchor","_":"An invisible anchor on a page, which can be used in a URL to open the page from the specified anchor "},"type":{"subclass":"pageBlockAnchor","properties":[{"name":"name","type":"string"}],"abstractClass":"PageBlock"}},{"documentation":{"items":"The items of the list","_":"A list of data blocks "},"type":{"subclass":"pageBlockList","properties":[{"name":"items","type":"vector<pageBlockListItem>"}],"abstractClass":"PageBlock"}},{"documentation":{"text":"Quote text ","credit":"Quote credit","_":"A block quote "},"type":{"subclass":"pageBlockBlockQuote","properties":[{"name":"text","type":"RichText"},{"name":"credit","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"text":"Quote text ","credit":"Quote credit","_":"A pull quote "},"type":{"subclass":"pageBlockPullQuote","properties":[{"name":"text","type":"RichText"},{"name":"credit","type":"RichText"}],"abstractClass":"PageBlock"}},{"documentation":{"animation":"Animation file; may be null ","caption":"Animation caption ","need_autoplay":"True, if the animation must be played automatically","_":"An animation "},"type":{"subclass":"pageBlockAnimation","properties":[{"name":"animation","type":"animation"},{"name":"caption","type":"pageBlockCaption"},{"name":"need_autoplay","type":"Bool"}],"abstractClass":"PageBlock"}},{"documentation":{"audio":"Audio file; may be null ","caption":"Audio file caption","_":"An audio file "},"type":{"subclass":"pageBlockAudio","properties":[{"name":"audio","type":"audio"},{"name":"caption","type":"pageBlockCaption"}],"abstractClass":"PageBlock"}},{"documentation":{"photo":"Photo file; may be null ","caption":"Photo caption ","url":"URL that needs to be opened when the photo is clicked","_":"A photo "},"type":{"subclass":"pageBlockPhoto","properties":[{"name":"photo","type":"photo"},{"name":"caption","type":"pageBlockCaption"},{"name":"url","type":"string"}],"abstractClass":"PageBlock"}},{"documentation":{"video":"Video file; may be null ","caption":"Video caption ","need_autoplay":"True, if the video must be played automatically ","is_looped":"True, if the video must be looped","_":"A video "},"type":{"subclass":"pageBlockVideo","properties":[{"name":"video","type":"video"},{"name":"caption","type":"pageBlockCaption"},{"name":"need_autoplay","type":"Bool"},{"name":"is_looped","type":"Bool"}],"abstractClass":"PageBlock"}},{"documentation":{"voice_note":"Voice note; may be null ","caption":"Voice note caption","_":"A voice note "},"type":{"subclass":"pageBlockVoiceNote","properties":[{"name":"voice_note","type":"voiceNote"},{"name":"caption","type":"pageBlockCaption"}],"abstractClass":"PageBlock"}},{"documentation":{"cover":"Cover","_":"A page cover "},"type":{"subclass":"pageBlockCover","properties":[{"name":"cover","type":"PageBlock"}],"abstractClass":"PageBlock"}},{"documentation":{"url":"Web page URL, if available ","html":"HTML-markup of the embedded page ","poster_photo":"Poster photo, if available; may be null ","width":"Block width; 0 if unknown ","height":"Block height; 0 if unknown ","caption":"Block caption ","is_full_width":"True, if the block must be full width ","allow_scrolling":"True, if scrolling needs to be allowed","_":"An embedded web page "},"type":{"subclass":"pageBlockEmbedded","properties":[{"name":"url","type":"string"},{"name":"html","type":"string"},{"name":"poster_photo","type":"photo"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"caption","type":"pageBlockCaption"},{"name":"is_full_width","type":"Bool"},{"name":"allow_scrolling","type":"Bool"}],"abstractClass":"PageBlock"}},{"documentation":{"url":"Web page URL ","author":"Post author ","author_photo":"Post author photo; may be null ","date":"Point in time (Unix timestamp) when the post was created; 0 if unknown ","page_blocks":"Post content ","caption":"Post caption","_":"An embedded post "},"type":{"subclass":"pageBlockEmbeddedPost","properties":[{"name":"url","type":"string"},{"name":"author","type":"string"},{"name":"author_photo","type":"photo"},{"name":"date","type":"int32"},{"name":"page_blocks","type":"vector<PageBlock>"},{"name":"caption","type":"pageBlockCaption"}],"abstractClass":"PageBlock"}},{"documentation":{"page_blocks":"Collage item contents ","caption":"Block caption","_":"A collage "},"type":{"subclass":"pageBlockCollage","properties":[{"name":"page_blocks","type":"vector<PageBlock>"},{"name":"caption","type":"pageBlockCaption"}],"abstractClass":"PageBlock"}},{"documentation":{"page_blocks":"Slideshow item contents ","caption":"Block caption","_":"A slideshow "},"type":{"subclass":"pageBlockSlideshow","properties":[{"name":"page_blocks","type":"vector<PageBlock>"},{"name":"caption","type":"pageBlockCaption"}],"abstractClass":"PageBlock"}},{"documentation":{"title":"Chat title ","photo":"Chat photo; may be null ","username":"Chat username by which all other information about the chat can be resolved","_":"A link to a chat "},"type":{"subclass":"pageBlockChatLink","properties":[{"name":"title","type":"string"},{"name":"photo","type":"chatPhotoInfo"},{"name":"username","type":"string"}],"abstractClass":"PageBlock"}},{"documentation":{"caption":"Table caption ","cells":"Table cells ","is_bordered":"True, if the table is bordered ","is_striped":"True, if the table is striped","_":"A table "},"type":{"subclass":"pageBlockTable","properties":[{"name":"caption","type":"RichText"},{"name":"cells","type":"vector<vector<pageBlockTableCell>>"},{"name":"is_bordered","type":"Bool"},{"name":"is_striped","type":"Bool"}],"abstractClass":"PageBlock"}},{"documentation":{"header":"Always visible heading for the block ","page_blocks":"Block contents ","is_open":"True, if the block is open by default","_":"A collapsible block "},"type":{"subclass":"pageBlockDetails","properties":[{"name":"header","type":"RichText"},{"name":"page_blocks","type":"vector<PageBlock>"},{"name":"is_open","type":"Bool"}],"abstractClass":"PageBlock"}},{"documentation":{"header":"Block header ","articles":"List of related articles","_":"Related articles "},"type":{"subclass":"pageBlockRelatedArticles","properties":[{"name":"header","type":"RichText"},{"name":"articles","type":"vector<pageBlockRelatedArticle>"}],"abstractClass":"PageBlock"}},{"documentation":{"location":"Location of the map center ","zoom":"Map zoom level ","width":"Map width ","height":"Map height ","caption":"Block caption","_":"A map "},"type":{"subclass":"pageBlockMap","properties":[{"name":"location","type":"location"},{"name":"zoom","type":"int32"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"caption","type":"pageBlockCaption"}],"abstractClass":"PageBlock"}},{"documentation":{"page_blocks":"Content of the web page ","view_count":"Number of the instant view views; 0 if unknown ","version":"Version of the instant view; currently, can be 1 or 2 ","is_rtl":"True, if the instant view must be shown from right to left ","is_full":"True, if the instant view contains the full page. A network request might be needed to get the full web page instant view ","feedback_link":"An internal link to be opened to leave feedback about the instant view","_":"Describes an instant view page for a web page "},"type":{"subclass":"webPageInstantView","properties":[{"name":"page_blocks","type":"vector<PageBlock>"},{"name":"view_count","type":"int32"},{"name":"version","type":"int32"},{"name":"is_rtl","type":"Bool"},{"name":"is_full","type":"Bool"},{"name":"feedback_link","type":"InternalLinkType"}],"abstractClass":"WebPageInstantView"}},{"documentation":{"description":"Description of the content ","url":"Original URL of the link ","display_url":"URL to display ","type":"Type of the web page. Can be: article, photo, audio, video, document, profile, app, or something else ","site_name":"Short name of the site (e.g., Google Docs, App Store) ","title":"Title of the content ","param_description":"Description of the content ","photo":"Image representing the content; may be null ","embed_url":"URL to show in the embedded preview ","embed_type":"MIME type of the embedded preview, (e.g., text/html or video/mp4) ","embed_width":"Width of the embedded preview ","embed_height":"Height of the embedded preview ","duration":"Duration of the content, in seconds ","author":"Author of the content ","animation":"Preview of the content as an animation, if available; may be null ","audio":"Preview of the content as an audio file, if available; may be null ","document":"Preview of the content as a document, if available; may be null ","sticker":"Preview of the content as a sticker for small WEBP files, if available; may be null ","video":"Preview of the content as a video, if available; may be null ","video_note":"Preview of the content as a video note, if available; may be null ","voice_note":"Preview of the content as a voice note, if available; may be null ","instant_view_version":"Version of instant view, available for the web page (currently, can be 1 or 2), 0 if none","_":"Describes a web page preview "},"type":{"subclass":"webPage","properties":[{"name":"url","type":"string"},{"name":"display_url","type":"string"},{"name":"type","type":"string"},{"name":"site_name","type":"string"},{"name":"title","type":"string"},{"name":"description","type":"formattedText"},{"name":"photo","type":"photo"},{"name":"embed_url","type":"string"},{"name":"embed_type","type":"string"},{"name":"embed_width","type":"int32"},{"name":"embed_height","type":"int32"},{"name":"duration","type":"int32"},{"name":"author","type":"string"},{"name":"animation","type":"animation"},{"name":"audio","type":"audio"},{"name":"document","type":"document"},{"name":"sticker","type":"sticker"},{"name":"video","type":"video"},{"name":"video_note","type":"videoNote"},{"name":"voice_note","type":"voiceNote"},{"name":"instant_view_version","type":"int32"}],"abstractClass":"WebPage"}},{"documentation":{"country_code":"A two-letter ISO 3166-1 alpha-2 country code ","name":"Native name of the country ","english_name":"English name of the country ","is_hidden":"True, if the country must be hidden from the list of all countries ","calling_codes":"List of country calling codes","_":"Contains information about a country "},"type":{"subclass":"countryInfo","properties":[{"name":"country_code","type":"string"},{"name":"name","type":"string"},{"name":"english_name","type":"string"},{"name":"is_hidden","type":"Bool"},{"name":"calling_codes","type":"vector<string>"}],"abstractClass":"CountryInfo"}},{"documentation":{"countries":"The list of countries","_":"Contains information about countries "},"type":{"subclass":"countries","properties":[{"name":"countries","type":"vector<countryInfo>"}],"abstractClass":"Countries"}},{"documentation":{"country":"Information about the country to which the phone number belongs; may be null ","country_calling_code":"The part of the phone number denoting country calling code or its part ","formatted_phone_number":"The phone number without country calling code formatted accordingly to local rules. Expected digits are returned as '-', but even more digits might be entered by the user","_":"Contains information about a phone number "},"type":{"subclass":"phoneNumberInfo","properties":[{"name":"country","type":"countryInfo"},{"name":"country_calling_code","type":"string"},{"name":"formatted_phone_number","type":"string"}],"abstractClass":"PhoneNumberInfo"}},{"documentation":{"text":"Action text ","url":"The URL to be opened","_":"Describes an action associated with a bank card number "},"type":{"subclass":"bankCardActionOpenUrl","properties":[{"name":"text","type":"string"},{"name":"url","type":"string"}],"abstractClass":"BankCardActionOpenUrl"}},{"documentation":{"title":"Title of the bank card description ","actions":"Actions that can be done with the bank card number","_":"Information about a bank card "},"type":{"subclass":"bankCardInfo","properties":[{"name":"title","type":"string"},{"name":"actions","type":"vector<bankCardActionOpenUrl>"}],"abstractClass":"BankCardInfo"}},{"documentation":{"country_code":"A two-letter ISO 3166-1 alpha-2 country code ","state":"State, if applicable ","city":"City ","street_line1":"First line of the address ","street_line2":"Second line of the address ","postal_code":"Address postal code","_":"Describes an address "},"type":{"subclass":"address","properties":[{"name":"country_code","type":"string"},{"name":"state","type":"string"},{"name":"city","type":"string"},{"name":"street_line1","type":"string"},{"name":"street_line2","type":"string"},{"name":"postal_code","type":"string"}],"abstractClass":"Address"}},{"documentation":{"background_color":"A color of the background in the RGB24 format ","secondary_background_color":"A secondary color for the background in the RGB24 format ","text_color":"A color of text in the RGB24 format ","hint_color":"A color of hints in the RGB24 format ","link_color":"A color of links in the RGB24 format ","button_color":"A color of the buttons in the RGB24 format ","button_text_color":"A color of text on the buttons in the RGB24 format","_":"Contains parameters of the application theme "},"type":{"subclass":"themeParameters","properties":[{"name":"background_color","type":"int32"},{"name":"secondary_background_color","type":"int32"},{"name":"text_color","type":"int32"},{"name":"hint_color","type":"int32"},{"name":"link_color","type":"int32"},{"name":"button_color","type":"int32"},{"name":"button_text_color","type":"int32"}],"abstractClass":"ThemeParameters"}},{"documentation":{"label":"Label for this portion of the product price ","amount":"Currency amount in the smallest units of the currency","_":"Portion of the price of a product (e.g., \"delivery cost\", \"tax amount\") "},"type":{"subclass":"labeledPricePart","properties":[{"name":"label","type":"string"},{"name":"amount","type":"int53"}],"abstractClass":"LabeledPricePart"}},{"documentation":{"currency":"ISO 4217 currency code ","price_parts":"A list of objects used to calculate the total price of the product ","max_tip_amount":"The maximum allowed amount of tip in the smallest units of the currency ","suggested_tip_amounts":"Suggested amounts of tip in the smallest units of the currency ","recurring_payment_terms_of_service_url":"An HTTP URL with terms of service for recurring payments. If non-empty, the invoice payment will result in recurring payments and the user must accept the terms of service before allowed to pay ","is_test":"True, if the payment is a test payment ","need_name":"True, if the user's name is needed for payment ","need_phone_number":"True, if the user's phone number is needed for payment ","need_email_address":"True, if the user's email address is needed for payment ","need_shipping_address":"True, if the user's shipping address is needed for payment ","send_phone_number_to_provider":"True, if the user's phone number will be sent to the provider ","send_email_address_to_provider":"True, if the user's email address will be sent to the provider ","is_flexible":"True, if the total price depends on the shipping method","_":"Product invoice "},"type":{"subclass":"invoice","properties":[{"name":"currency","type":"string"},{"name":"price_parts","type":"vector<labeledPricePart>"},{"name":"max_tip_amount","type":"int53"},{"name":"suggested_tip_amounts","type":"vector<int53>"},{"name":"recurring_payment_terms_of_service_url","type":"string"},{"name":"is_test","type":"Bool"},{"name":"need_name","type":"Bool"},{"name":"need_phone_number","type":"Bool"},{"name":"need_email_address","type":"Bool"},{"name":"need_shipping_address","type":"Bool"},{"name":"send_phone_number_to_provider","type":"Bool"},{"name":"send_email_address_to_provider","type":"Bool"},{"name":"is_flexible","type":"Bool"}],"abstractClass":"Invoice"}},{"documentation":{"name":"Name of the user ","phone_number":"Phone number of the user ","email_address":"Email address of the user ","shipping_address":"Shipping address for this order; may be null","_":"Order information "},"type":{"subclass":"orderInfo","properties":[{"name":"name","type":"string"},{"name":"phone_number","type":"string"},{"name":"email_address","type":"string"},{"name":"shipping_address","type":"address"}],"abstractClass":"OrderInfo"}},{"documentation":{"id":"Shipping option identifier ","title":"Option title ","price_parts":"A list of objects used to calculate the total shipping costs","_":"One shipping option "},"type":{"subclass":"shippingOption","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"price_parts","type":"vector<labeledPricePart>"}],"abstractClass":"ShippingOption"}},{"documentation":{"id":"Unique identifier of the saved credentials ","title":"Title of the saved credentials","_":"Contains information about saved payment credentials "},"type":{"subclass":"savedCredentials","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"}],"abstractClass":"SavedCredentials"}},{"documentation":{"class":"InputCredentials ","saved_credentials_id":"Identifier of the saved credentials","_":"Applies if a user chooses some previously saved payment credentials. To use their previously saved credentials, the user must have a valid temporary password "},"type":{"subclass":"inputCredentialsSaved","properties":[{"name":"saved_credentials_id","type":"string"}],"abstractClass":"InputCredentials"}},{"documentation":{"data":"JSON-encoded data with the credential identifier from the payment provider ","allow_save":"True, if the credential identifier can be saved on the server side","_":"Applies if a user enters new credentials on a payment provider website "},"type":{"subclass":"inputCredentialsNew","properties":[{"name":"data","type":"string"},{"name":"allow_save","type":"Bool"}],"abstractClass":"InputCredentials"}},{"documentation":{"data":"JSON-encoded data with the credential identifier","_":"Applies if a user enters new credentials using Apple Pay "},"type":{"subclass":"inputCredentialsApplePay","properties":[{"name":"data","type":"string"}],"abstractClass":"InputCredentials"}},{"documentation":{"data":"JSON-encoded data with the credential identifier","_":"Applies if a user enters new credentials using Google Pay "},"type":{"subclass":"inputCredentialsGooglePay","properties":[{"name":"data","type":"string"}],"abstractClass":"InputCredentials"}},{"documentation":{"class":"PaymentProvider ","public_token":"Public payment token","_":"Smart Glocal payment provider "},"type":{"subclass":"paymentProviderSmartGlocal","properties":[{"name":"public_token","type":"string"}],"abstractClass":"PaymentProvider"}},{"documentation":{"publishable_key":"Stripe API publishable key ","need_country":"True, if the user country must be provided ","need_postal_code":"True, if the user ZIP/postal code must be provided ","need_cardholder_name":"True, if the cardholder name must be provided","_":"Stripe payment provider "},"type":{"subclass":"paymentProviderStripe","properties":[{"name":"publishable_key","type":"string"},{"name":"need_country","type":"Bool"},{"name":"need_postal_code","type":"Bool"},{"name":"need_cardholder_name","type":"Bool"}],"abstractClass":"PaymentProvider"}},{"documentation":{"url":"Payment form URL","_":"Some other payment provider, for which a web payment form must be shown "},"type":{"subclass":"paymentProviderOther","properties":[{"name":"url","type":"string"}],"abstractClass":"PaymentProvider"}},{"documentation":{"title":"Title for the payment option ","url":"Payment form URL to be opened in a web view","_":"Describes an additional payment option "},"type":{"subclass":"paymentOption","properties":[{"name":"title","type":"string"},{"name":"url","type":"string"}],"abstractClass":"PaymentOption"}},{"documentation":{"id":"The payment form identifier ","invoice":"Full information about the invoice ","seller_bot_user_id":"User identifier of the seller bot ","payment_provider_user_id":"User identifier of the payment provider bot ","payment_provider":"Information about the payment provider ","additional_payment_options":"The list of additional payment options ","saved_order_info":"Saved server-side order information; may be null ","saved_credentials":"The list of saved payment credentials ","can_save_credentials":"True, if the user can choose to save credentials ","need_password":"True, if the user will be able to save credentials, if sets up a 2-step verification password ","product_title":"Product title ","product_description":"Product description ","product_photo":"Product photo; may be null","_":"Contains information about an invoice payment form "},"type":{"subclass":"paymentForm","properties":[{"name":"id","type":"int64"},{"name":"invoice","type":"invoice"},{"name":"seller_bot_user_id","type":"int53"},{"name":"payment_provider_user_id","type":"int53"},{"name":"payment_provider","type":"PaymentProvider"},{"name":"additional_payment_options","type":"vector<paymentOption>"},{"name":"saved_order_info","type":"orderInfo"},{"name":"saved_credentials","type":"vector<savedCredentials>"},{"name":"can_save_credentials","type":"Bool"},{"name":"need_password","type":"Bool"},{"name":"product_title","type":"string"},{"name":"product_description","type":"formattedText"},{"name":"product_photo","type":"photo"}],"abstractClass":"PaymentForm"}},{"documentation":{"order_info_id":"Temporary identifier of the order information ","shipping_options":"Available shipping options","_":"Contains a temporary identifier of validated order information, which is stored for one hour. Also contains the available shipping options "},"type":{"subclass":"validatedOrderInfo","properties":[{"name":"order_info_id","type":"string"},{"name":"shipping_options","type":"vector<shippingOption>"}],"abstractClass":"ValidatedOrderInfo"}},{"documentation":{"success":"True, if the payment request was successful; otherwise the verification_url will be non-empty ","verification_url":"URL for additional payment credentials verification","_":"Contains the result of a payment request "},"type":{"subclass":"paymentResult","properties":[{"name":"success","type":"Bool"},{"name":"verification_url","type":"string"}],"abstractClass":"PaymentResult"}},{"documentation":{"description":"Product description ","title":"Product title ","param_description":"Product description ","photo":"Product photo; may be null ","date":"Point in time (Unix timestamp) when the payment was made ","seller_bot_user_id":"User identifier of the seller bot ","payment_provider_user_id":"User identifier of the payment provider bot ","invoice":"Information about the invoice ","order_info":"Order information; may be null ","shipping_option":"Chosen shipping option; may be null ","credentials_title":"Title of the saved credentials chosen by the buyer ","tip_amount":"The amount of tip chosen by the buyer in the smallest units of the currency","_":"Contains information about a successful payment "},"type":{"subclass":"paymentReceipt","properties":[{"name":"title","type":"string"},{"name":"description","type":"formattedText"},{"name":"photo","type":"photo"},{"name":"date","type":"int32"},{"name":"seller_bot_user_id","type":"int53"},{"name":"payment_provider_user_id","type":"int53"},{"name":"invoice","type":"invoice"},{"name":"order_info","type":"orderInfo"},{"name":"shipping_option","type":"shippingOption"},{"name":"credentials_title","type":"string"},{"name":"tip_amount","type":"int53"}],"abstractClass":"PaymentReceipt"}},{"documentation":{"class":"InputInvoice ","chat_id":"Chat identifier of the message ","message_id":"Message identifier","_":"An invoice from a message of the type messageInvoice "},"type":{"subclass":"inputInvoiceMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"InputInvoice"}},{"documentation":{"name":"Name of the invoice","_":"An invoice from a link of the type internalLinkTypeInvoice "},"type":{"subclass":"inputInvoiceName","properties":[{"name":"name","type":"string"}],"abstractClass":"InputInvoice"}},{"documentation":{"class":"MessageExtendedMedia ","width":"Media width; 0 if unknown ","height":"Media height; 0 if unknown ","duration":"Media duration; 0 if unknown ","minithumbnail":"Media minithumbnail; may be null ","caption":"Media caption","_":"The media is hidden until the invoice is paid "},"type":{"subclass":"messageExtendedMediaPreview","properties":[{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"duration","type":"int32"},{"name":"minithumbnail","type":"minithumbnail"},{"name":"caption","type":"formattedText"}],"abstractClass":"MessageExtendedMedia"}},{"documentation":{"photo":"The photo ","caption":"Photo caption","_":"The media is a photo "},"type":{"subclass":"messageExtendedMediaPhoto","properties":[{"name":"photo","type":"photo"},{"name":"caption","type":"formattedText"}],"abstractClass":"MessageExtendedMedia"}},{"documentation":{"video":"The video ","caption":"Photo caption","_":"The media is a video "},"type":{"subclass":"messageExtendedMediaVideo","properties":[{"name":"video","type":"video"},{"name":"caption","type":"formattedText"}],"abstractClass":"MessageExtendedMedia"}},{"documentation":{"caption":"Media caption","_":"The media is unuspported "},"type":{"subclass":"messageExtendedMediaUnsupported","properties":[{"name":"caption","type":"formattedText"}],"abstractClass":"MessageExtendedMedia"}},{"documentation":{"file":"The file ","date":"Point in time (Unix timestamp) when the file was uploaded","_":"File with the date it was uploaded "},"type":{"subclass":"datedFile","properties":[{"name":"file","type":"file"},{"name":"date","type":"int32"}],"abstractClass":"DatedFile"}},{"documentation":{"class":"PassportElementType ","_":"A Telegram Passport element containing the user's personal details"},"type":{"subclass":"passportElementTypePersonalDetails","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's passport"},"type":{"subclass":"passportElementTypePassport","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's driver license"},"type":{"subclass":"passportElementTypeDriverLicense","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's identity card"},"type":{"subclass":"passportElementTypeIdentityCard","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's internal passport"},"type":{"subclass":"passportElementTypeInternalPassport","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's address"},"type":{"subclass":"passportElementTypeAddress","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's utility bill"},"type":{"subclass":"passportElementTypeUtilityBill","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's bank statement"},"type":{"subclass":"passportElementTypeBankStatement","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's rental agreement"},"type":{"subclass":"passportElementTypeRentalAgreement","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the registration page of the user's passport"},"type":{"subclass":"passportElementTypePassportRegistration","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's temporary registration"},"type":{"subclass":"passportElementTypeTemporaryRegistration","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's phone number"},"type":{"subclass":"passportElementTypePhoneNumber","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"_":"A Telegram Passport element containing the user's email address"},"type":{"subclass":"passportElementTypeEmailAddress","properties":[],"abstractClass":"PassportElementType"}},{"documentation":{"day":"Day of the month; 1-31 ","month":"Month; 1-12 ","year":"Year; 1-9999","_":"Represents a date according to the Gregorian calendar "},"type":{"subclass":"date","properties":[{"name":"day","type":"int32"},{"name":"month","type":"int32"},{"name":"year","type":"int32"}],"abstractClass":"Date"}},{"documentation":{"first_name":"First name of the user written in English; 1-255 characters ","middle_name":"Middle name of the user written in English; 0-255 characters ","last_name":"Last name of the user written in English; 1-255 characters ","native_first_name":"Native first name of the user; 1-255 characters ","native_middle_name":"Native middle name of the user; 0-255 characters ","native_last_name":"Native last name of the user; 1-255 characters ","birthdate":"Birthdate of the user ","gender":"Gender of the user, \"male\" or \"female\" ","country_code":"A two-letter ISO 3166-1 alpha-2 country code of the user's country ","residence_country_code":"A two-letter ISO 3166-1 alpha-2 country code of the user's residence country","_":"Contains the user's personal details "},"type":{"subclass":"personalDetails","properties":[{"name":"first_name","type":"string"},{"name":"middle_name","type":"string"},{"name":"last_name","type":"string"},{"name":"native_first_name","type":"string"},{"name":"native_middle_name","type":"string"},{"name":"native_last_name","type":"string"},{"name":"birthdate","type":"date"},{"name":"gender","type":"string"},{"name":"country_code","type":"string"},{"name":"residence_country_code","type":"string"}],"abstractClass":"PersonalDetails"}},{"documentation":{"number":"Document number; 1-24 characters ","expiry_date":"Document expiry date; may be null if not applicable ","front_side":"Front side of the document ","reverse_side":"Reverse side of the document; only for driver license and identity card; may be null ","selfie":"Selfie with the document; may be null ","translation":"List of files containing a certified English translation of the document","_":"An identity document "},"type":{"subclass":"identityDocument","properties":[{"name":"number","type":"string"},{"name":"expiry_date","type":"date"},{"name":"front_side","type":"datedFile"},{"name":"reverse_side","type":"datedFile"},{"name":"selfie","type":"datedFile"},{"name":"translation","type":"vector<datedFile>"}],"abstractClass":"IdentityDocument"}},{"documentation":{"number":"Document number; 1-24 characters ","expiry_date":"Document expiry date; pass null if not applicable ","front_side":"Front side of the document ","reverse_side":"Reverse side of the document; only for driver license and identity card; pass null otherwise ","selfie":"Selfie with the document; pass null if unavailable ","translation":"List of files containing a certified English translation of the document","_":"An identity document to be saved to Telegram Passport "},"type":{"subclass":"inputIdentityDocument","properties":[{"name":"number","type":"string"},{"name":"expiry_date","type":"date"},{"name":"front_side","type":"InputFile"},{"name":"reverse_side","type":"InputFile"},{"name":"selfie","type":"InputFile"},{"name":"translation","type":"vector<InputFile>"}],"abstractClass":"InputIdentityDocument"}},{"documentation":{"files":"List of files containing the pages of the document ","translation":"List of files containing a certified English translation of the document","_":"A personal document, containing some information about a user "},"type":{"subclass":"personalDocument","properties":[{"name":"files","type":"vector<datedFile>"},{"name":"translation","type":"vector<datedFile>"}],"abstractClass":"PersonalDocument"}},{"documentation":{"files":"List of files containing the pages of the document ","translation":"List of files containing a certified English translation of the document","_":"A personal document to be saved to Telegram Passport "},"type":{"subclass":"inputPersonalDocument","properties":[{"name":"files","type":"vector<InputFile>"},{"name":"translation","type":"vector<InputFile>"}],"abstractClass":"InputPersonalDocument"}},{"documentation":{"class":"PassportElement ","personal_details":"Personal details of the user","_":"A Telegram Passport element containing the user's personal details "},"type":{"subclass":"passportElementPersonalDetails","properties":[{"name":"personal_details","type":"personalDetails"}],"abstractClass":"PassportElement"}},{"documentation":{"passport":"Passport","_":"A Telegram Passport element containing the user's passport "},"type":{"subclass":"passportElementPassport","properties":[{"name":"passport","type":"identityDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"driver_license":"Driver license","_":"A Telegram Passport element containing the user's driver license "},"type":{"subclass":"passportElementDriverLicense","properties":[{"name":"driver_license","type":"identityDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"identity_card":"Identity card","_":"A Telegram Passport element containing the user's identity card "},"type":{"subclass":"passportElementIdentityCard","properties":[{"name":"identity_card","type":"identityDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"internal_passport":"Internal passport","_":"A Telegram Passport element containing the user's internal passport "},"type":{"subclass":"passportElementInternalPassport","properties":[{"name":"internal_passport","type":"identityDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"address":"Address","_":"A Telegram Passport element containing the user's address "},"type":{"subclass":"passportElementAddress","properties":[{"name":"address","type":"address"}],"abstractClass":"PassportElement"}},{"documentation":{"utility_bill":"Utility bill","_":"A Telegram Passport element containing the user's utility bill "},"type":{"subclass":"passportElementUtilityBill","properties":[{"name":"utility_bill","type":"personalDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"bank_statement":"Bank statement","_":"A Telegram Passport element containing the user's bank statement "},"type":{"subclass":"passportElementBankStatement","properties":[{"name":"bank_statement","type":"personalDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"rental_agreement":"Rental agreement","_":"A Telegram Passport element containing the user's rental agreement "},"type":{"subclass":"passportElementRentalAgreement","properties":[{"name":"rental_agreement","type":"personalDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"passport_registration":"Passport registration pages","_":"A Telegram Passport element containing the user's passport registration pages "},"type":{"subclass":"passportElementPassportRegistration","properties":[{"name":"passport_registration","type":"personalDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"temporary_registration":"Temporary registration","_":"A Telegram Passport element containing the user's temporary registration "},"type":{"subclass":"passportElementTemporaryRegistration","properties":[{"name":"temporary_registration","type":"personalDocument"}],"abstractClass":"PassportElement"}},{"documentation":{"phone_number":"Phone number","_":"A Telegram Passport element containing the user's phone number "},"type":{"subclass":"passportElementPhoneNumber","properties":[{"name":"phone_number","type":"string"}],"abstractClass":"PassportElement"}},{"documentation":{"email_address":"Email address","_":"A Telegram Passport element containing the user's email address "},"type":{"subclass":"passportElementEmailAddress","properties":[{"name":"email_address","type":"string"}],"abstractClass":"PassportElement"}},{"documentation":{"class":"InputPassportElement ","personal_details":"Personal details of the user","_":"A Telegram Passport element to be saved containing the user's personal details "},"type":{"subclass":"inputPassportElementPersonalDetails","properties":[{"name":"personal_details","type":"personalDetails"}],"abstractClass":"InputPassportElement"}},{"documentation":{"passport":"The passport to be saved","_":"A Telegram Passport element to be saved containing the user's passport "},"type":{"subclass":"inputPassportElementPassport","properties":[{"name":"passport","type":"inputIdentityDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"driver_license":"The driver license to be saved","_":"A Telegram Passport element to be saved containing the user's driver license "},"type":{"subclass":"inputPassportElementDriverLicense","properties":[{"name":"driver_license","type":"inputIdentityDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"identity_card":"The identity card to be saved","_":"A Telegram Passport element to be saved containing the user's identity card "},"type":{"subclass":"inputPassportElementIdentityCard","properties":[{"name":"identity_card","type":"inputIdentityDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"internal_passport":"The internal passport to be saved","_":"A Telegram Passport element to be saved containing the user's internal passport "},"type":{"subclass":"inputPassportElementInternalPassport","properties":[{"name":"internal_passport","type":"inputIdentityDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"address":"The address to be saved","_":"A Telegram Passport element to be saved containing the user's address "},"type":{"subclass":"inputPassportElementAddress","properties":[{"name":"address","type":"address"}],"abstractClass":"InputPassportElement"}},{"documentation":{"utility_bill":"The utility bill to be saved","_":"A Telegram Passport element to be saved containing the user's utility bill "},"type":{"subclass":"inputPassportElementUtilityBill","properties":[{"name":"utility_bill","type":"inputPersonalDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"bank_statement":"The bank statement to be saved","_":"A Telegram Passport element to be saved containing the user's bank statement "},"type":{"subclass":"inputPassportElementBankStatement","properties":[{"name":"bank_statement","type":"inputPersonalDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"rental_agreement":"The rental agreement to be saved","_":"A Telegram Passport element to be saved containing the user's rental agreement "},"type":{"subclass":"inputPassportElementRentalAgreement","properties":[{"name":"rental_agreement","type":"inputPersonalDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"passport_registration":"The passport registration page to be saved","_":"A Telegram Passport element to be saved containing the user's passport registration "},"type":{"subclass":"inputPassportElementPassportRegistration","properties":[{"name":"passport_registration","type":"inputPersonalDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"temporary_registration":"The temporary registration document to be saved","_":"A Telegram Passport element to be saved containing the user's temporary registration "},"type":{"subclass":"inputPassportElementTemporaryRegistration","properties":[{"name":"temporary_registration","type":"inputPersonalDocument"}],"abstractClass":"InputPassportElement"}},{"documentation":{"phone_number":"The phone number to be saved","_":"A Telegram Passport element to be saved containing the user's phone number "},"type":{"subclass":"inputPassportElementPhoneNumber","properties":[{"name":"phone_number","type":"string"}],"abstractClass":"InputPassportElement"}},{"documentation":{"email_address":"The email address to be saved","_":"A Telegram Passport element to be saved containing the user's email address "},"type":{"subclass":"inputPassportElementEmailAddress","properties":[{"name":"email_address","type":"string"}],"abstractClass":"InputPassportElement"}},{"documentation":{"elements":"Telegram Passport elements","_":"Contains information about saved Telegram Passport elements "},"type":{"subclass":"passportElements","properties":[{"name":"elements","type":"vector<PassportElement>"}],"abstractClass":"PassportElements"}},{"documentation":{"class":"PassportElementErrorSource ","_":"The element contains an error in an unspecified place. The error will be considered resolved when new data is added"},"type":{"subclass":"passportElementErrorSourceUnspecified","properties":[],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"field_name":"Field name","_":"One of the data fields contains an error. The error will be considered resolved when the value of the field changes "},"type":{"subclass":"passportElementErrorSourceDataField","properties":[{"name":"field_name","type":"string"}],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"_":"The front side of the document contains an error. The error will be considered resolved when the file with the front side changes"},"type":{"subclass":"passportElementErrorSourceFrontSide","properties":[],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"_":"The reverse side of the document contains an error. The error will be considered resolved when the file with the reverse side changes"},"type":{"subclass":"passportElementErrorSourceReverseSide","properties":[],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"_":"The selfie with the document contains an error. The error will be considered resolved when the file with the selfie changes"},"type":{"subclass":"passportElementErrorSourceSelfie","properties":[],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"file_index":"Index of a file with the error","_":"One of files with the translation of the document contains an error. The error will be considered resolved when the file changes "},"type":{"subclass":"passportElementErrorSourceTranslationFile","properties":[{"name":"file_index","type":"int32"}],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"_":"The translation of the document contains an error. The error will be considered resolved when the list of translation files changes"},"type":{"subclass":"passportElementErrorSourceTranslationFiles","properties":[],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"file_index":"Index of a file with the error","_":"The file contains an error. The error will be considered resolved when the file changes "},"type":{"subclass":"passportElementErrorSourceFile","properties":[{"name":"file_index","type":"int32"}],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"_":"The list of attached files contains an error. The error will be considered resolved when the list of files changes"},"type":{"subclass":"passportElementErrorSourceFiles","properties":[],"abstractClass":"PassportElementErrorSource"}},{"documentation":{"type":"Type of the Telegram Passport element which has the error ","message":"Error message ","source":"Error source","_":"Contains the description of an error in a Telegram Passport element "},"type":{"subclass":"passportElementError","properties":[{"name":"type","type":"PassportElementType"},{"name":"message","type":"string"},{"name":"source","type":"PassportElementErrorSource"}],"abstractClass":"PassportElementError"}},{"documentation":{"type":"Type of the element ","is_selfie_required":"True, if a selfie is required with the identity document ","is_translation_required":"True, if a certified English translation is required with the document ","is_native_name_required":"True, if personal details must include the user's name in the language of their country of residence","_":"Contains information about a Telegram Passport element that was requested by a service "},"type":{"subclass":"passportSuitableElement","properties":[{"name":"type","type":"PassportElementType"},{"name":"is_selfie_required","type":"Bool"},{"name":"is_translation_required","type":"Bool"},{"name":"is_native_name_required","type":"Bool"}],"abstractClass":"PassportSuitableElement"}},{"documentation":{"suitable_elements":"List of Telegram Passport elements any of which is enough to provide","_":"Contains a description of the required Telegram Passport element that was requested by a service "},"type":{"subclass":"passportRequiredElement","properties":[{"name":"suitable_elements","type":"vector<passportSuitableElement>"}],"abstractClass":"PassportRequiredElement"}},{"documentation":{"id":"Unique identifier of the authorization form ","required_elements":"Telegram Passport elements that must be provided to complete the form ","privacy_policy_url":"URL for the privacy policy of the service; may be empty","_":"Contains information about a Telegram Passport authorization form that was requested "},"type":{"subclass":"passportAuthorizationForm","properties":[{"name":"id","type":"int32"},{"name":"required_elements","type":"vector<passportRequiredElement>"},{"name":"privacy_policy_url","type":"string"}],"abstractClass":"PassportAuthorizationForm"}},{"documentation":{"elements":"Telegram Passport elements ","errors":"Errors in the elements that are already available","_":"Contains information about a Telegram Passport elements and corresponding errors "},"type":{"subclass":"passportElementsWithErrors","properties":[{"name":"elements","type":"vector<PassportElement>"},{"name":"errors","type":"vector<passportElementError>"}],"abstractClass":"PassportElementsWithErrors"}},{"documentation":{"data":"The encrypted credentials ","hash":"The decrypted data hash ","secret":"Secret for data decryption, encrypted with the service's public key","_":"Contains encrypted Telegram Passport data credentials "},"type":{"subclass":"encryptedCredentials","properties":[{"name":"data","type":"bytes"},{"name":"hash","type":"bytes"},{"name":"secret","type":"bytes"}],"abstractClass":"EncryptedCredentials"}},{"documentation":{"type":"Type of Telegram Passport element ","data":"Encrypted JSON-encoded data about the user ","front_side":"The front side of an identity document ","reverse_side":"The reverse side of an identity document; may be null ","selfie":"Selfie with the document; may be null ","translation":"List of files containing a certified English translation of the document ","files":"List of attached files ","value":"Unencrypted data, phone number or email address ","hash":"Hash of the entire element","_":"Contains information about an encrypted Telegram Passport element; for bots only "},"type":{"subclass":"encryptedPassportElement","properties":[{"name":"type","type":"PassportElementType"},{"name":"data","type":"bytes"},{"name":"front_side","type":"datedFile"},{"name":"reverse_side","type":"datedFile"},{"name":"selfie","type":"datedFile"},{"name":"translation","type":"vector<datedFile>"},{"name":"files","type":"vector<datedFile>"},{"name":"value","type":"string"},{"name":"hash","type":"string"}],"abstractClass":"EncryptedPassportElement"}},{"documentation":{"class":"InputPassportElementErrorSource ","element_hash":"Current hash of the entire element","_":"The element contains an error in an unspecified place. The error will be considered resolved when new data is added "},"type":{"subclass":"inputPassportElementErrorSourceUnspecified","properties":[{"name":"element_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"field_name":"Field name ","data_hash":"Current data hash","_":"A data field contains an error. The error is considered resolved when the field's value changes "},"type":{"subclass":"inputPassportElementErrorSourceDataField","properties":[{"name":"field_name","type":"string"},{"name":"data_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hash":"Current hash of the file containing the front side","_":"The front side of the document contains an error. The error is considered resolved when the file with the front side of the document changes "},"type":{"subclass":"inputPassportElementErrorSourceFrontSide","properties":[{"name":"file_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hash":"Current hash of the file containing the reverse side","_":"The reverse side of the document contains an error. The error is considered resolved when the file with the reverse side of the document changes "},"type":{"subclass":"inputPassportElementErrorSourceReverseSide","properties":[{"name":"file_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hash":"Current hash of the file containing the selfie","_":"The selfie contains an error. The error is considered resolved when the file with the selfie changes "},"type":{"subclass":"inputPassportElementErrorSourceSelfie","properties":[{"name":"file_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hash":"Current hash of the file containing the translation","_":"One of the files containing the translation of the document contains an error. The error is considered resolved when the file with the translation changes "},"type":{"subclass":"inputPassportElementErrorSourceTranslationFile","properties":[{"name":"file_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hashes":"Current hashes of all files with the translation","_":"The translation of the document contains an error. The error is considered resolved when the list of files changes "},"type":{"subclass":"inputPassportElementErrorSourceTranslationFiles","properties":[{"name":"file_hashes","type":"vector<bytes>"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hash":"Current hash of the file which has the error","_":"The file contains an error. The error is considered resolved when the file changes "},"type":{"subclass":"inputPassportElementErrorSourceFile","properties":[{"name":"file_hash","type":"bytes"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"file_hashes":"Current hashes of all attached files","_":"The list of attached files contains an error. The error is considered resolved when the file list changes "},"type":{"subclass":"inputPassportElementErrorSourceFiles","properties":[{"name":"file_hashes","type":"vector<bytes>"}],"abstractClass":"InputPassportElementErrorSource"}},{"documentation":{"type":"Type of Telegram Passport element that has the error ","message":"Error message ","source":"Error source","_":"Contains the description of an error in a Telegram Passport element; for bots only "},"type":{"subclass":"inputPassportElementError","properties":[{"name":"type","type":"PassportElementType"},{"name":"message","type":"string"},{"name":"source","type":"InputPassportElementErrorSource"}],"abstractClass":"InputPassportElementError"}},{"documentation":{"class":"MessageContent ","text":"Text of the message ","web_page":"A preview of the web page that's mentioned in the text; may be null","_":"A text message "},"type":{"subclass":"messageText","properties":[{"name":"text","type":"formattedText"},{"name":"web_page","type":"webPage"}],"abstractClass":"MessageContent"}},{"documentation":{"animation":"The animation description ","caption":"Animation caption ","is_secret":"True, if the animation thumbnail must be blurred and the animation must be shown only while tapped","_":"An animation message (GIF-style). "},"type":{"subclass":"messageAnimation","properties":[{"name":"animation","type":"animation"},{"name":"caption","type":"formattedText"},{"name":"is_secret","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"audio":"The audio description ","caption":"Audio caption","_":"An audio message "},"type":{"subclass":"messageAudio","properties":[{"name":"audio","type":"audio"},{"name":"caption","type":"formattedText"}],"abstractClass":"MessageContent"}},{"documentation":{"document":"The document description ","caption":"Document caption","_":"A document message (general file) "},"type":{"subclass":"messageDocument","properties":[{"name":"document","type":"document"},{"name":"caption","type":"formattedText"}],"abstractClass":"MessageContent"}},{"documentation":{"photo":"The photo description ","caption":"Photo caption ","is_secret":"True, if the photo must be blurred and must be shown only while tapped","_":"A photo message "},"type":{"subclass":"messagePhoto","properties":[{"name":"photo","type":"photo"},{"name":"caption","type":"formattedText"},{"name":"is_secret","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"An expired photo message (self-destructed after TTL has elapsed)"},"type":{"subclass":"messageExpiredPhoto","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"sticker":"The sticker description ","is_premium":"True, if premium animation of the sticker must be played","_":"A sticker message "},"type":{"subclass":"messageSticker","properties":[{"name":"sticker","type":"sticker"},{"name":"is_premium","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"video":"The video description ","caption":"Video caption ","is_secret":"True, if the video thumbnail must be blurred and the video must be shown only while tapped","_":"A video message "},"type":{"subclass":"messageVideo","properties":[{"name":"video","type":"video"},{"name":"caption","type":"formattedText"},{"name":"is_secret","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"An expired video message (self-destructed after TTL has elapsed)"},"type":{"subclass":"messageExpiredVideo","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"video_note":"The video note description ","is_viewed":"True, if at least one of the recipients has viewed the video note ","is_secret":"True, if the video note thumbnail must be blurred and the video note must be shown only while tapped","_":"A video note message "},"type":{"subclass":"messageVideoNote","properties":[{"name":"video_note","type":"videoNote"},{"name":"is_viewed","type":"Bool"},{"name":"is_secret","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"voice_note":"The voice note description ","caption":"Voice note caption ","is_listened":"True, if at least one of the recipients has listened to the voice note","_":"A voice note message "},"type":{"subclass":"messageVoiceNote","properties":[{"name":"voice_note","type":"voiceNote"},{"name":"caption","type":"formattedText"},{"name":"is_listened","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"location":"The location description ","live_period":"Time relative to the message send date, for which the location can be updated, in seconds ","expires_in":"Left time for which the location can be updated, in seconds. updateMessageContent is not sent when this field changes ","heading":"For live locations, a direction in which the location moves, in degrees; 1-360. If 0 the direction is unknown ","proximity_alert_radius":"For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). 0 if the notification is disabled. Available only for the message sender","_":"A message with a location "},"type":{"subclass":"messageLocation","properties":[{"name":"location","type":"location"},{"name":"live_period","type":"int32"},{"name":"expires_in","type":"int32"},{"name":"heading","type":"int32"},{"name":"proximity_alert_radius","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"venue":"The venue description","_":"A message with information about a venue "},"type":{"subclass":"messageVenue","properties":[{"name":"venue","type":"venue"}],"abstractClass":"MessageContent"}},{"documentation":{"contact":"The contact description","_":"A message with a user contact "},"type":{"subclass":"messageContact","properties":[{"name":"contact","type":"contact"}],"abstractClass":"MessageContent"}},{"documentation":{"animated_emoji":"The animated emoji ","emoji":"The corresponding emoji","_":"A message with an animated emoji "},"type":{"subclass":"messageAnimatedEmoji","properties":[{"name":"animated_emoji","type":"animatedEmoji"},{"name":"emoji","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"initial_state":"The animated stickers with the initial dice animation; may be null if unknown. updateMessageContent will be sent when the sticker became known ","final_state":"The animated stickers with the final dice animation; may be null if unknown. updateMessageContent will be sent when the sticker became known ","emoji":"Emoji on which the dice throw animation is based ","value":"The dice value. If the value is 0, the dice don't have final state yet ","success_animation_frame_number":"Number of frame after which a success animation like a shower of confetti needs to be shown on updateMessageSendSucceeded","_":"A dice message. The dice value is randomly generated by the server "},"type":{"subclass":"messageDice","properties":[{"name":"initial_state","type":"DiceStickers"},{"name":"final_state","type":"DiceStickers"},{"name":"emoji","type":"string"},{"name":"value","type":"int32"},{"name":"success_animation_frame_number","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"game":"The game description","_":"A message with a game "},"type":{"subclass":"messageGame","properties":[{"name":"game","type":"game"}],"abstractClass":"MessageContent"}},{"documentation":{"poll":"The poll description","_":"A message with a poll "},"type":{"subclass":"messagePoll","properties":[{"name":"poll","type":"poll"}],"abstractClass":"MessageContent"}},{"documentation":{"description":"Product description ","title":"Product title ","param_description":"Product description ","photo":"Product photo; may be null ","currency":"Currency for the product price ","total_amount":"Product total price in the smallest units of the currency ","start_parameter":"Unique invoice bot start_parameter. To share an invoice use the URL https://t.me/{bot_username}?start={start_parameter} ","is_test":"True, if the invoice is a test invoice ","need_shipping_address":"True, if the shipping address must be specified ","receipt_message_id":"The identifier of the message with the receipt, after the product has been purchased ","extended_media":"Extended media attached to the invoice; may be null","_":"A message with an invoice from a bot "},"type":{"subclass":"messageInvoice","properties":[{"name":"title","type":"string"},{"name":"description","type":"formattedText"},{"name":"photo","type":"photo"},{"name":"currency","type":"string"},{"name":"total_amount","type":"int53"},{"name":"start_parameter","type":"string"},{"name":"is_test","type":"Bool"},{"name":"need_shipping_address","type":"Bool"},{"name":"receipt_message_id","type":"int53"},{"name":"extended_media","type":"MessageExtendedMedia"}],"abstractClass":"MessageContent"}},{"documentation":{"is_video":"True, if the call was a video call ","discard_reason":"Reason why the call was discarded ","duration":"Call duration, in seconds","_":"A message with information about an ended call "},"type":{"subclass":"messageCall","properties":[{"name":"is_video","type":"Bool"},{"name":"discard_reason","type":"CallDiscardReason"},{"name":"duration","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"group_call_id":"Identifier of the video chat. The video chat can be received through the method getGroupCall ","start_date":"Point in time (Unix timestamp) when the group call is supposed to be started by an administrator","_":"A new video chat was scheduled "},"type":{"subclass":"messageVideoChatScheduled","properties":[{"name":"group_call_id","type":"int32"},{"name":"start_date","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"group_call_id":"Identifier of the video chat. The video chat can be received through the method getGroupCall","_":"A newly created video chat "},"type":{"subclass":"messageVideoChatStarted","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"duration":"Call duration, in seconds","_":"A message with information about an ended video chat "},"type":{"subclass":"messageVideoChatEnded","properties":[{"name":"duration","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"group_call_id":"Identifier of the video chat. The video chat can be received through the method getGroupCall ","user_ids":"Invited user identifiers","_":"A message with information about an invite to a video chat "},"type":{"subclass":"messageInviteVideoChatParticipants","properties":[{"name":"group_call_id","type":"int32"},{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"MessageContent"}},{"documentation":{"title":"Title of the basic group ","member_user_ids":"User identifiers of members in the basic group","_":"A newly created basic group "},"type":{"subclass":"messageBasicGroupChatCreate","properties":[{"name":"title","type":"string"},{"name":"member_user_ids","type":"vector<int53>"}],"abstractClass":"MessageContent"}},{"documentation":{"title":"Title of the supergroup or channel","_":"A newly created supergroup or channel "},"type":{"subclass":"messageSupergroupChatCreate","properties":[{"name":"title","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"title":"New chat title","_":"An updated chat title "},"type":{"subclass":"messageChatChangeTitle","properties":[{"name":"title","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"photo":"New chat photo","_":"An updated chat photo "},"type":{"subclass":"messageChatChangePhoto","properties":[{"name":"photo","type":"chatPhoto"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"A deleted chat photo"},"type":{"subclass":"messageChatDeletePhoto","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"member_user_ids":"User identifiers of the new members","_":"New chat members were added "},"type":{"subclass":"messageChatAddMembers","properties":[{"name":"member_user_ids","type":"vector<int53>"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"A new member joined the chat via an invite link"},"type":{"subclass":"messageChatJoinByLink","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"_":"A new member was accepted to the chat by an administrator"},"type":{"subclass":"messageChatJoinByRequest","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"user_id":"User identifier of the deleted chat member","_":"A chat member was deleted "},"type":{"subclass":"messageChatDeleteMember","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"MessageContent"}},{"documentation":{"supergroup_id":"Identifier of the supergroup to which the basic group was upgraded","_":"A basic group was upgraded to a supergroup and was deactivated as the result "},"type":{"subclass":"messageChatUpgradeTo","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"MessageContent"}},{"documentation":{"title":"Title of the newly created supergroup ","basic_group_id":"The identifier of the original basic group","_":"A supergroup has been created from a basic group "},"type":{"subclass":"messageChatUpgradeFrom","properties":[{"name":"title","type":"string"},{"name":"basic_group_id","type":"int53"}],"abstractClass":"MessageContent"}},{"documentation":{"message_id":"Identifier of the pinned message, can be an identifier of a deleted message or 0","_":"A message has been pinned "},"type":{"subclass":"messagePinMessage","properties":[{"name":"message_id","type":"int53"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"A screenshot of a message in the chat has been taken"},"type":{"subclass":"messageScreenshotTaken","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"theme_name":"If non-empty, name of a new theme, set for the chat. Otherwise chat theme was reset to the default one","_":"A theme in the chat has been changed "},"type":{"subclass":"messageChatSetTheme","properties":[{"name":"theme_name","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"ttl":"New message TTL ","from_user_id":"If not 0, a user identifier, which default setting was automatically applied","_":"The TTL (Time To Live) setting for messages in the chat has been changed "},"type":{"subclass":"messageChatSetTtl","properties":[{"name":"ttl","type":"int32"},{"name":"from_user_id","type":"int53"}],"abstractClass":"MessageContent"}},{"documentation":{"name":"Name of the topic ","icon":"Icon of the topic","_":"A forum topic has been created "},"type":{"subclass":"messageForumTopicCreated","properties":[{"name":"name","type":"string"},{"name":"icon","type":"forumTopicIcon"}],"abstractClass":"MessageContent"}},{"documentation":{"name":"If non-empty, the new name of the topic ","edit_icon_custom_emoji_id":"True, if icon's custom_emoji_id is changed ","icon_custom_emoji_id":"New unique identifier of the custom emoji shown on the topic icon; 0 if none. Must be ignored if edit_icon_custom_emoji_id is false","_":"A forum topic has been edited "},"type":{"subclass":"messageForumTopicEdited","properties":[{"name":"name","type":"string"},{"name":"edit_icon_custom_emoji_id","type":"Bool"},{"name":"icon_custom_emoji_id","type":"int64"}],"abstractClass":"MessageContent"}},{"documentation":{"is_closed":"True, if the topic was closed, otherwise the topic was reopened","_":"A forum topic has been closed or opened "},"type":{"subclass":"messageForumTopicIsClosedToggled","properties":[{"name":"is_closed","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"is_hidden":"True, if the topic was hidden, otherwise the topic was unhidden","_":"A General forum topic has been hidden or unhidden "},"type":{"subclass":"messageForumTopicIsHiddenToggled","properties":[{"name":"is_hidden","type":"Bool"}],"abstractClass":"MessageContent"}},{"documentation":{"text":"Message text to be shown in the chat","_":"A non-standard action has happened in the chat "},"type":{"subclass":"messageCustomServiceAction","properties":[{"name":"text","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"game_message_id":"Identifier of the message with the game, can be an identifier of a deleted message ","game_id":"Identifier of the game; may be different from the games presented in the message with the game ","score":"New score","_":"A new high score was achieved in a game "},"type":{"subclass":"messageGameScore","properties":[{"name":"game_message_id","type":"int53"},{"name":"game_id","type":"int64"},{"name":"score","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"invoice_chat_id":"Identifier of the chat, containing the corresponding invoice message ","invoice_message_id":"Identifier of the message with the corresponding invoice; can be 0 or an identifier of a deleted message ","currency":"Currency for the price of the product ","total_amount":"Total price for the product, in the smallest units of the currency ","is_recurring":"True, if this is a recurring payment ","is_first_recurring":"True, if this is the first recurring payment ","invoice_name":"Name of the invoice; may be empty if unknown","_":"A payment has been completed "},"type":{"subclass":"messagePaymentSuccessful","properties":[{"name":"invoice_chat_id","type":"int53"},{"name":"invoice_message_id","type":"int53"},{"name":"currency","type":"string"},{"name":"total_amount","type":"int53"},{"name":"is_recurring","type":"Bool"},{"name":"is_first_recurring","type":"Bool"},{"name":"invoice_name","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"currency":"Currency for price of the product ","total_amount":"Total price for the product, in the smallest units of the currency ","is_recurring":"True, if this is a recurring payment ","is_first_recurring":"True, if this is the first recurring payment ","invoice_payload":"Invoice payload ","shipping_option_id":"Identifier of the shipping option chosen by the user; may be empty if not applicable ","order_info":"Information about the order; may be null ","telegram_payment_charge_id":"Telegram payment identifier ","provider_payment_charge_id":"Provider payment identifier","_":"A payment has been completed; for bots only "},"type":{"subclass":"messagePaymentSuccessfulBot","properties":[{"name":"currency","type":"string"},{"name":"total_amount","type":"int53"},{"name":"is_recurring","type":"Bool"},{"name":"is_first_recurring","type":"Bool"},{"name":"invoice_payload","type":"bytes"},{"name":"shipping_option_id","type":"string"},{"name":"order_info","type":"orderInfo"},{"name":"telegram_payment_charge_id","type":"string"},{"name":"provider_payment_charge_id","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"currency":"Currency for the paid amount ","amount":"The paid amount, in the smallest units of the currency ","month_count":"Number of month the Telegram Premium subscription will be active ","sticker":"A sticker to be shown in the message; may be null if unknown","_":"Telegram Premium was gifted to the user "},"type":{"subclass":"messageGiftedPremium","properties":[{"name":"currency","type":"string"},{"name":"amount","type":"int53"},{"name":"month_count","type":"int32"},{"name":"sticker","type":"sticker"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"A contact has registered with Telegram"},"type":{"subclass":"messageContactRegistered","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"domain_name":"Domain name of the connected website","_":"The current user has connected a website by logging in using Telegram Login Widget on it "},"type":{"subclass":"messageWebsiteConnected","properties":[{"name":"domain_name","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"button_text":"Text of the keyboardButtonTypeWebApp button, which opened the Web App","_":"Data from a Web App has been sent to a bot "},"type":{"subclass":"messageWebAppDataSent","properties":[{"name":"button_text","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"button_text":"Text of the keyboardButtonTypeWebApp button, which opened the Web App ","data":"Received data","_":"Data from a Web App has been received; for bots only "},"type":{"subclass":"messageWebAppDataReceived","properties":[{"name":"button_text","type":"string"},{"name":"data","type":"string"}],"abstractClass":"MessageContent"}},{"documentation":{"types":"List of Telegram Passport element types sent","_":"Telegram Passport data has been sent to a bot "},"type":{"subclass":"messagePassportDataSent","properties":[{"name":"types","type":"vector<PassportElementType>"}],"abstractClass":"MessageContent"}},{"documentation":{"elements":"List of received Telegram Passport elements ","credentials":"Encrypted data credentials","_":"Telegram Passport data has been received; for bots only "},"type":{"subclass":"messagePassportDataReceived","properties":[{"name":"elements","type":"vector<encryptedPassportElement>"},{"name":"credentials","type":"encryptedCredentials"}],"abstractClass":"MessageContent"}},{"documentation":{"traveler_id":"The identifier of a user or chat that triggered the proximity alert ","watcher_id":"The identifier of a user or chat that subscribed for the proximity alert ","distance":"The distance between the users","_":"A user in the chat came within proximity alert range "},"type":{"subclass":"messageProximityAlertTriggered","properties":[{"name":"traveler_id","type":"MessageSender"},{"name":"watcher_id","type":"MessageSender"},{"name":"distance","type":"int32"}],"abstractClass":"MessageContent"}},{"documentation":{"_":"Message content that is not supported in the current TDLib version"},"type":{"subclass":"messageUnsupported","properties":[],"abstractClass":"MessageContent"}},{"documentation":{"class":"TextEntityType ","_":"A mention of a user, a supergroup, or a channel by their username"},"type":{"subclass":"textEntityTypeMention","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A hashtag text, beginning with \"#\""},"type":{"subclass":"textEntityTypeHashtag","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A cashtag text, beginning with \"$\" and consisting of capital English letters (e.g., \"$USD\")"},"type":{"subclass":"textEntityTypeCashtag","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A bot command, beginning with \"/\""},"type":{"subclass":"textEntityTypeBotCommand","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"An HTTP URL"},"type":{"subclass":"textEntityTypeUrl","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"An email address"},"type":{"subclass":"textEntityTypeEmailAddress","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A phone number"},"type":{"subclass":"textEntityTypePhoneNumber","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A bank card number. The getBankCardInfo method can be used to get information about the bank card"},"type":{"subclass":"textEntityTypeBankCardNumber","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A bold text"},"type":{"subclass":"textEntityTypeBold","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"An italic text"},"type":{"subclass":"textEntityTypeItalic","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"An underlined text"},"type":{"subclass":"textEntityTypeUnderline","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A strikethrough text"},"type":{"subclass":"textEntityTypeStrikethrough","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"A spoiler text"},"type":{"subclass":"textEntityTypeSpoiler","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"Text that must be formatted as if inside a code HTML tag"},"type":{"subclass":"textEntityTypeCode","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"_":"Text that must be formatted as if inside a pre HTML tag"},"type":{"subclass":"textEntityTypePre","properties":[],"abstractClass":"TextEntityType"}},{"documentation":{"language":"Programming language of the code; as defined by the sender","_":"Text that must be formatted as if inside pre, and code HTML tags "},"type":{"subclass":"textEntityTypePreCode","properties":[{"name":"language","type":"string"}],"abstractClass":"TextEntityType"}},{"documentation":{"url":"HTTP or tg:// URL to be opened when the link is clicked","_":"A text description shown instead of a raw URL "},"type":{"subclass":"textEntityTypeTextUrl","properties":[{"name":"url","type":"string"}],"abstractClass":"TextEntityType"}},{"documentation":{"user_id":"Identifier of the mentioned user","_":"A text shows instead of a raw mention of the user (e.g., when the user has no username) "},"type":{"subclass":"textEntityTypeMentionName","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"TextEntityType"}},{"documentation":{"custom_emoji_id":"Unique identifier of the custom emoji","_":"A custom emoji. The text behind a custom emoji must be an emoji. Only premium users can use premium custom emoji "},"type":{"subclass":"textEntityTypeCustomEmoji","properties":[{"name":"custom_emoji_id","type":"int64"}],"abstractClass":"TextEntityType"}},{"documentation":{"media_timestamp":"Timestamp from which a video/audio/video note/voice note playing must start, in seconds. The media can be in the content or the web page preview of the current message, or in the same places in the replied message","_":"A media timestamp "},"type":{"subclass":"textEntityTypeMediaTimestamp","properties":[{"name":"media_timestamp","type":"int32"}],"abstractClass":"TextEntityType"}},{"documentation":{"thumbnail":"Thumbnail file to send. Sending thumbnails by file_id is currently not supported ","width":"Thumbnail width, usually shouldn't exceed 320. Use 0 if unknown ","height":"Thumbnail height, usually shouldn't exceed 320. Use 0 if unknown","_":"A thumbnail to be sent along with a file; must be in JPEG or WEBP format for stickers, and less than 200 KB in size "},"type":{"subclass":"inputThumbnail","properties":[{"name":"thumbnail","type":"InputFile"},{"name":"width","type":"int32"},{"name":"height","type":"int32"}],"abstractClass":"InputThumbnail"}},{"documentation":{"class":"MessageSchedulingState ","send_date":"Date the message will be sent. The date must be within 367 days in the future","_":"The message will be sent at the specified date "},"type":{"subclass":"messageSchedulingStateSendAtDate","properties":[{"name":"send_date","type":"int32"}],"abstractClass":"MessageSchedulingState"}},{"documentation":{"_":"The message will be sent when the peer will be online. Applicable to private chats only and when the exact online status of the peer is known"},"type":{"subclass":"messageSchedulingStateSendWhenOnline","properties":[],"abstractClass":"MessageSchedulingState"}},{"documentation":{"disable_notification":"Pass true to disable notification for the message ","from_background":"Pass true if the message is sent from the background ","protect_content":"Pass true if the content of the message must be protected from forwarding and saving; for bots only ","update_order_of_installed_sticker_sets":"Pass true if the user explicitly chosen a sticker or a custom emoji from an installed sticker set; applicable only to sendMessage and sendMessageAlbum ","scheduling_state":"Message scheduling state; pass null to send message immediately. Messages sent to a secret chat, live location messages and self-destructing messages can't be scheduled","_":"Options to be used when a message is sent "},"type":{"subclass":"messageSendOptions","properties":[{"name":"disable_notification","type":"Bool"},{"name":"from_background","type":"Bool"},{"name":"protect_content","type":"Bool"},{"name":"update_order_of_installed_sticker_sets","type":"Bool"},{"name":"scheduling_state","type":"MessageSchedulingState"}],"abstractClass":"MessageSendOptions"}},{"documentation":{"send_copy":"True, if content of the message needs to be copied without reference to the original sender. Always true if the message is forwarded to a secret chat or is local ","replace_caption":"True, if media caption of the message copy needs to be replaced. Ignored if send_copy is false ","new_caption":"New message caption; pass null to copy message without caption. Ignored if replace_caption is false","_":"Options to be used when a message content is copied without reference to the original sender. Service messages and messageInvoice can't be copied "},"type":{"subclass":"messageCopyOptions","properties":[{"name":"send_copy","type":"Bool"},{"name":"replace_caption","type":"Bool"},{"name":"new_caption","type":"formattedText"}],"abstractClass":"MessageCopyOptions"}},{"documentation":{"class":"InputMessageContent ","text":"Formatted text to be sent; 1-getOption(\"message_text_length_max\") characters. Only Bold, Italic, Underline, Strikethrough, Spoiler, CustomEmoji, Code, Pre, PreCode, TextUrl and MentionName entities are allowed to be specified manually ","disable_web_page_preview":"True, if rich web page previews for URLs in the message text must be disabled ","clear_draft":"True, if a chat message draft must be deleted","_":"A text message "},"type":{"subclass":"inputMessageText","properties":[{"name":"text","type":"formattedText"},{"name":"disable_web_page_preview","type":"Bool"},{"name":"clear_draft","type":"Bool"}],"abstractClass":"InputMessageContent"}},{"documentation":{"animation":"Animation file to be sent ","thumbnail":"Animation thumbnail; pass null to skip thumbnail uploading ","added_sticker_file_ids":"File identifiers of the stickers added to the animation, if applicable ","duration":"Duration of the animation, in seconds ","width":"Width of the animation; may be replaced by the server ","height":"Height of the animation; may be replaced by the server ","caption":"Animation caption; pass null to use an empty caption; 0-getOption(\"message_caption_length_max\") characters","_":"An animation message (GIF-style). "},"type":{"subclass":"inputMessageAnimation","properties":[{"name":"animation","type":"InputFile"},{"name":"thumbnail","type":"inputThumbnail"},{"name":"added_sticker_file_ids","type":"vector<int32>"},{"name":"duration","type":"int32"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"caption","type":"formattedText"}],"abstractClass":"InputMessageContent"}},{"documentation":{"audio":"Audio file to be sent ","album_cover_thumbnail":"Thumbnail of the cover for the album; pass null to skip thumbnail uploading ","duration":"Duration of the audio, in seconds; may be replaced by the server ","title":"Title of the audio; 0-64 characters; may be replaced by the server ","performer":"Performer of the audio; 0-64 characters, may be replaced by the server ","caption":"Audio caption; pass null to use an empty caption; 0-getOption(\"message_caption_length_max\") characters","_":"An audio message "},"type":{"subclass":"inputMessageAudio","properties":[{"name":"audio","type":"InputFile"},{"name":"album_cover_thumbnail","type":"inputThumbnail"},{"name":"duration","type":"int32"},{"name":"title","type":"string"},{"name":"performer","type":"string"},{"name":"caption","type":"formattedText"}],"abstractClass":"InputMessageContent"}},{"documentation":{"document":"Document to be sent ","thumbnail":"Document thumbnail; pass null to skip thumbnail uploading ","disable_content_type_detection":"If true, automatic file type detection will be disabled and the document will always be sent as file. Always true for files sent to secret chats ","caption":"Document caption; pass null to use an empty caption; 0-getOption(\"message_caption_length_max\") characters","_":"A document message (general file) "},"type":{"subclass":"inputMessageDocument","properties":[{"name":"document","type":"InputFile"},{"name":"thumbnail","type":"inputThumbnail"},{"name":"disable_content_type_detection","type":"Bool"},{"name":"caption","type":"formattedText"}],"abstractClass":"InputMessageContent"}},{"documentation":{"photo":"Photo to send. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20 ","thumbnail":"Photo thumbnail to be sent; pass null to skip thumbnail uploading. The thumbnail is sent to the other party only in secret chats ","added_sticker_file_ids":"File identifiers of the stickers added to the photo, if applicable ","width":"Photo width ","height":"Photo height ","caption":"Photo caption; pass null to use an empty caption; 0-getOption(\"message_caption_length_max\") characters ","ttl":"Photo TTL (Time To Live), in seconds (0-60). A non-zero TTL can be specified only in private chats","_":"A photo message "},"type":{"subclass":"inputMessagePhoto","properties":[{"name":"photo","type":"InputFile"},{"name":"thumbnail","type":"inputThumbnail"},{"name":"added_sticker_file_ids","type":"vector<int32>"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"caption","type":"formattedText"},{"name":"ttl","type":"int32"}],"abstractClass":"InputMessageContent"}},{"documentation":{"sticker":"Sticker to be sent ","thumbnail":"Sticker thumbnail; pass null to skip thumbnail uploading ","width":"Sticker width ","height":"Sticker height ","emoji":"Emoji used to choose the sticker","_":"A sticker message "},"type":{"subclass":"inputMessageSticker","properties":[{"name":"sticker","type":"InputFile"},{"name":"thumbnail","type":"inputThumbnail"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"emoji","type":"string"}],"abstractClass":"InputMessageContent"}},{"documentation":{"video":"Video to be sent ","thumbnail":"Video thumbnail; pass null to skip thumbnail uploading ","added_sticker_file_ids":"File identifiers of the stickers added to the video, if applicable ","duration":"Duration of the video, in seconds ","width":"Video width ","height":"Video height ","supports_streaming":"True, if the video is supposed to be streamed ","caption":"Video caption; pass null to use an empty caption; 0-getOption(\"message_caption_length_max\") characters ","ttl":"Video TTL (Time To Live), in seconds (0-60). A non-zero TTL can be specified only in private chats","_":"A video message "},"type":{"subclass":"inputMessageVideo","properties":[{"name":"video","type":"InputFile"},{"name":"thumbnail","type":"inputThumbnail"},{"name":"added_sticker_file_ids","type":"vector<int32>"},{"name":"duration","type":"int32"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"supports_streaming","type":"Bool"},{"name":"caption","type":"formattedText"},{"name":"ttl","type":"int32"}],"abstractClass":"InputMessageContent"}},{"documentation":{"video_note":"Video note to be sent ","thumbnail":"Video thumbnail; pass null to skip thumbnail uploading ","duration":"Duration of the video, in seconds ","length":"Video width and height; must be positive and not greater than 640","_":"A video note message "},"type":{"subclass":"inputMessageVideoNote","properties":[{"name":"video_note","type":"InputFile"},{"name":"thumbnail","type":"inputThumbnail"},{"name":"duration","type":"int32"},{"name":"length","type":"int32"}],"abstractClass":"InputMessageContent"}},{"documentation":{"voice_note":"Voice note to be sent ","duration":"Duration of the voice note, in seconds ","waveform":"Waveform representation of the voice note in 5-bit format ","caption":"Voice note caption; pass null to use an empty caption; 0-getOption(\"message_caption_length_max\") characters","_":"A voice note message "},"type":{"subclass":"inputMessageVoiceNote","properties":[{"name":"voice_note","type":"InputFile"},{"name":"duration","type":"int32"},{"name":"waveform","type":"bytes"},{"name":"caption","type":"formattedText"}],"abstractClass":"InputMessageContent"}},{"documentation":{"location":"Location to be sent ","live_period":"Period for which the location can be updated, in seconds; must be between 60 and 86400 for a live location and 0 otherwise ","heading":"For live locations, a direction in which the location moves, in degrees; 1-360. Pass 0 if unknown ","proximity_alert_radius":"For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled. Can't be enabled in channels and Saved Messages","_":"A message with a location "},"type":{"subclass":"inputMessageLocation","properties":[{"name":"location","type":"location"},{"name":"live_period","type":"int32"},{"name":"heading","type":"int32"},{"name":"proximity_alert_radius","type":"int32"}],"abstractClass":"InputMessageContent"}},{"documentation":{"venue":"Venue to send","_":"A message with information about a venue "},"type":{"subclass":"inputMessageVenue","properties":[{"name":"venue","type":"venue"}],"abstractClass":"InputMessageContent"}},{"documentation":{"contact":"Contact to send","_":"A message containing a user contact "},"type":{"subclass":"inputMessageContact","properties":[{"name":"contact","type":"contact"}],"abstractClass":"InputMessageContent"}},{"documentation":{"emoji":"Emoji on which the dice throw animation is based ","clear_draft":"True, if the chat message draft must be deleted","_":"A dice message "},"type":{"subclass":"inputMessageDice","properties":[{"name":"emoji","type":"string"},{"name":"clear_draft","type":"Bool"}],"abstractClass":"InputMessageContent"}},{"documentation":{"bot_user_id":"User identifier of the bot that owns the game ","game_short_name":"Short name of the game","_":"A message with a game; not supported for channels or secret chats "},"type":{"subclass":"inputMessageGame","properties":[{"name":"bot_user_id","type":"int53"},{"name":"game_short_name","type":"string"}],"abstractClass":"InputMessageContent"}},{"documentation":{"description":"Product description; 0-255 characters ","invoice":"Invoice ","title":"Product title; 1-32 characters ","param_description":"Product description; 0-255 characters ","photo_url":"Product photo URL; optional ","photo_size":"Product photo size ","photo_width":"Product photo width ","photo_height":"Product photo height ","payload":"The invoice payload ","provider_token":"Payment provider token ","provider_data":"JSON-encoded data about the invoice, which will be shared with the payment provider ","start_parameter":"Unique invoice bot deep link parameter for the generation of this invoice. If empty, it would be possible to pay directly from forwards of the invoice message ","extended_media_content":"The content of extended media attached to the invoice. The content of the message to be sent. Must be one of the following types: inputMessagePhoto, inputMessageVideo","_":"A message with an invoice; can be used only by bots "},"type":{"subclass":"inputMessageInvoice","properties":[{"name":"invoice","type":"invoice"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"photo_url","type":"string"},{"name":"photo_size","type":"int32"},{"name":"photo_width","type":"int32"},{"name":"photo_height","type":"int32"},{"name":"payload","type":"bytes"},{"name":"provider_token","type":"string"},{"name":"provider_data","type":"string"},{"name":"start_parameter","type":"string"},{"name":"extended_media_content","type":"InputMessageContent"}],"abstractClass":"InputMessageContent"}},{"documentation":{"question":"Poll question; 1-255 characters (up to 300 characters for bots) ","options":"List of poll answer options, 2-10 strings 1-100 characters each ","is_anonymous":"True, if the poll voters are anonymous. Non-anonymous polls can't be sent or forwarded to channels ","type":"Type of the poll ","open_period":"Amount of time the poll will be active after creation, in seconds; for bots only ","close_date":"Point in time (Unix timestamp) when the poll will automatically be closed; for bots only ","is_closed":"True, if the poll needs to be sent already closed; for bots only","_":"A message with a poll. Polls can't be sent to secret chats. Polls can be sent only to a private chat with a bot "},"type":{"subclass":"inputMessagePoll","properties":[{"name":"question","type":"string"},{"name":"options","type":"vector<string>"},{"name":"is_anonymous","type":"Bool"},{"name":"type","type":"PollType"},{"name":"open_period","type":"int32"},{"name":"close_date","type":"int32"},{"name":"is_closed","type":"Bool"}],"abstractClass":"InputMessageContent"}},{"documentation":{"from_chat_id":"Identifier for the chat this forwarded message came from ","message_id":"Identifier of the message to forward ","in_game_share":"True, if a game message is being shared from a launched game; applies only to game messages ","copy_options":"Options to be used to copy content of the message without reference to the original sender; pass null to forward the message as usual","_":"A forwarded message "},"type":{"subclass":"inputMessageForwarded","properties":[{"name":"from_chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"in_game_share","type":"Bool"},{"name":"copy_options","type":"messageCopyOptions"}],"abstractClass":"InputMessageContent"}},{"documentation":{"class":"SearchMessagesFilter ","_":"Returns all found messages, no filter is applied"},"type":{"subclass":"searchMessagesFilterEmpty","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only animation messages"},"type":{"subclass":"searchMessagesFilterAnimation","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only audio messages"},"type":{"subclass":"searchMessagesFilterAudio","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only document messages"},"type":{"subclass":"searchMessagesFilterDocument","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only photo messages"},"type":{"subclass":"searchMessagesFilterPhoto","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only video messages"},"type":{"subclass":"searchMessagesFilterVideo","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only voice note messages"},"type":{"subclass":"searchMessagesFilterVoiceNote","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only photo and video messages"},"type":{"subclass":"searchMessagesFilterPhotoAndVideo","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only messages containing URLs"},"type":{"subclass":"searchMessagesFilterUrl","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only messages containing chat photos"},"type":{"subclass":"searchMessagesFilterChatPhoto","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only video note messages"},"type":{"subclass":"searchMessagesFilterVideoNote","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only voice and video note messages"},"type":{"subclass":"searchMessagesFilterVoiceAndVideoNote","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only messages with mentions of the current user, or messages that are replies to their messages"},"type":{"subclass":"searchMessagesFilterMention","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only messages with unread mentions of the current user, or messages that are replies to their messages. When using this filter the results can't be additionally filtered by a query, a message thread or by the sending user"},"type":{"subclass":"searchMessagesFilterUnreadMention","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only messages with unread reactions for the current user. When using this filter the results can't be additionally filtered by a query, a message thread or by the sending user"},"type":{"subclass":"searchMessagesFilterUnreadReaction","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only failed to send messages. This filter can be used only if the message database is used"},"type":{"subclass":"searchMessagesFilterFailedToSend","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"_":"Returns only pinned messages"},"type":{"subclass":"searchMessagesFilterPinned","properties":[],"abstractClass":"SearchMessagesFilter"}},{"documentation":{"class":"ChatAction ","_":"The user is typing a message"},"type":{"subclass":"chatActionTyping","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user is recording a video"},"type":{"subclass":"chatActionRecordingVideo","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"progress":"Upload progress, as a percentage","_":"The user is uploading a video "},"type":{"subclass":"chatActionUploadingVideo","properties":[{"name":"progress","type":"int32"}],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user is recording a voice note"},"type":{"subclass":"chatActionRecordingVoiceNote","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"progress":"Upload progress, as a percentage","_":"The user is uploading a voice note "},"type":{"subclass":"chatActionUploadingVoiceNote","properties":[{"name":"progress","type":"int32"}],"abstractClass":"ChatAction"}},{"documentation":{"progress":"Upload progress, as a percentage","_":"The user is uploading a photo "},"type":{"subclass":"chatActionUploadingPhoto","properties":[{"name":"progress","type":"int32"}],"abstractClass":"ChatAction"}},{"documentation":{"progress":"Upload progress, as a percentage","_":"The user is uploading a document "},"type":{"subclass":"chatActionUploadingDocument","properties":[{"name":"progress","type":"int32"}],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user is picking a sticker to send"},"type":{"subclass":"chatActionChoosingSticker","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user is picking a location or venue to send"},"type":{"subclass":"chatActionChoosingLocation","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user is picking a contact to send"},"type":{"subclass":"chatActionChoosingContact","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user has started to play a game"},"type":{"subclass":"chatActionStartPlayingGame","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user is recording a video note"},"type":{"subclass":"chatActionRecordingVideoNote","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"progress":"Upload progress, as a percentage","_":"The user is uploading a video note "},"type":{"subclass":"chatActionUploadingVideoNote","properties":[{"name":"progress","type":"int32"}],"abstractClass":"ChatAction"}},{"documentation":{"emoji":"The animated emoji","_":"The user is watching animations sent by the other party by clicking on an animated emoji "},"type":{"subclass":"chatActionWatchingAnimations","properties":[{"name":"emoji","type":"string"}],"abstractClass":"ChatAction"}},{"documentation":{"_":"The user has canceled the previous action"},"type":{"subclass":"chatActionCancel","properties":[],"abstractClass":"ChatAction"}},{"documentation":{"class":"UserStatus ","_":"The user status was never changed"},"type":{"subclass":"userStatusEmpty","properties":[],"abstractClass":"UserStatus"}},{"documentation":{"expires":"Point in time (Unix timestamp) when the user's online status will expire","_":"The user is online "},"type":{"subclass":"userStatusOnline","properties":[{"name":"expires","type":"int32"}],"abstractClass":"UserStatus"}},{"documentation":{"was_online":"Point in time (Unix timestamp) when the user was last online","_":"The user is offline "},"type":{"subclass":"userStatusOffline","properties":[{"name":"was_online","type":"int32"}],"abstractClass":"UserStatus"}},{"documentation":{"_":"The user was online recently"},"type":{"subclass":"userStatusRecently","properties":[],"abstractClass":"UserStatus"}},{"documentation":{"_":"The user is offline, but was online last week"},"type":{"subclass":"userStatusLastWeek","properties":[],"abstractClass":"UserStatus"}},{"documentation":{"_":"The user is offline, but was online last month"},"type":{"subclass":"userStatusLastMonth","properties":[],"abstractClass":"UserStatus"}},{"documentation":{"stickers":"List of stickers","_":"Represents a list of stickers "},"type":{"subclass":"stickers","properties":[{"name":"stickers","type":"vector<sticker>"}],"abstractClass":"Stickers"}},{"documentation":{"emojis":"List of emojis","_":"Represents a list of emoji "},"type":{"subclass":"emojis","properties":[{"name":"emojis","type":"vector<string>"}],"abstractClass":"Emojis"}},{"documentation":{"id":"Identifier of the sticker set ","title":"Title of the sticker set ","name":"Name of the sticker set ","thumbnail":"Sticker set thumbnail in WEBP, TGS, or WEBM format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed ","thumbnail_outline":"Sticker set thumbnail's outline represented as a list of closed vector paths; may be empty. The coordinate system origin is in the upper-left corner ","is_installed":"True, if the sticker set has been installed by the current user ","is_archived":"True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously ","is_official":"True, if the sticker set is official ","sticker_format":"Format of the stickers in the set ","sticker_type":"Type of the stickers in the set ","is_viewed":"True for already viewed trending sticker sets ","stickers":"List of stickers in this set ","emojis":"A list of emoji corresponding to the stickers in the same order. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object","_":"Represents a sticker set "},"type":{"subclass":"stickerSet","properties":[{"name":"id","type":"int64"},{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"thumbnail","type":"thumbnail"},{"name":"thumbnail_outline","type":"vector<closedVectorPath>"},{"name":"is_installed","type":"Bool"},{"name":"is_archived","type":"Bool"},{"name":"is_official","type":"Bool"},{"name":"sticker_format","type":"StickerFormat"},{"name":"sticker_type","type":"StickerType"},{"name":"is_viewed","type":"Bool"},{"name":"stickers","type":"vector<sticker>"},{"name":"emojis","type":"vector<emojis>"}],"abstractClass":"StickerSet"}},{"documentation":{"id":"Identifier of the sticker set ","title":"Title of the sticker set ","name":"Name of the sticker set ","thumbnail":"Sticker set thumbnail in WEBP, TGS, or WEBM format with width and height 100; may be null ","thumbnail_outline":"Sticker set thumbnail's outline represented as a list of closed vector paths; may be empty. The coordinate system origin is in the upper-left corner ","is_installed":"True, if the sticker set has been installed by the current user ","is_archived":"True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously ","is_official":"True, if the sticker set is official ","sticker_format":"Format of the stickers in the set ","sticker_type":"Type of the stickers in the set ","is_viewed":"True for already viewed trending sticker sets ","size":"Total number of stickers in the set ","covers":"Up to the first 5 stickers from the set, depending on the context. If the application needs more stickers the full sticker set needs to be requested","_":"Represents short information about a sticker set "},"type":{"subclass":"stickerSetInfo","properties":[{"name":"id","type":"int64"},{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"thumbnail","type":"thumbnail"},{"name":"thumbnail_outline","type":"vector<closedVectorPath>"},{"name":"is_installed","type":"Bool"},{"name":"is_archived","type":"Bool"},{"name":"is_official","type":"Bool"},{"name":"sticker_format","type":"StickerFormat"},{"name":"sticker_type","type":"StickerType"},{"name":"is_viewed","type":"Bool"},{"name":"size","type":"int32"},{"name":"covers","type":"vector<sticker>"}],"abstractClass":"StickerSetInfo"}},{"documentation":{"total_count":"Approximate total number of sticker sets found ","sets":"List of sticker sets","_":"Represents a list of sticker sets "},"type":{"subclass":"stickerSets","properties":[{"name":"total_count","type":"int32"},{"name":"sets","type":"vector<stickerSetInfo>"}],"abstractClass":"StickerSets"}},{"documentation":{"total_count":"Approximate total number of trending sticker sets ","sets":"List of trending sticker sets ","is_premium":"True, if the list contains sticker sets with premium stickers","_":"Represents a list of trending sticker sets "},"type":{"subclass":"trendingStickerSets","properties":[{"name":"total_count","type":"int32"},{"name":"sets","type":"vector<stickerSetInfo>"},{"name":"is_premium","type":"Bool"}],"abstractClass":"TrendingStickerSets"}},{"documentation":{"class":"CallDiscardReason ","_":"The call wasn't discarded, or the reason is unknown"},"type":{"subclass":"callDiscardReasonEmpty","properties":[],"abstractClass":"CallDiscardReason"}},{"documentation":{"_":"The call was ended before the conversation started. It was canceled by the caller or missed by the other party"},"type":{"subclass":"callDiscardReasonMissed","properties":[],"abstractClass":"CallDiscardReason"}},{"documentation":{"_":"The call was ended before the conversation started. It was declined by the other party"},"type":{"subclass":"callDiscardReasonDeclined","properties":[],"abstractClass":"CallDiscardReason"}},{"documentation":{"_":"The call was ended during the conversation because the users were disconnected"},"type":{"subclass":"callDiscardReasonDisconnected","properties":[],"abstractClass":"CallDiscardReason"}},{"documentation":{"_":"The call was ended because one of the parties hung up"},"type":{"subclass":"callDiscardReasonHungUp","properties":[],"abstractClass":"CallDiscardReason"}},{"documentation":{"udp_p2p":"True, if UDP peer-to-peer connections are supported ","udp_reflector":"True, if connection through UDP reflectors is supported ","min_layer":"The minimum supported API layer; use 65 ","max_layer":"The maximum supported API layer; use 65 ","library_versions":"List of supported tgcalls versions","_":"Specifies the supported call protocols "},"type":{"subclass":"callProtocol","properties":[{"name":"udp_p2p","type":"Bool"},{"name":"udp_reflector","type":"Bool"},{"name":"min_layer","type":"int32"},{"name":"max_layer","type":"int32"},{"name":"library_versions","type":"vector<string>"}],"abstractClass":"CallProtocol"}},{"documentation":{"class":"CallServerType ","peer_tag":"A peer tag to be used with the reflector ","is_tcp":"True, if the server uses TCP instead of UDP","_":"A Telegram call reflector "},"type":{"subclass":"callServerTypeTelegramReflector","properties":[{"name":"peer_tag","type":"bytes"},{"name":"is_tcp","type":"Bool"}],"abstractClass":"CallServerType"}},{"documentation":{"username":"Username to be used for authentication ","password":"Authentication password ","supports_turn":"True, if the server supports TURN ","supports_stun":"True, if the server supports STUN","_":"A WebRTC server "},"type":{"subclass":"callServerTypeWebrtc","properties":[{"name":"username","type":"string"},{"name":"password","type":"string"},{"name":"supports_turn","type":"Bool"},{"name":"supports_stun","type":"Bool"}],"abstractClass":"CallServerType"}},{"documentation":{"id":"Server identifier ","ip_address":"Server IPv4 address ","ipv6_address":"Server IPv6 address ","port":"Server port number ","type":"Server type","_":"Describes a server for relaying call data "},"type":{"subclass":"callServer","properties":[{"name":"id","type":"int64"},{"name":"ip_address","type":"string"},{"name":"ipv6_address","type":"string"},{"name":"port","type":"int32"},{"name":"type","type":"CallServerType"}],"abstractClass":"CallServer"}},{"documentation":{"id":"Call identifier","_":"Contains the call identifier "},"type":{"subclass":"callId","properties":[{"name":"id","type":"int32"}],"abstractClass":"CallId"}},{"documentation":{"id":"Group call identifier","_":"Contains the group call identifier "},"type":{"subclass":"groupCallId","properties":[{"name":"id","type":"int32"}],"abstractClass":"GroupCallId"}},{"documentation":{"class":"CallState ","is_created":"True, if the call has already been created by the server ","is_received":"True, if the call has already been received by the other party","_":"The call is pending, waiting to be accepted by a user "},"type":{"subclass":"callStatePending","properties":[{"name":"is_created","type":"Bool"},{"name":"is_received","type":"Bool"}],"abstractClass":"CallState"}},{"documentation":{"_":"The call has been answered and encryption keys are being exchanged"},"type":{"subclass":"callStateExchangingKeys","properties":[],"abstractClass":"CallState"}},{"documentation":{"protocol":"Call protocols supported by the peer ","servers":"List of available call servers ","config":"A JSON-encoded call config ","encryption_key":"Call encryption key ","emojis":"Encryption key emojis fingerprint ","allow_p2p":"True, if peer-to-peer connection is allowed by users privacy settings","_":"The call is ready to use "},"type":{"subclass":"callStateReady","properties":[{"name":"protocol","type":"callProtocol"},{"name":"servers","type":"vector<callServer>"},{"name":"config","type":"string"},{"name":"encryption_key","type":"bytes"},{"name":"emojis","type":"vector<string>"},{"name":"allow_p2p","type":"Bool"}],"abstractClass":"CallState"}},{"documentation":{"_":"The call is hanging up after discardCall has been called"},"type":{"subclass":"callStateHangingUp","properties":[],"abstractClass":"CallState"}},{"documentation":{"reason":"The reason, why the call has ended ","need_rating":"True, if the call rating must be sent to the server ","need_debug_information":"True, if the call debug information must be sent to the server ","need_log":"True, if the call log must be sent to the server","_":"The call has ended successfully "},"type":{"subclass":"callStateDiscarded","properties":[{"name":"reason","type":"CallDiscardReason"},{"name":"need_rating","type":"Bool"},{"name":"need_debug_information","type":"Bool"},{"name":"need_log","type":"Bool"}],"abstractClass":"CallState"}},{"documentation":{"error":"Error. An error with the code 4005000 will be returned if an outgoing call is missed because of an expired timeout","_":"The call has ended with an error "},"type":{"subclass":"callStateError","properties":[{"name":"error","type":"error"}],"abstractClass":"CallState"}},{"documentation":{"class":"GroupCallVideoQuality ","_":"The worst available video quality"},"type":{"subclass":"groupCallVideoQualityThumbnail","properties":[],"abstractClass":"GroupCallVideoQuality"}},{"documentation":{"_":"The medium video quality"},"type":{"subclass":"groupCallVideoQualityMedium","properties":[],"abstractClass":"GroupCallVideoQuality"}},{"documentation":{"_":"The best available video quality"},"type":{"subclass":"groupCallVideoQualityFull","properties":[],"abstractClass":"GroupCallVideoQuality"}},{"documentation":{"channel_id":"Identifier of an audio/video channel ","scale":"Scale of segment durations in the stream. The duration is 1000/(2**scale) milliseconds ","time_offset":"Point in time when the stream currently ends; Unix timestamp in milliseconds","_":"Describes an available stream in a group call "},"type":{"subclass":"groupCallStream","properties":[{"name":"channel_id","type":"int32"},{"name":"scale","type":"int32"},{"name":"time_offset","type":"int53"}],"abstractClass":"GroupCallStream"}},{"documentation":{"streams":"A list of group call streams","_":"Represents a list of group call streams "},"type":{"subclass":"groupCallStreams","properties":[{"name":"streams","type":"vector<groupCallStream>"}],"abstractClass":"GroupCallStreams"}},{"documentation":{"url":"The URL ","stream_key":"Stream key","_":"Represents an RTMP url "},"type":{"subclass":"rtmpUrl","properties":[{"name":"url","type":"string"},{"name":"stream_key","type":"string"}],"abstractClass":"RtmpUrl"}},{"documentation":{"participant_id":"Group call participant identifier ","is_speaking":"True, is the user has spoken recently","_":"Describes a recently speaking participant in a group call "},"type":{"subclass":"groupCallRecentSpeaker","properties":[{"name":"participant_id","type":"MessageSender"},{"name":"is_speaking","type":"Bool"}],"abstractClass":"GroupCallRecentSpeaker"}},{"documentation":{"id":"Group call identifier ","title":"Group call title ","scheduled_start_date":"Point in time (Unix timestamp) when the group call is supposed to be started by an administrator; 0 if it is already active or was ended ","enabled_start_notification":"True, if the group call is scheduled and the current user will receive a notification when the group call will start ","is_active":"True, if the call is active ","is_rtmp_stream":"True, if the chat is an RTMP stream instead of an ordinary video chat ","is_joined":"True, if the call is joined ","need_rejoin":"True, if user was kicked from the call because of network loss and the call needs to be rejoined ","can_be_managed":"True, if the current user can manage the group call ","participant_count":"Number of participants in the group call ","has_hidden_listeners":"True, if group call participants, which are muted, aren't returned in participant list ","loaded_all_participants":"True, if all group call participants are loaded ","recent_speakers":"At most 3 recently speaking users in the group call ","is_my_video_enabled":"True, if the current user's video is enabled ","is_my_video_paused":"True, if the current user's video is paused ","can_enable_video":"True, if the current user can broadcast video or share screen ","mute_new_participants":"True, if only group call administrators can unmute new participants ","can_toggle_mute_new_participants":"True, if the current user can enable or disable mute_new_participants setting ","record_duration":"Duration of the ongoing group call recording, in seconds; 0 if none. An updateGroupCall update is not triggered when value of this field changes, but the same recording goes on ","is_video_recorded":"True, if a video file is being recorded for the call ","duration":"Call duration, in seconds; for ended calls only","_":"Describes a group call "},"type":{"subclass":"groupCall","properties":[{"name":"id","type":"int32"},{"name":"title","type":"string"},{"name":"scheduled_start_date","type":"int32"},{"name":"enabled_start_notification","type":"Bool"},{"name":"is_active","type":"Bool"},{"name":"is_rtmp_stream","type":"Bool"},{"name":"is_joined","type":"Bool"},{"name":"need_rejoin","type":"Bool"},{"name":"can_be_managed","type":"Bool"},{"name":"participant_count","type":"int32"},{"name":"has_hidden_listeners","type":"Bool"},{"name":"loaded_all_participants","type":"Bool"},{"name":"recent_speakers","type":"vector<groupCallRecentSpeaker>"},{"name":"is_my_video_enabled","type":"Bool"},{"name":"is_my_video_paused","type":"Bool"},{"name":"can_enable_video","type":"Bool"},{"name":"mute_new_participants","type":"Bool"},{"name":"can_toggle_mute_new_participants","type":"Bool"},{"name":"record_duration","type":"int32"},{"name":"is_video_recorded","type":"Bool"},{"name":"duration","type":"int32"}],"abstractClass":"GroupCall"}},{"documentation":{"semantics":"The semantics of sources, one of \"SIM\" or \"FID\" ","source_ids":"The list of synchronization source identifiers","_":"Describes a group of video synchronization source identifiers "},"type":{"subclass":"groupCallVideoSourceGroup","properties":[{"name":"semantics","type":"string"},{"name":"source_ids","type":"vector<int32>"}],"abstractClass":"GroupCallVideoSourceGroup"}},{"documentation":{"source_groups":"List of synchronization source groups of the video ","endpoint_id":"Video channel endpoint identifier ","is_paused":"True, if the video is paused. This flag needs to be ignored, if new video frames are received","_":"Contains information about a group call participant's video channel "},"type":{"subclass":"groupCallParticipantVideoInfo","properties":[{"name":"source_groups","type":"vector<groupCallVideoSourceGroup>"},{"name":"endpoint_id","type":"string"},{"name":"is_paused","type":"Bool"}],"abstractClass":"GroupCallParticipantVideoInfo"}},{"documentation":{"participant_id":"Identifier of the group call participant ","audio_source_id":"User's audio channel synchronization source identifier ","screen_sharing_audio_source_id":"User's screen sharing audio channel synchronization source identifier ","video_info":"Information about user's video channel; may be null if there is no active video ","screen_sharing_video_info":"Information about user's screen sharing video channel; may be null if there is no active screen sharing video ","bio":"The participant user's bio or the participant chat's description ","is_current_user":"True, if the participant is the current user ","is_speaking":"True, if the participant is speaking as set by setGroupCallParticipantIsSpeaking ","is_hand_raised":"True, if the participant hand is raised ","can_be_muted_for_all_users":"True, if the current user can mute the participant for all other group call participants ","can_be_unmuted_for_all_users":"True, if the current user can allow the participant to unmute themselves or unmute the participant (if the participant is the current user) ","can_be_muted_for_current_user":"True, if the current user can mute the participant only for self ","can_be_unmuted_for_current_user":"True, if the current user can unmute the participant for self ","is_muted_for_all_users":"True, if the participant is muted for all users ","is_muted_for_current_user":"True, if the participant is muted for the current user ","can_unmute_self":"True, if the participant is muted for all users, but can unmute themselves ","volume_level":"Participant's volume level; 1-20000 in hundreds of percents ","order":"User's order in the group call participant list. Orders must be compared lexicographically. The bigger is order, the higher is user in the list. If order is empty, the user must be removed from the participant list","_":"Represents a group call participant "},"type":{"subclass":"groupCallParticipant","properties":[{"name":"participant_id","type":"MessageSender"},{"name":"audio_source_id","type":"int32"},{"name":"screen_sharing_audio_source_id","type":"int32"},{"name":"video_info","type":"groupCallParticipantVideoInfo"},{"name":"screen_sharing_video_info","type":"groupCallParticipantVideoInfo"},{"name":"bio","type":"string"},{"name":"is_current_user","type":"Bool"},{"name":"is_speaking","type":"Bool"},{"name":"is_hand_raised","type":"Bool"},{"name":"can_be_muted_for_all_users","type":"Bool"},{"name":"can_be_unmuted_for_all_users","type":"Bool"},{"name":"can_be_muted_for_current_user","type":"Bool"},{"name":"can_be_unmuted_for_current_user","type":"Bool"},{"name":"is_muted_for_all_users","type":"Bool"},{"name":"is_muted_for_current_user","type":"Bool"},{"name":"can_unmute_self","type":"Bool"},{"name":"volume_level","type":"int32"},{"name":"order","type":"string"}],"abstractClass":"GroupCallParticipant"}},{"documentation":{"class":"CallProblem ","_":"The user heard their own voice"},"type":{"subclass":"callProblemEcho","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The user heard background noise"},"type":{"subclass":"callProblemNoise","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The other side kept disappearing"},"type":{"subclass":"callProblemInterruptions","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The speech was distorted"},"type":{"subclass":"callProblemDistortedSpeech","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The user couldn't hear the other side"},"type":{"subclass":"callProblemSilentLocal","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The other side couldn't hear the user"},"type":{"subclass":"callProblemSilentRemote","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The call ended unexpectedly"},"type":{"subclass":"callProblemDropped","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The video was distorted"},"type":{"subclass":"callProblemDistortedVideo","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"_":"The video was pixelated"},"type":{"subclass":"callProblemPixelatedVideo","properties":[],"abstractClass":"CallProblem"}},{"documentation":{"id":"Call identifier, not persistent ","user_id":"Peer user identifier ","is_outgoing":"True, if the call is outgoing ","is_video":"True, if the call is a video call ","state":"Call state","_":"Describes a call "},"type":{"subclass":"call","properties":[{"name":"id","type":"int32"},{"name":"user_id","type":"int53"},{"name":"is_outgoing","type":"Bool"},{"name":"is_video","type":"Bool"},{"name":"state","type":"CallState"}],"abstractClass":"Call"}},{"documentation":{"allow_flash_call":"Pass true if the authentication code may be sent via a flash call to the specified phone number ","allow_missed_call":"Pass true if the authentication code may be sent via a missed call to the specified phone number ","is_current_phone_number":"Pass true if the authenticated phone number is used on the current device ","allow_sms_retriever_api":"For official applications only. True, if the application can use Android SMS Retriever API (requires Google Play Services >= 10.2) to automatically receive the authentication code from the SMS. See https://developers.google.com/identity/sms-retriever/ for more details ","authentication_tokens":"List of up to 20 authentication tokens, recently received in updateOption(\"authentication_token\") in previously logged out sessions","_":"Contains settings for the authentication of the user's phone number "},"type":{"subclass":"phoneNumberAuthenticationSettings","properties":[{"name":"allow_flash_call","type":"Bool"},{"name":"allow_missed_call","type":"Bool"},{"name":"is_current_phone_number","type":"Bool"},{"name":"allow_sms_retriever_api","type":"Bool"},{"name":"authentication_tokens","type":"vector<string>"}],"abstractClass":"PhoneNumberAuthenticationSettings"}},{"documentation":{"type":"Type of the reaction ","sender_id":"Identifier of the chat member, applied the reaction","_":"Represents a reaction applied to a message "},"type":{"subclass":"addedReaction","properties":[{"name":"type","type":"ReactionType"},{"name":"sender_id","type":"MessageSender"}],"abstractClass":"AddedReaction"}},{"documentation":{"total_count":"The total number of found reactions ","reactions":"The list of added reactions ","next_offset":"The offset for the next request. If empty, there are no more results","_":"Represents a list of reactions added to a message "},"type":{"subclass":"addedReactions","properties":[{"name":"total_count","type":"int32"},{"name":"reactions","type":"vector<addedReaction>"},{"name":"next_offset","type":"string"}],"abstractClass":"AddedReactions"}},{"documentation":{"type":"Type of the reaction ","needs_premium":"True, if Telegram Premium is needed to send the reaction","_":"Represents an available reaction "},"type":{"subclass":"availableReaction","properties":[{"name":"type","type":"ReactionType"},{"name":"needs_premium","type":"Bool"}],"abstractClass":"AvailableReaction"}},{"documentation":{"top_reactions":"List of reactions to be shown at the top ","recent_reactions":"List of recently used reactions ","popular_reactions":"List of popular reactions ","allow_custom_emoji":"True, if custom emoji reactions could be added by Telegram Premium subscribers","_":"Represents a list of reactions that can be added to a message "},"type":{"subclass":"availableReactions","properties":[{"name":"top_reactions","type":"vector<availableReaction>"},{"name":"recent_reactions","type":"vector<availableReaction>"},{"name":"popular_reactions","type":"vector<availableReaction>"},{"name":"allow_custom_emoji","type":"Bool"}],"abstractClass":"AvailableReactions"}},{"documentation":{"emoji":"Text representation of the reaction ","title":"Reaction title ","is_active":"True, if the reaction can be added to new messages and enabled in chats ","static_icon":"Static icon for the reaction ","appear_animation":"Appear animation for the reaction ","select_animation":"Select animation for the reaction ","activate_animation":"Activate animation for the reaction ","effect_animation":"Effect animation for the reaction ","around_animation":"Around animation for the reaction; may be null ","center_animation":"Center animation for the reaction; may be null","_":"Contains information about a emoji reaction "},"type":{"subclass":"emojiReaction","properties":[{"name":"emoji","type":"string"},{"name":"title","type":"string"},{"name":"is_active","type":"Bool"},{"name":"static_icon","type":"sticker"},{"name":"appear_animation","type":"sticker"},{"name":"select_animation","type":"sticker"},{"name":"activate_animation","type":"sticker"},{"name":"effect_animation","type":"sticker"},{"name":"around_animation","type":"sticker"},{"name":"center_animation","type":"sticker"}],"abstractClass":"EmojiReaction"}},{"documentation":{"animations":"List of animations","_":"Represents a list of animations "},"type":{"subclass":"animations","properties":[{"name":"animations","type":"vector<animation>"}],"abstractClass":"Animations"}},{"documentation":{"class":"DiceStickers ","sticker":"The animated sticker with the dice animation","_":"A regular animated sticker "},"type":{"subclass":"diceStickersRegular","properties":[{"name":"sticker","type":"sticker"}],"abstractClass":"DiceStickers"}},{"documentation":{"background":"The animated sticker with the slot machine background. The background animation must start playing after all reel animations finish ","lever":"The animated sticker with the lever animation. The lever animation must play once in the initial dice state ","left_reel":"The animated sticker with the left reel ","center_reel":"The animated sticker with the center reel ","right_reel":"The animated sticker with the right reel","_":"Animated stickers to be combined into a slot machine "},"type":{"subclass":"diceStickersSlotMachine","properties":[{"name":"background","type":"sticker"},{"name":"lever","type":"sticker"},{"name":"left_reel","type":"sticker"},{"name":"center_reel","type":"sticker"},{"name":"right_reel","type":"sticker"}],"abstractClass":"DiceStickers"}},{"documentation":{"user_ids":"User identifiers of the imported contacts in the same order as they were specified in the request; 0 if the contact is not yet a registered user ","importer_count":"The number of users that imported the corresponding contact; 0 for already registered users or if unavailable","_":"Represents the result of an importContacts request "},"type":{"subclass":"importedContacts","properties":[{"name":"user_ids","type":"vector<int53>"},{"name":"importer_count","type":"vector<int32>"}],"abstractClass":"ImportedContacts"}},{"documentation":{"class":"SpeechRecognitionResult ","partial_text":"Partially recognized text","_":"The speech recognition is ongoing "},"type":{"subclass":"speechRecognitionResultPending","properties":[{"name":"partial_text","type":"string"}],"abstractClass":"SpeechRecognitionResult"}},{"documentation":{"text":"Recognized text","_":"The speech recognition successfully finished "},"type":{"subclass":"speechRecognitionResultText","properties":[{"name":"text","type":"string"}],"abstractClass":"SpeechRecognitionResult"}},{"documentation":{"error":"Received error","_":"The speech recognition failed "},"type":{"subclass":"speechRecognitionResultError","properties":[{"name":"error","type":"error"}],"abstractClass":"SpeechRecognitionResult"}},{"documentation":{"light_color":"Color in the RGB24 format for light themes ","dark_color":"Color in the RGB24 format for dark themes","_":"Describes a color to highlight a bot added to attachment menu "},"type":{"subclass":"attachmentMenuBotColor","properties":[{"name":"light_color","type":"int32"},{"name":"dark_color","type":"int32"}],"abstractClass":"AttachmentMenuBotColor"}},{"documentation":{"bot_user_id":"User identifier of the bot added to attachment menu ","supports_self_chat":"True, if the bot supports opening from attachment menu in the chat with the bot ","supports_user_chats":"True, if the bot supports opening from attachment menu in private chats with ordinary users ","supports_bot_chats":"True, if the bot supports opening from attachment menu in private chats with other bots ","supports_group_chats":"True, if the bot supports opening from attachment menu in basic group and supergroup chats ","supports_channel_chats":"True, if the bot supports opening from attachment menu in channel chats ","supports_settings":"True, if the bot supports \"settings_button_pressed\" event ","name":"Name for the bot in attachment menu ","name_color":"Color to highlight selected name of the bot if appropriate; may be null ","default_icon":"Default attachment menu icon for the bot in SVG format; may be null ","ios_static_icon":"Attachment menu icon for the bot in SVG format for the official iOS app; may be null ","ios_animated_icon":"Attachment menu icon for the bot in TGS format for the official iOS app; may be null ","android_icon":"Attachment menu icon for the bot in TGS format for the official Android app; may be null ","macos_icon":"Attachment menu icon for the bot in TGS format for the official native macOS app; may be null ","icon_color":"Color to highlight selected icon of the bot if appropriate; may be null ","web_app_placeholder":"Default placeholder for opened Web Apps in SVG format; may be null","_":"Represents a bot added to attachment menu "},"type":{"subclass":"attachmentMenuBot","properties":[{"name":"bot_user_id","type":"int53"},{"name":"supports_self_chat","type":"Bool"},{"name":"supports_user_chats","type":"Bool"},{"name":"supports_bot_chats","type":"Bool"},{"name":"supports_group_chats","type":"Bool"},{"name":"supports_channel_chats","type":"Bool"},{"name":"supports_settings","type":"Bool"},{"name":"name","type":"string"},{"name":"name_color","type":"attachmentMenuBotColor"},{"name":"default_icon","type":"file"},{"name":"ios_static_icon","type":"file"},{"name":"ios_animated_icon","type":"file"},{"name":"android_icon","type":"file"},{"name":"macos_icon","type":"file"},{"name":"icon_color","type":"attachmentMenuBotColor"},{"name":"web_app_placeholder","type":"file"}],"abstractClass":"AttachmentMenuBot"}},{"documentation":{"inline_message_id":"Identifier of the sent inline message, if known","_":"Information about the message sent by answerWebAppQuery "},"type":{"subclass":"sentWebAppMessage","properties":[{"name":"inline_message_id","type":"string"}],"abstractClass":"SentWebAppMessage"}},{"documentation":{"url":"The URL","_":"Contains an HTTP URL "},"type":{"subclass":"httpUrl","properties":[{"name":"url","type":"string"}],"abstractClass":"HttpUrl"}},{"documentation":{"url":"The URL ","expires_in":"Left time for which the link is valid, in seconds; 0 if the link is a public username link","_":"Contains an HTTPS URL, which can be used to get information about a user "},"type":{"subclass":"userLink","properties":[{"name":"url","type":"string"},{"name":"expires_in","type":"int32"}],"abstractClass":"UserLink"}},{"documentation":{"class":"InputInlineQueryResult ","id":"Unique identifier of the query result ","title":"Title of the query result ","thumbnail_url":"URL of the result thumbnail (JPEG, GIF, or MPEG4), if it exists ","thumbnail_mime_type":"MIME type of the video thumbnail. If non-empty, must be one of \"image/jpeg\", \"image/gif\" and \"video/mp4\" ","video_url":"The URL of the video file (file size must not exceed 1MB) ","video_mime_type":"MIME type of the video file. Must be one of \"image/gif\" and \"video/mp4\" ","video_duration":"Duration of the video, in seconds ","video_width":"Width of the video ","video_height":"Height of the video ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageAnimation, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to an animated GIF or an animated (i.e., without sound) H.264/MPEG-4 AVC video "},"type":{"subclass":"inputInlineQueryResultAnimation","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"thumbnail_mime_type","type":"string"},{"name":"video_url","type":"string"},{"name":"video_mime_type","type":"string"},{"name":"video_duration","type":"int32"},{"name":"video_width","type":"int32"},{"name":"video_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"description":"A short description of the result ","id":"Unique identifier of the query result ","url":"URL of the result, if it exists ","hide_url":"True, if the URL must be not shown ","title":"Title of the result ","param_description":"A short description of the result ","thumbnail_url":"URL of the result thumbnail, if it exists ","thumbnail_width":"Thumbnail width, if known ","thumbnail_height":"Thumbnail height, if known ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to an article or web page "},"type":{"subclass":"inputInlineQueryResultArticle","properties":[{"name":"id","type":"string"},{"name":"url","type":"string"},{"name":"hide_url","type":"Bool"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"thumbnail_width","type":"int32"},{"name":"thumbnail_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","title":"Title of the audio file ","performer":"Performer of the audio file ","audio_url":"The URL of the audio file ","audio_duration":"Audio file duration, in seconds ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageAudio, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to an MP3 audio file "},"type":{"subclass":"inputInlineQueryResultAudio","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"performer","type":"string"},{"name":"audio_url","type":"string"},{"name":"audio_duration","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","contact":"User contact ","thumbnail_url":"URL of the result thumbnail, if it exists ","thumbnail_width":"Thumbnail width, if known ","thumbnail_height":"Thumbnail height, if known ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a user contact "},"type":{"subclass":"inputInlineQueryResultContact","properties":[{"name":"id","type":"string"},{"name":"contact","type":"contact"},{"name":"thumbnail_url","type":"string"},{"name":"thumbnail_width","type":"int32"},{"name":"thumbnail_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"description":"Short description of the result, if known ","id":"Unique identifier of the query result ","title":"Title of the resulting file ","param_description":"Short description of the result, if known ","document_url":"URL of the file ","mime_type":"MIME type of the file content; only \"application/pdf\" and \"application/zip\" are currently allowed ","thumbnail_url":"The URL of the file thumbnail, if it exists ","thumbnail_width":"Width of the thumbnail ","thumbnail_height":"Height of the thumbnail ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageDocument, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to a file "},"type":{"subclass":"inputInlineQueryResultDocument","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"document_url","type":"string"},{"name":"mime_type","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"thumbnail_width","type":"int32"},{"name":"thumbnail_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","game_short_name":"Short name of the game ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null","_":"Represents a game "},"type":{"subclass":"inputInlineQueryResultGame","properties":[{"name":"id","type":"string"},{"name":"game_short_name","type":"string"},{"name":"reply_markup","type":"ReplyMarkup"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","location":"Location result ","live_period":"Amount of time relative to the message sent time until the location can be updated, in seconds ","title":"Title of the result ","thumbnail_url":"URL of the result thumbnail, if it exists ","thumbnail_width":"Thumbnail width, if known ","thumbnail_height":"Thumbnail height, if known ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a point on the map "},"type":{"subclass":"inputInlineQueryResultLocation","properties":[{"name":"id","type":"string"},{"name":"location","type":"location"},{"name":"live_period","type":"int32"},{"name":"title","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"thumbnail_width","type":"int32"},{"name":"thumbnail_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"description":"A short description of the result, if known ","id":"Unique identifier of the query result ","title":"Title of the result, if known ","param_description":"A short description of the result, if known ","thumbnail_url":"URL of the photo thumbnail, if it exists ","photo_url":"The URL of the JPEG photo (photo size must not exceed 5MB) ","photo_width":"Width of the photo ","photo_height":"Height of the photo ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessagePhoto, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents link to a JPEG image "},"type":{"subclass":"inputInlineQueryResultPhoto","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"photo_url","type":"string"},{"name":"photo_width","type":"int32"},{"name":"photo_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","thumbnail_url":"URL of the sticker thumbnail, if it exists ","sticker_url":"The URL of the WEBP, TGS, or WEBM sticker (sticker file size must not exceed 5MB) ","sticker_width":"Width of the sticker ","sticker_height":"Height of the sticker ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageSticker, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to a WEBP, TGS, or WEBM sticker "},"type":{"subclass":"inputInlineQueryResultSticker","properties":[{"name":"id","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"sticker_url","type":"string"},{"name":"sticker_width","type":"int32"},{"name":"sticker_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","venue":"Venue result ","thumbnail_url":"URL of the result thumbnail, if it exists ","thumbnail_width":"Thumbnail width, if known ","thumbnail_height":"Thumbnail height, if known ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents information about a venue "},"type":{"subclass":"inputInlineQueryResultVenue","properties":[{"name":"id","type":"string"},{"name":"venue","type":"venue"},{"name":"thumbnail_url","type":"string"},{"name":"thumbnail_width","type":"int32"},{"name":"thumbnail_height","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"description":"A short description of the result, if known ","id":"Unique identifier of the query result ","title":"Title of the result ","param_description":"A short description of the result, if known ","thumbnail_url":"The URL of the video thumbnail (JPEG), if it exists ","video_url":"URL of the embedded video player or video file ","mime_type":"MIME type of the content of the video URL, only \"text/html\" or \"video/mp4\" are currently supported ","video_width":"Width of the video ","video_height":"Height of the video ","video_duration":"Video duration, in seconds ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageVideo, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to a page containing an embedded video player or a video file "},"type":{"subclass":"inputInlineQueryResultVideo","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"thumbnail_url","type":"string"},{"name":"video_url","type":"string"},{"name":"mime_type","type":"string"},{"name":"video_width","type":"int32"},{"name":"video_height","type":"int32"},{"name":"video_duration","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","title":"Title of the voice note ","voice_note_url":"The URL of the voice note file ","voice_note_duration":"Duration of the voice note, in seconds ","reply_markup":"The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null ","input_message_content":"The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageVoiceNote, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact","_":"Represents a link to an opus-encoded audio file within an OGG container, single channel audio "},"type":{"subclass":"inputInlineQueryResultVoiceNote","properties":[{"name":"id","type":"string"},{"name":"title","type":"string"},{"name":"voice_note_url","type":"string"},{"name":"voice_note_duration","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"InputInlineQueryResult"}},{"documentation":{"class":"InlineQueryResult ","description":"A short description of the result ","id":"Unique identifier of the query result ","url":"URL of the result, if it exists ","hide_url":"True, if the URL must be not shown ","title":"Title of the result ","param_description":"A short description of the result ","thumbnail":"Result thumbnail in JPEG format; may be null","_":"Represents a link to an article or web page "},"type":{"subclass":"inlineQueryResultArticle","properties":[{"name":"id","type":"string"},{"name":"url","type":"string"},{"name":"hide_url","type":"Bool"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"thumbnail","type":"thumbnail"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","contact":"A user contact ","thumbnail":"Result thumbnail in JPEG format; may be null","_":"Represents a user contact "},"type":{"subclass":"inlineQueryResultContact","properties":[{"name":"id","type":"string"},{"name":"contact","type":"contact"},{"name":"thumbnail","type":"thumbnail"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","location":"Location result ","title":"Title of the result ","thumbnail":"Result thumbnail in JPEG format; may be null","_":"Represents a point on the map "},"type":{"subclass":"inlineQueryResultLocation","properties":[{"name":"id","type":"string"},{"name":"location","type":"location"},{"name":"title","type":"string"},{"name":"thumbnail","type":"thumbnail"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","venue":"Venue result ","thumbnail":"Result thumbnail in JPEG format; may be null","_":"Represents information about a venue "},"type":{"subclass":"inlineQueryResultVenue","properties":[{"name":"id","type":"string"},{"name":"venue","type":"venue"},{"name":"thumbnail","type":"thumbnail"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","game":"Game result","_":"Represents information about a game "},"type":{"subclass":"inlineQueryResultGame","properties":[{"name":"id","type":"string"},{"name":"game","type":"game"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","animation":"Animation file ","title":"Animation title","_":"Represents an animation file "},"type":{"subclass":"inlineQueryResultAnimation","properties":[{"name":"id","type":"string"},{"name":"animation","type":"animation"},{"name":"title","type":"string"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","audio":"Audio file","_":"Represents an audio file "},"type":{"subclass":"inlineQueryResultAudio","properties":[{"name":"id","type":"string"},{"name":"audio","type":"audio"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"description":"Document description","id":"Unique identifier of the query result ","document":"Document ","title":"Document title ","param_description":"Document description","_":"Represents a document "},"type":{"subclass":"inlineQueryResultDocument","properties":[{"name":"id","type":"string"},{"name":"document","type":"document"},{"name":"title","type":"string"},{"name":"description","type":"string"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"description":"A short description of the result, if known","id":"Unique identifier of the query result ","photo":"Photo ","title":"Title of the result, if known ","param_description":"A short description of the result, if known","_":"Represents a photo "},"type":{"subclass":"inlineQueryResultPhoto","properties":[{"name":"id","type":"string"},{"name":"photo","type":"photo"},{"name":"title","type":"string"},{"name":"description","type":"string"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","sticker":"Sticker","_":"Represents a sticker "},"type":{"subclass":"inlineQueryResultSticker","properties":[{"name":"id","type":"string"},{"name":"sticker","type":"sticker"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"description":"Description of the video","id":"Unique identifier of the query result ","video":"Video ","title":"Title of the video ","param_description":"Description of the video","_":"Represents a video "},"type":{"subclass":"inlineQueryResultVideo","properties":[{"name":"id","type":"string"},{"name":"video","type":"video"},{"name":"title","type":"string"},{"name":"description","type":"string"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"id":"Unique identifier of the query result ","voice_note":"Voice note ","title":"Title of the voice note","_":"Represents a voice note "},"type":{"subclass":"inlineQueryResultVoiceNote","properties":[{"name":"id","type":"string"},{"name":"voice_note","type":"voiceNote"},{"name":"title","type":"string"}],"abstractClass":"InlineQueryResult"}},{"documentation":{"inline_query_id":"Unique identifier of the inline query ","next_offset":"The offset for the next request. If empty, there are no more results ","results":"Results of the query ","switch_pm_text":"If non-empty, this text must be shown on the button, which opens a private chat with the bot and sends the bot a start message with the switch_pm_parameter ","switch_pm_parameter":"Parameter for the bot start message","_":"Represents the results of the inline query. Use sendInlineQueryResultMessage to send the result of the query "},"type":{"subclass":"inlineQueryResults","properties":[{"name":"inline_query_id","type":"int64"},{"name":"next_offset","type":"string"},{"name":"results","type":"vector<InlineQueryResult>"},{"name":"switch_pm_text","type":"string"},{"name":"switch_pm_parameter","type":"string"}],"abstractClass":"InlineQueryResults"}},{"documentation":{"class":"CallbackQueryPayload ","data":"Data that was attached to the callback button","_":"The payload for a general callback button "},"type":{"subclass":"callbackQueryPayloadData","properties":[{"name":"data","type":"bytes"}],"abstractClass":"CallbackQueryPayload"}},{"documentation":{"password":"The 2-step verification password for the current user ","data":"Data that was attached to the callback button","_":"The payload for a callback button requiring password "},"type":{"subclass":"callbackQueryPayloadDataWithPassword","properties":[{"name":"password","type":"string"},{"name":"data","type":"bytes"}],"abstractClass":"CallbackQueryPayload"}},{"documentation":{"game_short_name":"A short name of the game that was attached to the callback button","_":"The payload for a game callback button "},"type":{"subclass":"callbackQueryPayloadGame","properties":[{"name":"game_short_name","type":"string"}],"abstractClass":"CallbackQueryPayload"}},{"documentation":{"text":"Text of the answer ","show_alert":"True, if an alert must be shown to the user instead of a toast notification ","url":"URL to be opened","_":"Contains a bot's answer to a callback query "},"type":{"subclass":"callbackQueryAnswer","properties":[{"name":"text","type":"string"},{"name":"show_alert","type":"Bool"},{"name":"url","type":"string"}],"abstractClass":"CallbackQueryAnswer"}},{"documentation":{"result":"A JSON-serialized result","_":"Contains the result of a custom request "},"type":{"subclass":"customRequestResult","properties":[{"name":"result","type":"string"}],"abstractClass":"CustomRequestResult"}},{"documentation":{"position":"Position in the high score table ","user_id":"User identifier ","score":"User score","_":"Contains one row of the game high score table "},"type":{"subclass":"gameHighScore","properties":[{"name":"position","type":"int32"},{"name":"user_id","type":"int53"},{"name":"score","type":"int32"}],"abstractClass":"GameHighScore"}},{"documentation":{"scores":"A list of game high scores","_":"Contains a list of game high scores "},"type":{"subclass":"gameHighScores","properties":[{"name":"scores","type":"vector<gameHighScore>"}],"abstractClass":"GameHighScores"}},{"documentation":{"class":"ChatEventAction ","old_message":"The original message before the edit ","new_message":"The message after it was edited","_":"A message was edited "},"type":{"subclass":"chatEventMessageEdited","properties":[{"name":"old_message","type":"message"},{"name":"new_message","type":"message"}],"abstractClass":"ChatEventAction"}},{"documentation":{"message":"Deleted message ","can_report_anti_spam_false_positive":"True, if the message deletion can be reported via reportSupergroupAntiSpamFalsePositive","_":"A message was deleted "},"type":{"subclass":"chatEventMessageDeleted","properties":[{"name":"message","type":"message"},{"name":"can_report_anti_spam_false_positive","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"message":"Pinned message","_":"A message was pinned "},"type":{"subclass":"chatEventMessagePinned","properties":[{"name":"message","type":"message"}],"abstractClass":"ChatEventAction"}},{"documentation":{"message":"Unpinned message","_":"A message was unpinned "},"type":{"subclass":"chatEventMessageUnpinned","properties":[{"name":"message","type":"message"}],"abstractClass":"ChatEventAction"}},{"documentation":{"message":"The message with the poll","_":"A poll in a message was stopped "},"type":{"subclass":"chatEventPollStopped","properties":[{"name":"message","type":"message"}],"abstractClass":"ChatEventAction"}},{"documentation":{"_":"A new member joined the chat"},"type":{"subclass":"chatEventMemberJoined","properties":[],"abstractClass":"ChatEventAction"}},{"documentation":{"invite_link":"Invite link used to join the chat","_":"A new member joined the chat via an invite link "},"type":{"subclass":"chatEventMemberJoinedByInviteLink","properties":[{"name":"invite_link","type":"chatInviteLink"}],"abstractClass":"ChatEventAction"}},{"documentation":{"approver_user_id":"User identifier of the chat administrator, approved user join request ","invite_link":"Invite link used to join the chat; may be null","_":"A new member was accepted to the chat by an administrator "},"type":{"subclass":"chatEventMemberJoinedByRequest","properties":[{"name":"approver_user_id","type":"int53"},{"name":"invite_link","type":"chatInviteLink"}],"abstractClass":"ChatEventAction"}},{"documentation":{"user_id":"New member user identifier ","status":"New member status","_":"A new chat member was invited "},"type":{"subclass":"chatEventMemberInvited","properties":[{"name":"user_id","type":"int53"},{"name":"status","type":"ChatMemberStatus"}],"abstractClass":"ChatEventAction"}},{"documentation":{"_":"A member left the chat"},"type":{"subclass":"chatEventMemberLeft","properties":[],"abstractClass":"ChatEventAction"}},{"documentation":{"user_id":"Affected chat member user identifier ","old_status":"Previous status of the chat member ","new_status":"New status of the chat member","_":"A chat member has gained/lost administrator status, or the list of their administrator privileges has changed "},"type":{"subclass":"chatEventMemberPromoted","properties":[{"name":"user_id","type":"int53"},{"name":"old_status","type":"ChatMemberStatus"},{"name":"new_status","type":"ChatMemberStatus"}],"abstractClass":"ChatEventAction"}},{"documentation":{"member_id":"Affected chat member identifier ","old_status":"Previous status of the chat member ","new_status":"New status of the chat member","_":"A chat member was restricted/unrestricted or banned/unbanned, or the list of their restrictions has changed "},"type":{"subclass":"chatEventMemberRestricted","properties":[{"name":"member_id","type":"MessageSender"},{"name":"old_status","type":"ChatMemberStatus"},{"name":"new_status","type":"ChatMemberStatus"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_available_reactions":"Previous chat available reactions ","new_available_reactions":"New chat available reactions","_":"The chat available reactions were changed "},"type":{"subclass":"chatEventAvailableReactionsChanged","properties":[{"name":"old_available_reactions","type":"ChatAvailableReactions"},{"name":"new_available_reactions","type":"ChatAvailableReactions"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_description":"Previous chat description ","new_description":"New chat description","_":"The chat description was changed "},"type":{"subclass":"chatEventDescriptionChanged","properties":[{"name":"old_description","type":"string"},{"name":"new_description","type":"string"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_linked_chat_id":"Previous supergroup linked chat identifier ","new_linked_chat_id":"New supergroup linked chat identifier","_":"The linked chat of a supergroup was changed "},"type":{"subclass":"chatEventLinkedChatChanged","properties":[{"name":"old_linked_chat_id","type":"int53"},{"name":"new_linked_chat_id","type":"int53"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_location":"Previous location; may be null ","new_location":"New location; may be null","_":"The supergroup location was changed "},"type":{"subclass":"chatEventLocationChanged","properties":[{"name":"old_location","type":"chatLocation"},{"name":"new_location","type":"chatLocation"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_message_ttl":"Previous value of message_ttl ","new_message_ttl":"New value of message_ttl","_":"The message TTL was changed "},"type":{"subclass":"chatEventMessageTtlChanged","properties":[{"name":"old_message_ttl","type":"int32"},{"name":"new_message_ttl","type":"int32"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_permissions":"Previous chat permissions ","new_permissions":"New chat permissions","_":"The chat permissions was changed "},"type":{"subclass":"chatEventPermissionsChanged","properties":[{"name":"old_permissions","type":"chatPermissions"},{"name":"new_permissions","type":"chatPermissions"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_photo":"Previous chat photo value; may be null ","new_photo":"New chat photo value; may be null","_":"The chat photo was changed "},"type":{"subclass":"chatEventPhotoChanged","properties":[{"name":"old_photo","type":"chatPhoto"},{"name":"new_photo","type":"chatPhoto"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_slow_mode_delay":"Previous value of slow_mode_delay, in seconds ","new_slow_mode_delay":"New value of slow_mode_delay, in seconds","_":"The slow_mode_delay setting of a supergroup was changed "},"type":{"subclass":"chatEventSlowModeDelayChanged","properties":[{"name":"old_slow_mode_delay","type":"int32"},{"name":"new_slow_mode_delay","type":"int32"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_sticker_set_id":"Previous identifier of the chat sticker set; 0 if none ","new_sticker_set_id":"New identifier of the chat sticker set; 0 if none","_":"The supergroup sticker set was changed "},"type":{"subclass":"chatEventStickerSetChanged","properties":[{"name":"old_sticker_set_id","type":"int64"},{"name":"new_sticker_set_id","type":"int64"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_title":"Previous chat title ","new_title":"New chat title","_":"The chat title was changed "},"type":{"subclass":"chatEventTitleChanged","properties":[{"name":"old_title","type":"string"},{"name":"new_title","type":"string"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_username":"Previous chat username ","new_username":"New chat username","_":"The chat editable username was changed "},"type":{"subclass":"chatEventUsernameChanged","properties":[{"name":"old_username","type":"string"},{"name":"new_username","type":"string"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_usernames":"Previous list of active usernames ","new_usernames":"New list of active usernames","_":"The chat active usernames were changed "},"type":{"subclass":"chatEventActiveUsernamesChanged","properties":[{"name":"old_usernames","type":"vector<string>"},{"name":"new_usernames","type":"vector<string>"}],"abstractClass":"ChatEventAction"}},{"documentation":{"has_protected_content":"New value of has_protected_content","_":"The has_protected_content setting of a channel was toggled "},"type":{"subclass":"chatEventHasProtectedContentToggled","properties":[{"name":"has_protected_content","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"can_invite_users":"New value of can_invite_users permission","_":"The can_invite_users permission of a supergroup chat was toggled "},"type":{"subclass":"chatEventInvitesToggled","properties":[{"name":"can_invite_users","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"is_all_history_available":"New value of is_all_history_available","_":"The is_all_history_available setting of a supergroup was toggled "},"type":{"subclass":"chatEventIsAllHistoryAvailableToggled","properties":[{"name":"is_all_history_available","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"is_aggressive_anti_spam_enabled":"New value of is_aggressive_anti_spam_enabled","_":"The is_aggressive_anti_spam_enabled setting of a supergroup was toggled "},"type":{"subclass":"chatEventIsAggressiveAntiSpamEnabledToggled","properties":[{"name":"is_aggressive_anti_spam_enabled","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"sign_messages":"New value of sign_messages","_":"The sign_messages setting of a channel was toggled "},"type":{"subclass":"chatEventSignMessagesToggled","properties":[{"name":"sign_messages","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_invite_link":"Previous information about the invite link ","new_invite_link":"New information about the invite link","_":"A chat invite link was edited "},"type":{"subclass":"chatEventInviteLinkEdited","properties":[{"name":"old_invite_link","type":"chatInviteLink"},{"name":"new_invite_link","type":"chatInviteLink"}],"abstractClass":"ChatEventAction"}},{"documentation":{"invite_link":"The invite link","_":"A chat invite link was revoked "},"type":{"subclass":"chatEventInviteLinkRevoked","properties":[{"name":"invite_link","type":"chatInviteLink"}],"abstractClass":"ChatEventAction"}},{"documentation":{"invite_link":"The invite link","_":"A revoked chat invite link was deleted "},"type":{"subclass":"chatEventInviteLinkDeleted","properties":[{"name":"invite_link","type":"chatInviteLink"}],"abstractClass":"ChatEventAction"}},{"documentation":{"group_call_id":"Identifier of the video chat. The video chat can be received through the method getGroupCall","_":"A video chat was created "},"type":{"subclass":"chatEventVideoChatCreated","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"ChatEventAction"}},{"documentation":{"group_call_id":"Identifier of the video chat. The video chat can be received through the method getGroupCall","_":"A video chat was ended "},"type":{"subclass":"chatEventVideoChatEnded","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"ChatEventAction"}},{"documentation":{"mute_new_participants":"New value of the mute_new_participants setting","_":"The mute_new_participants setting of a video chat was toggled "},"type":{"subclass":"chatEventVideoChatMuteNewParticipantsToggled","properties":[{"name":"mute_new_participants","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"participant_id":"Identifier of the affected group call participant ","is_muted":"New value of is_muted","_":"A video chat participant was muted or unmuted "},"type":{"subclass":"chatEventVideoChatParticipantIsMutedToggled","properties":[{"name":"participant_id","type":"MessageSender"},{"name":"is_muted","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"participant_id":"Identifier of the affected group call participant ","volume_level":"New value of volume_level; 1-20000 in hundreds of percents","_":"A video chat participant volume level was changed "},"type":{"subclass":"chatEventVideoChatParticipantVolumeLevelChanged","properties":[{"name":"participant_id","type":"MessageSender"},{"name":"volume_level","type":"int32"}],"abstractClass":"ChatEventAction"}},{"documentation":{"is_forum":"New value of is_forum","_":"The is_forum setting of a channel was toggled "},"type":{"subclass":"chatEventIsForumToggled","properties":[{"name":"is_forum","type":"Bool"}],"abstractClass":"ChatEventAction"}},{"documentation":{"topic_info":"Information about the topic","_":"A new forum topic was created "},"type":{"subclass":"chatEventForumTopicCreated","properties":[{"name":"topic_info","type":"forumTopicInfo"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_topic_info":"Old information about the topic ","new_topic_info":"New information about the topic","_":"A forum topic was edited "},"type":{"subclass":"chatEventForumTopicEdited","properties":[{"name":"old_topic_info","type":"forumTopicInfo"},{"name":"new_topic_info","type":"forumTopicInfo"}],"abstractClass":"ChatEventAction"}},{"documentation":{"topic_info":"New information about the topic","_":"A forum topic was closed or reopened "},"type":{"subclass":"chatEventForumTopicToggleIsClosed","properties":[{"name":"topic_info","type":"forumTopicInfo"}],"abstractClass":"ChatEventAction"}},{"documentation":{"topic_info":"New information about the topic","_":"The General forum topic was hidden or unhidden "},"type":{"subclass":"chatEventForumTopicToggleIsHidden","properties":[{"name":"topic_info","type":"forumTopicInfo"}],"abstractClass":"ChatEventAction"}},{"documentation":{"topic_info":"Information about the topic","_":"A forum topic was deleted "},"type":{"subclass":"chatEventForumTopicDeleted","properties":[{"name":"topic_info","type":"forumTopicInfo"}],"abstractClass":"ChatEventAction"}},{"documentation":{"old_topic_info":"Information about the old pinned topic; may be null ","new_topic_info":"Information about the new pinned topic; may be null","_":"A pinned forum topic was changed "},"type":{"subclass":"chatEventForumTopicPinned","properties":[{"name":"old_topic_info","type":"forumTopicInfo"},{"name":"new_topic_info","type":"forumTopicInfo"}],"abstractClass":"ChatEventAction"}},{"documentation":{"id":"Chat event identifier ","date":"Point in time (Unix timestamp) when the event happened ","member_id":"Identifier of the user or chat who performed the action ","action":"The action","_":"Represents a chat event "},"type":{"subclass":"chatEvent","properties":[{"name":"id","type":"int64"},{"name":"date","type":"int32"},{"name":"member_id","type":"MessageSender"},{"name":"action","type":"ChatEventAction"}],"abstractClass":"ChatEvent"}},{"documentation":{"events":"List of events","_":"Contains a list of chat events "},"type":{"subclass":"chatEvents","properties":[{"name":"events","type":"vector<chatEvent>"}],"abstractClass":"ChatEvents"}},{"documentation":{"message_edits":"True, if message edits need to be returned ","message_deletions":"True, if message deletions need to be returned ","message_pins":"True, if pin/unpin events need to be returned ","member_joins":"True, if members joining events need to be returned ","member_leaves":"True, if members leaving events need to be returned ","member_invites":"True, if invited member events need to be returned ","member_promotions":"True, if member promotion/demotion events need to be returned ","member_restrictions":"True, if member restricted/unrestricted/banned/unbanned events need to be returned ","info_changes":"True, if changes in chat information need to be returned ","setting_changes":"True, if changes in chat settings need to be returned ","invite_link_changes":"True, if changes to invite links need to be returned ","video_chat_changes":"True, if video chat actions need to be returned ","forum_changes":"True, if forum-related actions need to be returned","_":"Represents a set of filters used to obtain a chat event log "},"type":{"subclass":"chatEventLogFilters","properties":[{"name":"message_edits","type":"Bool"},{"name":"message_deletions","type":"Bool"},{"name":"message_pins","type":"Bool"},{"name":"member_joins","type":"Bool"},{"name":"member_leaves","type":"Bool"},{"name":"member_invites","type":"Bool"},{"name":"member_promotions","type":"Bool"},{"name":"member_restrictions","type":"Bool"},{"name":"info_changes","type":"Bool"},{"name":"setting_changes","type":"Bool"},{"name":"invite_link_changes","type":"Bool"},{"name":"video_chat_changes","type":"Bool"},{"name":"forum_changes","type":"Bool"}],"abstractClass":"ChatEventLogFilters"}},{"documentation":{"class":"LanguagePackStringValue ","value":"String value","_":"An ordinary language pack string "},"type":{"subclass":"languagePackStringValueOrdinary","properties":[{"name":"value","type":"string"}],"abstractClass":"LanguagePackStringValue"}},{"documentation":{"zero_value":"Value for zero objects ","one_value":"Value for one object ","two_value":"Value for two objects ","few_value":"Value for few objects ","many_value":"Value for many objects ","other_value":"Default value","_":"A language pack string which has different forms based on the number of some object it mentions. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more information "},"type":{"subclass":"languagePackStringValuePluralized","properties":[{"name":"zero_value","type":"string"},{"name":"one_value","type":"string"},{"name":"two_value","type":"string"},{"name":"few_value","type":"string"},{"name":"many_value","type":"string"},{"name":"other_value","type":"string"}],"abstractClass":"LanguagePackStringValue"}},{"documentation":{"_":"A deleted language pack string, the value must be taken from the built-in English language pack"},"type":{"subclass":"languagePackStringValueDeleted","properties":[],"abstractClass":"LanguagePackStringValue"}},{"documentation":{"key":"String key ","value":"String value; pass null if the string needs to be taken from the built-in English language pack","_":"Represents one language pack string "},"type":{"subclass":"languagePackString","properties":[{"name":"key","type":"string"},{"name":"value","type":"LanguagePackStringValue"}],"abstractClass":"LanguagePackString"}},{"documentation":{"strings":"A list of language pack strings","_":"Contains a list of language pack strings "},"type":{"subclass":"languagePackStrings","properties":[{"name":"strings","type":"vector<languagePackString>"}],"abstractClass":"LanguagePackStrings"}},{"documentation":{"id":"Unique language pack identifier ","base_language_pack_id":"Identifier of a base language pack; may be empty. If a string is missed in the language pack, then it must be fetched from base language pack. Unsupported in custom language packs ","name":"Language name ","native_name":"Name of the language in that language ","plural_code":"A language code to be used to apply plural forms. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more information ","is_official":"True, if the language pack is official ","is_rtl":"True, if the language pack strings are RTL ","is_beta":"True, if the language pack is a beta language pack ","is_installed":"True, if the language pack is installed by the current user ","total_string_count":"Total number of non-deleted strings from the language pack ","translated_string_count":"Total number of translated strings from the language pack ","local_string_count":"Total number of non-deleted strings from the language pack available locally ","translation_url":"Link to language translation interface; empty for custom local language packs","_":"Contains information about a language pack "},"type":{"subclass":"languagePackInfo","properties":[{"name":"id","type":"string"},{"name":"base_language_pack_id","type":"string"},{"name":"name","type":"string"},{"name":"native_name","type":"string"},{"name":"plural_code","type":"string"},{"name":"is_official","type":"Bool"},{"name":"is_rtl","type":"Bool"},{"name":"is_beta","type":"Bool"},{"name":"is_installed","type":"Bool"},{"name":"total_string_count","type":"int32"},{"name":"translated_string_count","type":"int32"},{"name":"local_string_count","type":"int32"},{"name":"translation_url","type":"string"}],"abstractClass":"LanguagePackInfo"}},{"documentation":{"language_packs":"List of available language packs for this application","_":"Contains information about the current localization target "},"type":{"subclass":"localizationTargetInfo","properties":[{"name":"language_packs","type":"vector<languagePackInfo>"}],"abstractClass":"LocalizationTargetInfo"}},{"documentation":{"class":"PremiumLimitType ","_":"The maximum number of joined supergroups and channels"},"type":{"subclass":"premiumLimitTypeSupergroupCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of pinned chats in the main chat list"},"type":{"subclass":"premiumLimitTypePinnedChatCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of created public chats"},"type":{"subclass":"premiumLimitTypeCreatedPublicChatCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of saved animations"},"type":{"subclass":"premiumLimitTypeSavedAnimationCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of favorite stickers"},"type":{"subclass":"premiumLimitTypeFavoriteStickerCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of chat filters"},"type":{"subclass":"premiumLimitTypeChatFilterCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of pinned and always included, or always excluded chats in a chat filter"},"type":{"subclass":"premiumLimitTypeChatFilterChosenChatCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum number of pinned chats in the archive chat list"},"type":{"subclass":"premiumLimitTypePinnedArchivedChatCount","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum length of sent media caption"},"type":{"subclass":"premiumLimitTypeCaptionLength","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"_":"The maximum length of the user's bio"},"type":{"subclass":"premiumLimitTypeBioLength","properties":[],"abstractClass":"PremiumLimitType"}},{"documentation":{"class":"PremiumFeature ","_":"Increased limits"},"type":{"subclass":"premiumFeatureIncreasedLimits","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Increased maximum upload file size"},"type":{"subclass":"premiumFeatureIncreasedUploadFileSize","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Improved download speed"},"type":{"subclass":"premiumFeatureImprovedDownloadSpeed","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"The ability to convert voice notes to text"},"type":{"subclass":"premiumFeatureVoiceRecognition","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Disabled ads"},"type":{"subclass":"premiumFeatureDisabledAds","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Allowed to use more reactions"},"type":{"subclass":"premiumFeatureUniqueReactions","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Allowed to use premium stickers with unique effects"},"type":{"subclass":"premiumFeatureUniqueStickers","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Allowed to use custom emoji stickers in message texts and captions"},"type":{"subclass":"premiumFeatureCustomEmoji","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Ability to change position of the main chat list, archive and mute all new chats from non-contacts, and completely disable notifications about the user's contacts joined Telegram"},"type":{"subclass":"premiumFeatureAdvancedChatManagement","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"A badge in the user's profile"},"type":{"subclass":"premiumFeatureProfileBadge","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"A emoji status shown along with the user's name"},"type":{"subclass":"premiumFeatureEmojiStatus","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Profile photo animation on message and chat screens"},"type":{"subclass":"premiumFeatureAnimatedProfilePhoto","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"The ability to set a custom emoji as a forum topic icon"},"type":{"subclass":"premiumFeatureForumTopicIcon","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"_":"Allowed to set a premium appllication icons"},"type":{"subclass":"premiumFeatureAppIcons","properties":[],"abstractClass":"PremiumFeature"}},{"documentation":{"type":"The type of the limit ","default_value":"Default value of the limit ","premium_value":"Value of the limit for Premium users","_":"Contains information about a limit, increased for Premium users "},"type":{"subclass":"premiumLimit","properties":[{"name":"type","type":"PremiumLimitType"},{"name":"default_value","type":"int32"},{"name":"premium_value","type":"int32"}],"abstractClass":"PremiumLimit"}},{"documentation":{"features":"The list of available features ","limits":"The list of limits, increased for Premium users ","payment_link":"An internal link to be opened to pay for Telegram Premium if store payment isn't possible; may be null if direct payment isn't available","_":"Contains information about features, available to Premium users "},"type":{"subclass":"premiumFeatures","properties":[{"name":"features","type":"vector<PremiumFeature>"},{"name":"limits","type":"vector<premiumLimit>"},{"name":"payment_link","type":"InternalLinkType"}],"abstractClass":"PremiumFeatures"}},{"documentation":{"class":"PremiumSource ","limit_type":"Type of the exceeded limit","_":"A limit was exceeded "},"type":{"subclass":"premiumSourceLimitExceeded","properties":[{"name":"limit_type","type":"PremiumLimitType"}],"abstractClass":"PremiumSource"}},{"documentation":{"feature":"The used feature","_":"A user tried to use a Premium feature "},"type":{"subclass":"premiumSourceFeature","properties":[{"name":"feature","type":"PremiumFeature"}],"abstractClass":"PremiumSource"}},{"documentation":{"referrer":"The referrer from the link","_":"A user opened an internal link of the type internalLinkTypePremiumFeatures "},"type":{"subclass":"premiumSourceLink","properties":[{"name":"referrer","type":"string"}],"abstractClass":"PremiumSource"}},{"documentation":{"_":"A user opened the Premium features screen from settings"},"type":{"subclass":"premiumSourceSettings","properties":[],"abstractClass":"PremiumSource"}},{"documentation":{"feature":"Premium feature ","animation":"Promotion animation for the feature","_":"Describes a promotion animation for a Premium feature "},"type":{"subclass":"premiumFeaturePromotionAnimation","properties":[{"name":"feature","type":"PremiumFeature"},{"name":"animation","type":"animation"}],"abstractClass":"PremiumFeaturePromotionAnimation"}},{"documentation":{"state":"Text description of the state of the current Premium subscription; may be empty if the current user has no Telegram Premium subscription ","payment_options":"The list of available options for buying Telegram Premium ","animations":"The list of available promotion animations for Premium features","_":"Contains state of Telegram Premium subscription and promotion videos for Premium features "},"type":{"subclass":"premiumState","properties":[{"name":"state","type":"formattedText"},{"name":"payment_options","type":"vector<premiumPaymentOption>"},{"name":"animations","type":"vector<premiumFeaturePromotionAnimation>"}],"abstractClass":"PremiumState"}},{"documentation":{"class":"StorePaymentPurpose ","is_restore":"Pass true if this is a restore of a Telegram Premium purchase; only for App Store","_":"The user subscribed to Telegram Premium "},"type":{"subclass":"storePaymentPurposePremiumSubscription","properties":[{"name":"is_restore","type":"Bool"}],"abstractClass":"StorePaymentPurpose"}},{"documentation":{"user_id":"Identifier of the user for which Premium was gifted ","currency":"ISO 4217 currency code of the payment currency ","amount":"Paid amount, in the smallest units of the currency","_":"The user gifted Telegram Premium to another user "},"type":{"subclass":"storePaymentPurposeGiftedPremium","properties":[{"name":"user_id","type":"int53"},{"name":"currency","type":"string"},{"name":"amount","type":"int53"}],"abstractClass":"StorePaymentPurpose"}},{"documentation":{"class":"DeviceToken ","token":"Device registration token; may be empty to deregister a device ","encrypt":"True, if push notifications must be additionally encrypted","_":"A token for Firebase Cloud Messaging "},"type":{"subclass":"deviceTokenFirebaseCloudMessaging","properties":[{"name":"token","type":"string"},{"name":"encrypt","type":"Bool"}],"abstractClass":"DeviceToken"}},{"documentation":{"device_token":"Device token; may be empty to deregister a device ","is_app_sandbox":"True, if App Sandbox is enabled","_":"A token for Apple Push Notification service "},"type":{"subclass":"deviceTokenApplePush","properties":[{"name":"device_token","type":"string"},{"name":"is_app_sandbox","type":"Bool"}],"abstractClass":"DeviceToken"}},{"documentation":{"device_token":"Device token; may be empty to deregister a device ","is_app_sandbox":"True, if App Sandbox is enabled ","encrypt":"True, if push notifications must be additionally encrypted","_":"A token for Apple Push Notification service VoIP notifications "},"type":{"subclass":"deviceTokenApplePushVoIP","properties":[{"name":"device_token","type":"string"},{"name":"is_app_sandbox","type":"Bool"},{"name":"encrypt","type":"Bool"}],"abstractClass":"DeviceToken"}},{"documentation":{"access_token":"The access token that will be used to send notifications; may be empty to deregister a device","_":"A token for Windows Push Notification Services "},"type":{"subclass":"deviceTokenWindowsPush","properties":[{"name":"access_token","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"channel_uri":"Push notification channel URI; may be empty to deregister a device","_":"A token for Microsoft Push Notification Service "},"type":{"subclass":"deviceTokenMicrosoftPush","properties":[{"name":"channel_uri","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"channel_uri":"Push notification channel URI; may be empty to deregister a device","_":"A token for Microsoft Push Notification Service VoIP channel "},"type":{"subclass":"deviceTokenMicrosoftPushVoIP","properties":[{"name":"channel_uri","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"endpoint":"Absolute URL exposed by the push service where the application server can send push messages; may be empty to deregister a device ","p256dh_base64url":"Base64url-encoded P-256 elliptic curve Diffie-Hellman public key ","auth_base64url":"Base64url-encoded authentication secret","_":"A token for web Push API "},"type":{"subclass":"deviceTokenWebPush","properties":[{"name":"endpoint","type":"string"},{"name":"p256dh_base64url","type":"string"},{"name":"auth_base64url","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"endpoint":"Absolute URL exposed by the push service where the application server can send push messages; may be empty to deregister a device","_":"A token for Simple Push API for Firefox OS "},"type":{"subclass":"deviceTokenSimplePush","properties":[{"name":"endpoint","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"token":"Token; may be empty to deregister a device","_":"A token for Ubuntu Push Client service "},"type":{"subclass":"deviceTokenUbuntuPush","properties":[{"name":"token","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"token":"Token; may be empty to deregister a device","_":"A token for BlackBerry Push Service "},"type":{"subclass":"deviceTokenBlackBerryPush","properties":[{"name":"token","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"reg_id":"Push service registration identifier; may be empty to deregister a device","_":"A token for Tizen Push Service "},"type":{"subclass":"deviceTokenTizenPush","properties":[{"name":"reg_id","type":"string"}],"abstractClass":"DeviceToken"}},{"documentation":{"id":"The globally unique identifier of push notification subscription","_":"Contains a globally unique push receiver identifier, which can be used to identify which account has received a push notification "},"type":{"subclass":"pushReceiverId","properties":[{"name":"id","type":"int64"}],"abstractClass":"PushReceiverId"}},{"documentation":{"class":"BackgroundFill ","color":"A color of the background in the RGB24 format","_":"Describes a solid fill of a background "},"type":{"subclass":"backgroundFillSolid","properties":[{"name":"color","type":"int32"}],"abstractClass":"BackgroundFill"}},{"documentation":{"top_color":"A top color of the background in the RGB24 format ","bottom_color":"A bottom color of the background in the RGB24 format ","rotation_angle":"Clockwise rotation angle of the gradient, in degrees; 0-359. Must always be divisible by 45","_":"Describes a gradient fill of a background "},"type":{"subclass":"backgroundFillGradient","properties":[{"name":"top_color","type":"int32"},{"name":"bottom_color","type":"int32"},{"name":"rotation_angle","type":"int32"}],"abstractClass":"BackgroundFill"}},{"documentation":{"colors":"A list of 3 or 4 colors of the freeform gradients in the RGB24 format","_":"Describes a freeform gradient fill of a background "},"type":{"subclass":"backgroundFillFreeformGradient","properties":[{"name":"colors","type":"vector<int32>"}],"abstractClass":"BackgroundFill"}},{"documentation":{"class":"BackgroundType ","is_blurred":"True, if the wallpaper must be downscaled to fit in 450x450 square and then box-blurred with radius 12 ","is_moving":"True, if the background needs to be slightly moved when device is tilted","_":"A wallpaper in JPEG format "},"type":{"subclass":"backgroundTypeWallpaper","properties":[{"name":"is_blurred","type":"Bool"},{"name":"is_moving","type":"Bool"}],"abstractClass":"BackgroundType"}},{"documentation":{"fill":"Fill of the background ","intensity":"Intensity of the pattern when it is shown above the filled background; 0-100. ","is_inverted":"True, if the background fill must be applied only to the pattern itself. All other pixels are black in this case. For dark themes only ","is_moving":"True, if the background needs to be slightly moved when device is tilted","_":"A PNG or TGV (gzipped subset of SVG with MIME type \"application/x-tgwallpattern\") pattern to be combined with the background fill chosen by the user "},"type":{"subclass":"backgroundTypePattern","properties":[{"name":"fill","type":"BackgroundFill"},{"name":"intensity","type":"int32"},{"name":"is_inverted","type":"Bool"},{"name":"is_moving","type":"Bool"}],"abstractClass":"BackgroundType"}},{"documentation":{"fill":"The background fill","_":"A filled background "},"type":{"subclass":"backgroundTypeFill","properties":[{"name":"fill","type":"BackgroundFill"}],"abstractClass":"BackgroundType"}},{"documentation":{"id":"Unique background identifier ","is_default":"True, if this is one of default backgrounds ","is_dark":"True, if the background is dark and is recommended to be used with dark theme ","name":"Unique background name ","document":"Document with the background; may be null. Null only for filled backgrounds ","type":"Type of the background","_":"Describes a chat background "},"type":{"subclass":"background","properties":[{"name":"id","type":"int64"},{"name":"is_default","type":"Bool"},{"name":"is_dark","type":"Bool"},{"name":"name","type":"string"},{"name":"document","type":"document"},{"name":"type","type":"BackgroundType"}],"abstractClass":"Background"}},{"documentation":{"backgrounds":"A list of backgrounds","_":"Contains a list of backgrounds "},"type":{"subclass":"backgrounds","properties":[{"name":"backgrounds","type":"vector<background>"}],"abstractClass":"Backgrounds"}},{"documentation":{"class":"InputBackground ","background":"Background file to use. Only inputFileLocal and inputFileGenerated are supported. The file must be in JPEG format for wallpapers and in PNG format for patterns","_":"A background from a local file "},"type":{"subclass":"inputBackgroundLocal","properties":[{"name":"background","type":"InputFile"}],"abstractClass":"InputBackground"}},{"documentation":{"background_id":"The background identifier","_":"A background from the server "},"type":{"subclass":"inputBackgroundRemote","properties":[{"name":"background_id","type":"int64"}],"abstractClass":"InputBackground"}},{"documentation":{"accent_color":"Theme accent color in ARGB format ","background":"The background to be used in chats; may be null ","outgoing_message_fill":"The fill to be used as a background for outgoing messages ","animate_outgoing_message_fill":"If true, the freeform gradient fill needs to be animated on every sent message ","outgoing_message_accent_color":"Accent color of outgoing messages in ARGB format","_":"Describes theme settings "},"type":{"subclass":"themeSettings","properties":[{"name":"accent_color","type":"int32"},{"name":"background","type":"background"},{"name":"outgoing_message_fill","type":"BackgroundFill"},{"name":"animate_outgoing_message_fill","type":"Bool"},{"name":"outgoing_message_accent_color","type":"int32"}],"abstractClass":"ThemeSettings"}},{"documentation":{"name":"Theme name ","light_settings":"Theme settings for a light chat theme ","dark_settings":"Theme settings for a dark chat theme","_":"Describes a chat theme "},"type":{"subclass":"chatTheme","properties":[{"name":"name","type":"string"},{"name":"light_settings","type":"themeSettings"},{"name":"dark_settings","type":"themeSettings"}],"abstractClass":"ChatTheme"}},{"documentation":{"hashtags":"A list of hashtags","_":"Contains a list of hashtags "},"type":{"subclass":"hashtags","properties":[{"name":"hashtags","type":"vector<string>"}],"abstractClass":"Hashtags"}},{"documentation":{"class":"CanTransferOwnershipResult ","_":"The session can be used"},"type":{"subclass":"canTransferOwnershipResultOk","properties":[],"abstractClass":"CanTransferOwnershipResult"}},{"documentation":{"_":"The 2-step verification needs to be enabled first"},"type":{"subclass":"canTransferOwnershipResultPasswordNeeded","properties":[],"abstractClass":"CanTransferOwnershipResult"}},{"documentation":{"retry_after":"Time left before the session can be used to transfer ownership of a chat, in seconds","_":"The 2-step verification was enabled recently, user needs to wait "},"type":{"subclass":"canTransferOwnershipResultPasswordTooFresh","properties":[{"name":"retry_after","type":"int32"}],"abstractClass":"CanTransferOwnershipResult"}},{"documentation":{"retry_after":"Time left before the session can be used to transfer ownership of a chat, in seconds","_":"The session was created recently, user needs to wait "},"type":{"subclass":"canTransferOwnershipResultSessionTooFresh","properties":[{"name":"retry_after","type":"int32"}],"abstractClass":"CanTransferOwnershipResult"}},{"documentation":{"class":"CheckChatUsernameResult ","_":"The username can be set"},"type":{"subclass":"checkChatUsernameResultOk","properties":[],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"_":"The username is invalid"},"type":{"subclass":"checkChatUsernameResultUsernameInvalid","properties":[],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"_":"The username is occupied"},"type":{"subclass":"checkChatUsernameResultUsernameOccupied","properties":[],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"_":"The username can be purchased at fragment.com"},"type":{"subclass":"checkChatUsernameResultUsernamePurchasable","properties":[],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"_":"The user has too many chats with username, one of them must be made private first"},"type":{"subclass":"checkChatUsernameResultPublicChatsTooMany","properties":[],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"_":"The user can't be a member of a public supergroup"},"type":{"subclass":"checkChatUsernameResultPublicGroupsUnavailable","properties":[],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"class":"CheckStickerSetNameResult ","_":"The name can be set"},"type":{"subclass":"checkStickerSetNameResultOk","properties":[],"abstractClass":"CheckStickerSetNameResult"}},{"documentation":{"_":"The name is invalid"},"type":{"subclass":"checkStickerSetNameResultNameInvalid","properties":[],"abstractClass":"CheckStickerSetNameResult"}},{"documentation":{"_":"The name is occupied"},"type":{"subclass":"checkStickerSetNameResultNameOccupied","properties":[],"abstractClass":"CheckStickerSetNameResult"}},{"documentation":{"class":"ResetPasswordResult ","_":"The password was reset"},"type":{"subclass":"resetPasswordResultOk","properties":[],"abstractClass":"ResetPasswordResult"}},{"documentation":{"pending_reset_date":"Point in time (Unix timestamp) after which the password can be reset immediately using resetPassword","_":"The password reset request is pending "},"type":{"subclass":"resetPasswordResultPending","properties":[{"name":"pending_reset_date","type":"int32"}],"abstractClass":"ResetPasswordResult"}},{"documentation":{"retry_date":"Point in time (Unix timestamp) when the password reset can be retried","_":"The password reset request was declined "},"type":{"subclass":"resetPasswordResultDeclined","properties":[{"name":"retry_date","type":"int32"}],"abstractClass":"ResetPasswordResult"}},{"documentation":{"class":"MessageFileType ","name":"Name of the other party; may be empty if unrecognized","_":"The messages was exported from a private chat "},"type":{"subclass":"messageFileTypePrivate","properties":[{"name":"name","type":"string"}],"abstractClass":"MessageFileType"}},{"documentation":{"title":"Title of the group chat; may be empty if unrecognized","_":"The messages was exported from a group chat "},"type":{"subclass":"messageFileTypeGroup","properties":[{"name":"title","type":"string"}],"abstractClass":"MessageFileType"}},{"documentation":{"_":"The messages was exported from a chat of unknown type"},"type":{"subclass":"messageFileTypeUnknown","properties":[],"abstractClass":"MessageFileType"}},{"documentation":{"class":"PushMessageContent ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A general message with hidden content "},"type":{"subclass":"pushMessageContentHidden","properties":[{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"animation":"Message content; may be null ","caption":"Animation caption ","is_pinned":"True, if the message is a pinned message with the specified content","_":"An animation message (GIF-style). "},"type":{"subclass":"pushMessageContentAnimation","properties":[{"name":"animation","type":"animation"},{"name":"caption","type":"string"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"audio":"Message content; may be null ","is_pinned":"True, if the message is a pinned message with the specified content","_":"An audio message "},"type":{"subclass":"pushMessageContentAudio","properties":[{"name":"audio","type":"audio"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"name":"Contact's name ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A message with a user contact "},"type":{"subclass":"pushMessageContentContact","properties":[{"name":"name","type":"string"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"_":"A contact has registered with Telegram"},"type":{"subclass":"pushMessageContentContactRegistered","properties":[],"abstractClass":"PushMessageContent"}},{"documentation":{"document":"Message content; may be null ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A document message (a general file) "},"type":{"subclass":"pushMessageContentDocument","properties":[{"name":"document","type":"document"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"title":"Game title, empty for pinned game message ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A message with a game "},"type":{"subclass":"pushMessageContentGame","properties":[{"name":"title","type":"string"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"title":"Game title, empty for pinned message ","score":"New score, 0 for pinned message ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A new high score was achieved in a game "},"type":{"subclass":"pushMessageContentGameScore","properties":[{"name":"title","type":"string"},{"name":"score","type":"int32"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"price":"Product price ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A message with an invoice from a bot "},"type":{"subclass":"pushMessageContentInvoice","properties":[{"name":"price","type":"string"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"is_live":"True, if the location is live ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A message with a location "},"type":{"subclass":"pushMessageContentLocation","properties":[{"name":"is_live","type":"Bool"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"photo":"Message content; may be null ","caption":"Photo caption ","is_secret":"True, if the photo is secret ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A photo message "},"type":{"subclass":"pushMessageContentPhoto","properties":[{"name":"photo","type":"photo"},{"name":"caption","type":"string"},{"name":"is_secret","type":"Bool"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"question":"Poll question ","is_regular":"True, if the poll is regular and not in quiz mode ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A message with a poll "},"type":{"subclass":"pushMessageContentPoll","properties":[{"name":"question","type":"string"},{"name":"is_regular","type":"Bool"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"_":"A screenshot of a message in the chat has been taken"},"type":{"subclass":"pushMessageContentScreenshotTaken","properties":[],"abstractClass":"PushMessageContent"}},{"documentation":{"sticker":"Message content; may be null ","emoji":"Emoji corresponding to the sticker; may be empty ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A message with a sticker "},"type":{"subclass":"pushMessageContentSticker","properties":[{"name":"sticker","type":"sticker"},{"name":"emoji","type":"string"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"text":"Message text ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A text message "},"type":{"subclass":"pushMessageContentText","properties":[{"name":"text","type":"string"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"video":"Message content; may be null ","caption":"Video caption ","is_secret":"True, if the video is secret ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A video message "},"type":{"subclass":"pushMessageContentVideo","properties":[{"name":"video","type":"video"},{"name":"caption","type":"string"},{"name":"is_secret","type":"Bool"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"video_note":"Message content; may be null ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A video note message "},"type":{"subclass":"pushMessageContentVideoNote","properties":[{"name":"video_note","type":"videoNote"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"voice_note":"Message content; may be null ","is_pinned":"True, if the message is a pinned message with the specified content","_":"A voice note message "},"type":{"subclass":"pushMessageContentVoiceNote","properties":[{"name":"voice_note","type":"voiceNote"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"_":"A newly created basic group"},"type":{"subclass":"pushMessageContentBasicGroupChatCreate","properties":[],"abstractClass":"PushMessageContent"}},{"documentation":{"member_name":"Name of the added member ","is_current_user":"True, if the current user was added to the group ","is_returned":"True, if the user has returned to the group themselves","_":"New chat members were invited to a group "},"type":{"subclass":"pushMessageContentChatAddMembers","properties":[{"name":"member_name","type":"string"},{"name":"is_current_user","type":"Bool"},{"name":"is_returned","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"_":"A chat photo was edited"},"type":{"subclass":"pushMessageContentChatChangePhoto","properties":[],"abstractClass":"PushMessageContent"}},{"documentation":{"title":"New chat title","_":"A chat title was edited "},"type":{"subclass":"pushMessageContentChatChangeTitle","properties":[{"name":"title","type":"string"}],"abstractClass":"PushMessageContent"}},{"documentation":{"theme_name":"If non-empty, name of a new theme, set for the chat. Otherwise chat theme was reset to the default one","_":"A chat theme was edited "},"type":{"subclass":"pushMessageContentChatSetTheme","properties":[{"name":"theme_name","type":"string"}],"abstractClass":"PushMessageContent"}},{"documentation":{"member_name":"Name of the deleted member ","is_current_user":"True, if the current user was deleted from the group ","is_left":"True, if the user has left the group themselves","_":"A chat member was deleted "},"type":{"subclass":"pushMessageContentChatDeleteMember","properties":[{"name":"member_name","type":"string"},{"name":"is_current_user","type":"Bool"},{"name":"is_left","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"_":"A new member joined the chat via an invite link"},"type":{"subclass":"pushMessageContentChatJoinByLink","properties":[],"abstractClass":"PushMessageContent"}},{"documentation":{"_":"A new member was accepted to the chat by an administrator"},"type":{"subclass":"pushMessageContentChatJoinByRequest","properties":[],"abstractClass":"PushMessageContent"}},{"documentation":{"amount":"The paid amount","_":"A new recurrent payment was made by the current user "},"type":{"subclass":"pushMessageContentRecurringPayment","properties":[{"name":"amount","type":"string"}],"abstractClass":"PushMessageContent"}},{"documentation":{"total_count":"Number of forwarded messages","_":"A forwarded messages "},"type":{"subclass":"pushMessageContentMessageForwards","properties":[{"name":"total_count","type":"int32"}],"abstractClass":"PushMessageContent"}},{"documentation":{"total_count":"Number of messages in the album ","has_photos":"True, if the album has at least one photo ","has_videos":"True, if the album has at least one video ","has_audios":"True, if the album has at least one audio file ","has_documents":"True, if the album has at least one document","_":"A media album "},"type":{"subclass":"pushMessageContentMediaAlbum","properties":[{"name":"total_count","type":"int32"},{"name":"has_photos","type":"Bool"},{"name":"has_videos","type":"Bool"},{"name":"has_audios","type":"Bool"},{"name":"has_documents","type":"Bool"}],"abstractClass":"PushMessageContent"}},{"documentation":{"class":"NotificationType ","message":"The message ","show_preview":"True, if message content must be displayed in notifications","_":"New message was received "},"type":{"subclass":"notificationTypeNewMessage","properties":[{"name":"message","type":"message"},{"name":"show_preview","type":"Bool"}],"abstractClass":"NotificationType"}},{"documentation":{"_":"New secret chat was created"},"type":{"subclass":"notificationTypeNewSecretChat","properties":[],"abstractClass":"NotificationType"}},{"documentation":{"call_id":"Call identifier","_":"New call was received "},"type":{"subclass":"notificationTypeNewCall","properties":[{"name":"call_id","type":"int32"}],"abstractClass":"NotificationType"}},{"documentation":{"message_id":"The message identifier. The message will not be available in the chat history, but the ID can be used in viewMessages, or as reply_to_message_id ","sender_id":"Identifier of the sender of the message. Corresponding user or chat may be inaccessible ","sender_name":"Name of the sender ","is_outgoing":"True, if the message is outgoing ","content":"Push message content","_":"New message was received through a push notification "},"type":{"subclass":"notificationTypeNewPushMessage","properties":[{"name":"message_id","type":"int53"},{"name":"sender_id","type":"MessageSender"},{"name":"sender_name","type":"string"},{"name":"is_outgoing","type":"Bool"},{"name":"content","type":"PushMessageContent"}],"abstractClass":"NotificationType"}},{"documentation":{"class":"NotificationGroupType ","_":"A group containing notifications of type notificationTypeNewMessage and notificationTypeNewPushMessage with ordinary unread messages"},"type":{"subclass":"notificationGroupTypeMessages","properties":[],"abstractClass":"NotificationGroupType"}},{"documentation":{"_":"A group containing notifications of type notificationTypeNewMessage and notificationTypeNewPushMessage with unread mentions of the current user, replies to their messages, or a pinned message"},"type":{"subclass":"notificationGroupTypeMentions","properties":[],"abstractClass":"NotificationGroupType"}},{"documentation":{"_":"A group containing a notification of type notificationTypeNewSecretChat"},"type":{"subclass":"notificationGroupTypeSecretChat","properties":[],"abstractClass":"NotificationGroupType"}},{"documentation":{"_":"A group containing notifications of type notificationTypeNewCall"},"type":{"subclass":"notificationGroupTypeCalls","properties":[],"abstractClass":"NotificationGroupType"}},{"documentation":{"id":"Unique identifier of the notification sound ","duration":"Duration of the sound, in seconds ","date":"Point in time (Unix timestamp) when the sound was created ","title":"Title of the notification sound ","data":"Arbitrary data, defined while the sound was uploaded ","sound":"File containing the sound","_":"Describes a notification sound in MP3 format "},"type":{"subclass":"notificationSound","properties":[{"name":"id","type":"int64"},{"name":"duration","type":"int32"},{"name":"date","type":"int32"},{"name":"title","type":"string"},{"name":"data","type":"string"},{"name":"sound","type":"file"}],"abstractClass":"NotificationSound"}},{"documentation":{"notification_sounds":"A list of notification sounds","_":"Contains a list of notification sounds "},"type":{"subclass":"notificationSounds","properties":[{"name":"notification_sounds","type":"vector<notificationSound>"}],"abstractClass":"NotificationSounds"}},{"documentation":{"id":"Unique persistent identifier of this notification ","date":"Notification date ","is_silent":"True, if the notification was explicitly sent without sound ","type":"Notification type","_":"Contains information about a notification "},"type":{"subclass":"notification","properties":[{"name":"id","type":"int32"},{"name":"date","type":"int32"},{"name":"is_silent","type":"Bool"},{"name":"type","type":"NotificationType"}],"abstractClass":"Notification"}},{"documentation":{"id":"Unique persistent auto-incremented from 1 identifier of the notification group ","type":"Type of the group ","chat_id":"Identifier of a chat to which all notifications in the group belong ","total_count":"Total number of active notifications in the group ","notifications":"The list of active notifications","_":"Describes a group of notifications "},"type":{"subclass":"notificationGroup","properties":[{"name":"id","type":"int32"},{"name":"type","type":"NotificationGroupType"},{"name":"chat_id","type":"int53"},{"name":"total_count","type":"int32"},{"name":"notifications","type":"vector<notification>"}],"abstractClass":"NotificationGroup"}},{"documentation":{"class":"OptionValue ","value":"The value of the option","_":"Represents a boolean option "},"type":{"subclass":"optionValueBoolean","properties":[{"name":"value","type":"Bool"}],"abstractClass":"OptionValue"}},{"documentation":{"_":"Represents an unknown option or an option which has a default value"},"type":{"subclass":"optionValueEmpty","properties":[],"abstractClass":"OptionValue"}},{"documentation":{"value":"The value of the option","_":"Represents an integer option "},"type":{"subclass":"optionValueInteger","properties":[{"name":"value","type":"int64"}],"abstractClass":"OptionValue"}},{"documentation":{"value":"The value of the option","_":"Represents a string option "},"type":{"subclass":"optionValueString","properties":[{"name":"value","type":"string"}],"abstractClass":"OptionValue"}},{"documentation":{"key":"Member's key ","value":"Member's value","_":"Represents one member of a JSON object "},"type":{"subclass":"jsonObjectMember","properties":[{"name":"key","type":"string"},{"name":"value","type":"JsonValue"}],"abstractClass":"JsonObjectMember"}},{"documentation":{"class":"JsonValue ","_":"Represents a null JSON value"},"type":{"subclass":"jsonValueNull","properties":[],"abstractClass":"JsonValue"}},{"documentation":{"value":"The value","_":"Represents a boolean JSON value "},"type":{"subclass":"jsonValueBoolean","properties":[{"name":"value","type":"Bool"}],"abstractClass":"JsonValue"}},{"documentation":{"value":"The value","_":"Represents a numeric JSON value "},"type":{"subclass":"jsonValueNumber","properties":[{"name":"value","type":"double"}],"abstractClass":"JsonValue"}},{"documentation":{"value":"The value","_":"Represents a string JSON value "},"type":{"subclass":"jsonValueString","properties":[{"name":"value","type":"string"}],"abstractClass":"JsonValue"}},{"documentation":{"values":"The list of array elements","_":"Represents a JSON array "},"type":{"subclass":"jsonValueArray","properties":[{"name":"values","type":"vector<JsonValue>"}],"abstractClass":"JsonValue"}},{"documentation":{"members":"The list of object members","_":"Represents a JSON object "},"type":{"subclass":"jsonValueObject","properties":[{"name":"members","type":"vector<jsonObjectMember>"}],"abstractClass":"JsonValue"}},{"documentation":{"class":"UserPrivacySettingRule ","_":"A rule to allow all users to do something"},"type":{"subclass":"userPrivacySettingRuleAllowAll","properties":[],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"_":"A rule to allow all of a user's contacts to do something"},"type":{"subclass":"userPrivacySettingRuleAllowContacts","properties":[],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"user_ids":"The user identifiers, total number of users in all rules must not exceed 1000","_":"A rule to allow certain specified users to do something "},"type":{"subclass":"userPrivacySettingRuleAllowUsers","properties":[{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"chat_ids":"The chat identifiers, total number of chats in all rules must not exceed 20","_":"A rule to allow all members of certain specified basic groups and supergroups to doing something "},"type":{"subclass":"userPrivacySettingRuleAllowChatMembers","properties":[{"name":"chat_ids","type":"vector<int53>"}],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"_":"A rule to restrict all users from doing something"},"type":{"subclass":"userPrivacySettingRuleRestrictAll","properties":[],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"_":"A rule to restrict all contacts of a user from doing something"},"type":{"subclass":"userPrivacySettingRuleRestrictContacts","properties":[],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"user_ids":"The user identifiers, total number of users in all rules must not exceed 1000","_":"A rule to restrict all specified users from doing something "},"type":{"subclass":"userPrivacySettingRuleRestrictUsers","properties":[{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"chat_ids":"The chat identifiers, total number of chats in all rules must not exceed 20","_":"A rule to restrict all members of specified basic groups and supergroups from doing something "},"type":{"subclass":"userPrivacySettingRuleRestrictChatMembers","properties":[{"name":"chat_ids","type":"vector<int53>"}],"abstractClass":"UserPrivacySettingRule"}},{"documentation":{"rules":"A list of rules","_":"A list of privacy rules. Rules are matched in the specified order. The first matched rule defines the privacy setting for a given user. If no rule matches, the action is not allowed "},"type":{"subclass":"userPrivacySettingRules","properties":[{"name":"rules","type":"vector<UserPrivacySettingRule>"}],"abstractClass":"UserPrivacySettingRules"}},{"documentation":{"class":"UserPrivacySetting ","_":"A privacy setting for managing whether the user's online status is visible"},"type":{"subclass":"userPrivacySettingShowStatus","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether the user's profile photo is visible"},"type":{"subclass":"userPrivacySettingShowProfilePhoto","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether a link to the user's account is included in forwarded messages"},"type":{"subclass":"userPrivacySettingShowLinkInForwardedMessages","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether the user's phone number is visible"},"type":{"subclass":"userPrivacySettingShowPhoneNumber","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether the user can be invited to chats"},"type":{"subclass":"userPrivacySettingAllowChatInvites","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether the user can be called"},"type":{"subclass":"userPrivacySettingAllowCalls","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether peer-to-peer connections can be used for calls"},"type":{"subclass":"userPrivacySettingAllowPeerToPeerCalls","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether the user can be found by their phone number. Checked only if the phone number is not known to the other user. Can be set only to \"Allow contacts\" or \"Allow all\""},"type":{"subclass":"userPrivacySettingAllowFindingByPhoneNumber","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"_":"A privacy setting for managing whether the user can receive voice and video messages in private chats"},"type":{"subclass":"userPrivacySettingAllowPrivateVoiceAndVideoNoteMessages","properties":[],"abstractClass":"UserPrivacySetting"}},{"documentation":{"days":"Number of days of inactivity before the account will be flagged for deletion; 30-366 days","_":"Contains information about the period of inactivity after which the current user's account will automatically be deleted "},"type":{"subclass":"accountTtl","properties":[{"name":"days","type":"int32"}],"abstractClass":"AccountTtl"}},{"documentation":{"ttl":"Message TTL setting, in seconds. If 0, then messages aren't deleted automatically","_":"Contains default message Time To Live setting (self-destruct timer) for new chats "},"type":{"subclass":"messageTtl","properties":[{"name":"ttl","type":"int32"}],"abstractClass":"MessageTtl"}},{"documentation":{"class":"SessionType ","_":"The session is running on an Android device"},"type":{"subclass":"sessionTypeAndroid","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on a generic Apple device"},"type":{"subclass":"sessionTypeApple","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Brave browser"},"type":{"subclass":"sessionTypeBrave","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Chrome browser"},"type":{"subclass":"sessionTypeChrome","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Edge browser"},"type":{"subclass":"sessionTypeEdge","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Firefox browser"},"type":{"subclass":"sessionTypeFirefox","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on an iPad device"},"type":{"subclass":"sessionTypeIpad","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on an iPhone device"},"type":{"subclass":"sessionTypeIphone","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on a Linux device"},"type":{"subclass":"sessionTypeLinux","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on a Mac device"},"type":{"subclass":"sessionTypeMac","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Opera browser"},"type":{"subclass":"sessionTypeOpera","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Safari browser"},"type":{"subclass":"sessionTypeSafari","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on an Ubuntu device"},"type":{"subclass":"sessionTypeUbuntu","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on an unknown type of device"},"type":{"subclass":"sessionTypeUnknown","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on the Vivaldi browser"},"type":{"subclass":"sessionTypeVivaldi","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on a Windows device"},"type":{"subclass":"sessionTypeWindows","properties":[],"abstractClass":"SessionType"}},{"documentation":{"_":"The session is running on an Xbox console"},"type":{"subclass":"sessionTypeXbox","properties":[],"abstractClass":"SessionType"}},{"documentation":{"id":"Session identifier ","is_current":"True, if this session is the current session ","is_password_pending":"True, if a 2-step verification password is needed to complete authorization of the session ","can_accept_secret_chats":"True, if incoming secret chats can be accepted by the session ","can_accept_calls":"True, if incoming calls can be accepted by the session ","type":"Session type based on the system and application version, which can be used to display a corresponding icon ","api_id":"Telegram API identifier, as provided by the application ","application_name":"Name of the application, as provided by the application ","application_version":"The version of the application, as provided by the application ","is_official_application":"True, if the application is an official application or uses the api_id of an official application ","device_model":"Model of the device the application has been run or is running on, as provided by the application ","platform":"Operating system the application has been run or is running on, as provided by the application ","system_version":"Version of the operating system the application has been run or is running on, as provided by the application ","log_in_date":"Point in time (Unix timestamp) when the user has logged in ","last_active_date":"Point in time (Unix timestamp) when the session was last used ","ip":"IP address from which the session was created, in human-readable format ","country":"A two-letter country code for the country from which the session was created, based on the IP address ","region":"Region code from which the session was created, based on the IP address","_":"Contains information about one session in a Telegram application used by the current user. Sessions must be shown to the user in the returned order "},"type":{"subclass":"session","properties":[{"name":"id","type":"int64"},{"name":"is_current","type":"Bool"},{"name":"is_password_pending","type":"Bool"},{"name":"can_accept_secret_chats","type":"Bool"},{"name":"can_accept_calls","type":"Bool"},{"name":"type","type":"SessionType"},{"name":"api_id","type":"int32"},{"name":"application_name","type":"string"},{"name":"application_version","type":"string"},{"name":"is_official_application","type":"Bool"},{"name":"device_model","type":"string"},{"name":"platform","type":"string"},{"name":"system_version","type":"string"},{"name":"log_in_date","type":"int32"},{"name":"last_active_date","type":"int32"},{"name":"ip","type":"string"},{"name":"country","type":"string"},{"name":"region","type":"string"}],"abstractClass":"Session"}},{"documentation":{"sessions":"List of sessions ","inactive_session_ttl_days":"Number of days of inactivity before sessions will automatically be terminated; 1-366 days","_":"Contains a list of sessions "},"type":{"subclass":"sessions","properties":[{"name":"sessions","type":"vector<session>"},{"name":"inactive_session_ttl_days","type":"int32"}],"abstractClass":"Sessions"}},{"documentation":{"id":"Website identifier ","domain_name":"The domain name of the website ","bot_user_id":"User identifier of a bot linked with the website ","browser":"The version of a browser used to log in ","platform":"Operating system the browser is running on ","log_in_date":"Point in time (Unix timestamp) when the user was logged in ","last_active_date":"Point in time (Unix timestamp) when obtained authorization was last used ","ip":"IP address from which the user was logged in, in human-readable format ","location":"Human-readable description of a country and a region from which the user was logged in, based on the IP address","_":"Contains information about one website the current user is logged in with Telegram "},"type":{"subclass":"connectedWebsite","properties":[{"name":"id","type":"int64"},{"name":"domain_name","type":"string"},{"name":"bot_user_id","type":"int53"},{"name":"browser","type":"string"},{"name":"platform","type":"string"},{"name":"log_in_date","type":"int32"},{"name":"last_active_date","type":"int32"},{"name":"ip","type":"string"},{"name":"location","type":"string"}],"abstractClass":"ConnectedWebsite"}},{"documentation":{"websites":"List of connected websites","_":"Contains a list of websites the current user is logged in with Telegram "},"type":{"subclass":"connectedWebsites","properties":[{"name":"websites","type":"vector<connectedWebsite>"}],"abstractClass":"ConnectedWebsites"}},{"documentation":{"class":"ChatReportReason ","_":"The chat contains spam messages"},"type":{"subclass":"chatReportReasonSpam","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat promotes violence"},"type":{"subclass":"chatReportReasonViolence","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat contains pornographic messages"},"type":{"subclass":"chatReportReasonPornography","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat has child abuse related content"},"type":{"subclass":"chatReportReasonChildAbuse","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat contains copyrighted content"},"type":{"subclass":"chatReportReasonCopyright","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The location-based chat is unrelated to its stated location"},"type":{"subclass":"chatReportReasonUnrelatedLocation","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat represents a fake account"},"type":{"subclass":"chatReportReasonFake","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat has illegal drugs related content"},"type":{"subclass":"chatReportReasonIllegalDrugs","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"The chat contains messages with personal details"},"type":{"subclass":"chatReportReasonPersonalDetails","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"_":"A custom reason provided by the user"},"type":{"subclass":"chatReportReasonCustom","properties":[],"abstractClass":"ChatReportReason"}},{"documentation":{"class":"TargetChat ","_":"The currently opened chat needs to be kept"},"type":{"subclass":"targetChatCurrent","properties":[],"abstractClass":"TargetChat"}},{"documentation":{"allow_user_chats":"True, if private chats with ordinary users are allowed ","allow_bot_chats":"True, if private chats with other bots are allowed ","allow_group_chats":"True, if basic group and supergroup chats are allowed ","allow_channel_chats":"True, if channel chats are allowed","_":"The chat needs to be chosen by the user among chats of the specified types "},"type":{"subclass":"targetChatChosen","properties":[{"name":"allow_user_chats","type":"Bool"},{"name":"allow_bot_chats","type":"Bool"},{"name":"allow_group_chats","type":"Bool"},{"name":"allow_channel_chats","type":"Bool"}],"abstractClass":"TargetChat"}},{"documentation":{"link":"An internal link pointing to the chat","_":"The chat needs to be open with the provided internal link "},"type":{"subclass":"targetChatInternalLink","properties":[{"name":"link","type":"InternalLinkType"}],"abstractClass":"TargetChat"}},{"documentation":{"class":"InternalLinkType ","_":"The link is a link to the active sessions section of the application. Use getActiveSessions to handle the link"},"type":{"subclass":"internalLinkTypeActiveSessions","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"target_chat":"Target chat to be opened ","bot_username":"Username of the bot ","url":"URL to be passed to openWebApp","_":"The link is a link to an attachment menu bot to be opened in the specified or a chosen chat. Process given target_chat to open the chat. -Then call searchPublicChat with the given bot username, check that the user is a bot and can be added to attachment menu. Then use getAttachmentMenuBot to receive information about the bot. -If the bot isn't added to attachment menu, then user needs to confirm adding the bot to attachment menu. If user confirms adding, then use toggleBotIsAddedToAttachmentMenu to add it. -If the attachment menu bot can't be used in the opened chat, show an error to the user. If the bot is added to attachment menu and can be used in the chat, then use openWebApp with the given URL "},"type":{"subclass":"internalLinkTypeAttachmentMenuBot","properties":[{"name":"target_chat","type":"TargetChat"},{"name":"bot_username","type":"string"},{"name":"url","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"code":"The authentication code","_":"The link contains an authentication code. Call checkAuthenticationCode with the code if the current authorization state is authorizationStateWaitCode "},"type":{"subclass":"internalLinkTypeAuthenticationCode","properties":[{"name":"code","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"background_name":"Name of the background","_":"The link is a link to a background. Call searchBackground with the given background name to process the link "},"type":{"subclass":"internalLinkTypeBackground","properties":[{"name":"background_name","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"bot_username":"Username of the bot ","start_parameter":"The parameter to be passed to sendBotStartMessage ","autostart":"True, if sendBotStartMessage must be called automatically without showing the START button","_":"The link is a link to a chat with a Telegram bot. Call searchPublicChat with the given bot username, check that the user is a bot, show START button in the chat with the bot, -and then call sendBotStartMessage with the given start parameter after the button is pressed "},"type":{"subclass":"internalLinkTypeBotStart","properties":[{"name":"bot_username","type":"string"},{"name":"start_parameter","type":"string"},{"name":"autostart","type":"Bool"}],"abstractClass":"InternalLinkType"}},{"documentation":{"bot_username":"Username of the bot ","start_parameter":"The parameter to be passed to sendBotStartMessage ","administrator_rights":"Expected administrator rights for the bot; may be null","_":"The link is a link to a Telegram bot, which is supposed to be added to a group chat. Call searchPublicChat with the given bot username, check that the user is a bot and can be added to groups, -ask the current user to select a basic group or a supergroup chat to add the bot to, taking into account that bots can be added to a public supergroup only by administrators of the supergroup. -If administrator rights are provided by the link, call getChatMember to receive the current bot rights in the chat and if the bot already is an administrator, -check that the current user can edit its administrator rights, combine received rights with the requested administrator rights, show confirmation box to the user, -and call setChatMemberStatus with the chosen chat and confirmed administrator rights. Before call to setChatMemberStatus it may be required to upgrade the chosen basic group chat to a supergroup chat. -Then if start_parameter isn't empty, call sendBotStartMessage with the given start parameter and the chosen chat, otherwise just send /start message with bot's username added to the chat. "},"type":{"subclass":"internalLinkTypeBotStartInGroup","properties":[{"name":"bot_username","type":"string"},{"name":"start_parameter","type":"string"},{"name":"administrator_rights","type":"chatAdministratorRights"}],"abstractClass":"InternalLinkType"}},{"documentation":{"bot_username":"Username of the bot ","administrator_rights":"Expected administrator rights for the bot","_":"The link is a link to a Telegram bot, which is supposed to be added to a channel chat as an administrator. Call searchPublicChat with the given bot username and check that the user is a bot, -ask the current user to select a channel chat to add the bot to as an administrator. Then call getChatMember to receive the current bot rights in the chat and if the bot already is an administrator, -check that the current user can edit its administrator rights and combine received rights with the requested administrator rights. Then show confirmation box to the user, and call setChatMemberStatus with the chosen chat and confirmed rights "},"type":{"subclass":"internalLinkTypeBotAddToChannel","properties":[{"name":"bot_username","type":"string"},{"name":"administrator_rights","type":"chatAdministratorRights"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to the change phone number section of the app"},"type":{"subclass":"internalLinkTypeChangePhoneNumber","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"invite_link":"Internal representation of the invite link","_":"The link is a chat invite link. Call checkChatInviteLink with the given invite link to process the link "},"type":{"subclass":"internalLinkTypeChatInvite","properties":[{"name":"invite_link","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to the filter settings section of the app"},"type":{"subclass":"internalLinkTypeFilterSettings","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"bot_username":"Username of the bot that owns the game ","game_short_name":"Short name of the game","_":"The link is a link to a game. Call searchPublicChat with the given bot username, check that the user is a bot, ask the current user to select a chat to send the game, and then call sendMessage with inputMessageGame "},"type":{"subclass":"internalLinkTypeGame","properties":[{"name":"bot_username","type":"string"},{"name":"game_short_name","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"url":"URL to be passed to getWebPageInstantView ","fallback_url":"An URL to open if getWebPageInstantView fails","_":"The link must be opened in an Instant View. Call getWebPageInstantView with the given URL to process the link "},"type":{"subclass":"internalLinkTypeInstantView","properties":[{"name":"url","type":"string"},{"name":"fallback_url","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"invoice_name":"Name of the invoice","_":"The link is a link to an invoice. Call getPaymentForm with the given invoice name to process the link "},"type":{"subclass":"internalLinkTypeInvoice","properties":[{"name":"invoice_name","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"language_pack_id":"Language pack identifier","_":"The link is a link to a language pack. Call getLanguagePackInfo with the given language pack identifier to process the link "},"type":{"subclass":"internalLinkTypeLanguagePack","properties":[{"name":"language_pack_id","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to the language settings section of the app"},"type":{"subclass":"internalLinkTypeLanguageSettings","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"url":"URL to be passed to getMessageLinkInfo","_":"The link is a link to a Telegram message or a forum topic. Call getMessageLinkInfo with the given URL to process the link "},"type":{"subclass":"internalLinkTypeMessage","properties":[{"name":"url","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"text":"Message draft text ","contains_link":"True, if the first line of the text contains a link. If true, the input field needs to be focused and the text after the link must be selected","_":"The link contains a message draft text. A share screen needs to be shown to the user, then the chosen chat must be opened and the text is added to the input field "},"type":{"subclass":"internalLinkTypeMessageDraft","properties":[{"name":"text","type":"formattedText"},{"name":"contains_link","type":"Bool"}],"abstractClass":"InternalLinkType"}},{"documentation":{"bot_user_id":"User identifier of the service's bot ","scope":"Telegram Passport element types requested by the service ","public_key":"Service's public key ","nonce":"Unique request identifier provided by the service ","callback_url":"An HTTP URL to open once the request is finished or canceled with the parameter tg_passport=success or tg_passport=cancel respectively. If empty, then the link tgbot{bot_user_id}://passport/success or tgbot{bot_user_id}://passport/cancel needs to be opened instead","_":"The link contains a request of Telegram passport data. Call getPassportAuthorizationForm with the given parameters to process the link if the link was received from outside of the application, otherwise ignore it "},"type":{"subclass":"internalLinkTypePassportDataRequest","properties":[{"name":"bot_user_id","type":"int53"},{"name":"scope","type":"string"},{"name":"public_key","type":"string"},{"name":"nonce","type":"string"},{"name":"callback_url","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"hash":"Hash value from the link ","phone_number":"Phone number value from the link","_":"The link can be used to confirm ownership of a phone number to prevent account deletion. Call sendPhoneNumberConfirmationCode with the given hash and phone number to process the link "},"type":{"subclass":"internalLinkTypePhoneNumberConfirmation","properties":[{"name":"hash","type":"string"},{"name":"phone_number","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"referrer":"Referrer specified in the link","_":"The link is a link to the Premium features screen of the applcation from which the user can subscribe to Telegram Premium. Call getPremiumFeatures with the given referrer to process the link "},"type":{"subclass":"internalLinkTypePremiumFeatures","properties":[{"name":"referrer","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to the privacy and security settings section of the app"},"type":{"subclass":"internalLinkTypePrivacyAndSecuritySettings","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"server":"Proxy server IP address ","port":"Proxy server port ","type":"Type of the proxy","_":"The link is a link to a proxy. Call addProxy with the given parameters to process the link and add the proxy "},"type":{"subclass":"internalLinkTypeProxy","properties":[{"name":"server","type":"string"},{"name":"port","type":"int32"},{"name":"type","type":"ProxyType"}],"abstractClass":"InternalLinkType"}},{"documentation":{"chat_username":"Username of the chat","_":"The link is a link to a chat by its username. Call searchPublicChat with the given chat username to process the link "},"type":{"subclass":"internalLinkTypePublicChat","properties":[{"name":"chat_username","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link can be used to login the current user on another device, but it must be scanned from QR-code using in-app camera. An alert similar to -\"This code can be used to allow someone to log in to your Telegram account. To confirm Telegram login, please go to Settings > Devices > Scan QR and scan the code\" needs to be shown"},"type":{"subclass":"internalLinkTypeQrCodeAuthentication","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link forces restore of App Store purchases when opened. For official iOS application only"},"type":{"subclass":"internalLinkTypeRestorePurchases","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to application settings"},"type":{"subclass":"internalLinkTypeSettings","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"sticker_set_name":"Name of the sticker set","_":"The link is a link to a sticker set. Call searchStickerSet with the given sticker set name to process the link and show the sticker set "},"type":{"subclass":"internalLinkTypeStickerSet","properties":[{"name":"sticker_set_name","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"theme_name":"Name of the theme","_":"The link is a link to a theme. TDLib has no theme support yet "},"type":{"subclass":"internalLinkTypeTheme","properties":[{"name":"theme_name","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to the theme settings section of the app"},"type":{"subclass":"internalLinkTypeThemeSettings","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"link":"Link to be passed to getDeepLinkInfo","_":"The link is an unknown tg: link. Call getDeepLinkInfo to process the link "},"type":{"subclass":"internalLinkTypeUnknownDeepLink","properties":[{"name":"link","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"_":"The link is a link to an unsupported proxy. An alert can be shown to the user"},"type":{"subclass":"internalLinkTypeUnsupportedProxy","properties":[],"abstractClass":"InternalLinkType"}},{"documentation":{"phone_number":"Phone number of the user","_":"The link is a link to a user by its phone number. Call searchUserByPhoneNumber with the given phone number to process the link "},"type":{"subclass":"internalLinkTypeUserPhoneNumber","properties":[{"name":"phone_number","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"token":"The token","_":"The link is a link to a user by a temporary token. Call searchUserByToken with the given token to process the link "},"type":{"subclass":"internalLinkTypeUserToken","properties":[{"name":"token","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"chat_username":"Username of the chat with the video chat ","invite_hash":"If non-empty, invite hash to be used to join the video chat without being muted by administrators ","is_live_stream":"True, if the video chat is expected to be a live stream in a channel or a broadcast group","_":"The link is a link to a video chat. Call searchPublicChat with the given chat username, and then joinGroupCall with the given invite hash to process the link "},"type":{"subclass":"internalLinkTypeVideoChat","properties":[{"name":"chat_username","type":"string"},{"name":"invite_hash","type":"string"},{"name":"is_live_stream","type":"Bool"}],"abstractClass":"InternalLinkType"}},{"documentation":{"link":"Message link ","is_public":"True, if the link will work for non-members of the chat","_":"Contains an HTTPS link to a message in a supergroup or channel "},"type":{"subclass":"messageLink","properties":[{"name":"link","type":"string"},{"name":"is_public","type":"Bool"}],"abstractClass":"MessageLink"}},{"documentation":{"is_public":"True, if the link is a public link for a message in a chat ","chat_id":"If found, identifier of the chat to which the message belongs, 0 otherwise ","message_thread_id":"If found, identifier of the message thread in which to open the message, or a forum topic to open if the message is missing ","message":"If found, the linked message; may be null ","media_timestamp":"Timestamp from which the video/audio/video note/voice note playing must start, in seconds; 0 if not specified. The media can be in the message content or in its web page preview ","for_album":"True, if the whole media album to which the message belongs is linked","_":"Contains information about a link to a message or a forum topic in a chat "},"type":{"subclass":"messageLinkInfo","properties":[{"name":"is_public","type":"Bool"},{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"message","type":"message"},{"name":"media_timestamp","type":"int32"},{"name":"for_album","type":"Bool"}],"abstractClass":"MessageLinkInfo"}},{"documentation":{"data":"File bytes","_":"Contains a part of a file "},"type":{"subclass":"filePart","properties":[{"name":"data","type":"Blob"}],"abstractClass":"FilePart"}},{"documentation":{"class":"FileType ","_":"The data is not a file"},"type":{"subclass":"fileTypeNone","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is an animation"},"type":{"subclass":"fileTypeAnimation","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is an audio file"},"type":{"subclass":"fileTypeAudio","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a document"},"type":{"subclass":"fileTypeDocument","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a notification sound"},"type":{"subclass":"fileTypeNotificationSound","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a photo"},"type":{"subclass":"fileTypePhoto","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a profile photo"},"type":{"subclass":"fileTypeProfilePhoto","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file was sent to a secret chat (the file type is not known to the server)"},"type":{"subclass":"fileTypeSecret","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a thumbnail of a file from a secret chat"},"type":{"subclass":"fileTypeSecretThumbnail","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a file from Secure storage used for storing Telegram Passport files"},"type":{"subclass":"fileTypeSecure","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a sticker"},"type":{"subclass":"fileTypeSticker","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a thumbnail of another file"},"type":{"subclass":"fileTypeThumbnail","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file type is not yet known"},"type":{"subclass":"fileTypeUnknown","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a video"},"type":{"subclass":"fileTypeVideo","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a video note"},"type":{"subclass":"fileTypeVideoNote","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a voice note"},"type":{"subclass":"fileTypeVoiceNote","properties":[],"abstractClass":"FileType"}},{"documentation":{"_":"The file is a wallpaper or a background pattern"},"type":{"subclass":"fileTypeWallpaper","properties":[],"abstractClass":"FileType"}},{"documentation":{"file_type":"File type ","size":"Total size of the files, in bytes ","count":"Total number of files","_":"Contains the storage usage statistics for a specific file type "},"type":{"subclass":"storageStatisticsByFileType","properties":[{"name":"file_type","type":"FileType"},{"name":"size","type":"int53"},{"name":"count","type":"int32"}],"abstractClass":"StorageStatisticsByFileType"}},{"documentation":{"chat_id":"Chat identifier; 0 if none ","size":"Total size of the files in the chat, in bytes ","count":"Total number of files in the chat ","by_file_type":"Statistics split by file types","_":"Contains the storage usage statistics for a specific chat "},"type":{"subclass":"storageStatisticsByChat","properties":[{"name":"chat_id","type":"int53"},{"name":"size","type":"int53"},{"name":"count","type":"int32"},{"name":"by_file_type","type":"vector<storageStatisticsByFileType>"}],"abstractClass":"StorageStatisticsByChat"}},{"documentation":{"size":"Total size of files, in bytes ","count":"Total number of files ","by_chat":"Statistics split by chats","_":"Contains the exact storage usage statistics split by chats and file type "},"type":{"subclass":"storageStatistics","properties":[{"name":"size","type":"int53"},{"name":"count","type":"int32"},{"name":"by_chat","type":"vector<storageStatisticsByChat>"}],"abstractClass":"StorageStatistics"}},{"documentation":{"files_size":"Approximate total size of files, in bytes ","file_count":"Approximate number of files ","database_size":"Size of the database ","language_pack_database_size":"Size of the language pack database ","log_size":"Size of the TDLib internal log","_":"Contains approximate storage usage statistics, excluding files of unknown file type "},"type":{"subclass":"storageStatisticsFast","properties":[{"name":"files_size","type":"int53"},{"name":"file_count","type":"int32"},{"name":"database_size","type":"int53"},{"name":"language_pack_database_size","type":"int53"},{"name":"log_size","type":"int53"}],"abstractClass":"StorageStatisticsFast"}},{"documentation":{"statistics":"Database statistics in an unspecified human-readable format","_":"Contains database statistics "},"type":{"subclass":"databaseStatistics","properties":[{"name":"statistics","type":"string"}],"abstractClass":"DatabaseStatistics"}},{"documentation":{"class":"NetworkType ","_":"The network is not available"},"type":{"subclass":"networkTypeNone","properties":[],"abstractClass":"NetworkType"}},{"documentation":{"_":"A mobile network"},"type":{"subclass":"networkTypeMobile","properties":[],"abstractClass":"NetworkType"}},{"documentation":{"_":"A mobile roaming network"},"type":{"subclass":"networkTypeMobileRoaming","properties":[],"abstractClass":"NetworkType"}},{"documentation":{"_":"A Wi-Fi network"},"type":{"subclass":"networkTypeWiFi","properties":[],"abstractClass":"NetworkType"}},{"documentation":{"_":"A different network type (e.g., Ethernet network)"},"type":{"subclass":"networkTypeOther","properties":[],"abstractClass":"NetworkType"}},{"documentation":{"class":"NetworkStatisticsEntry ","file_type":"Type of the file the data is part of; pass null if the data isn't related to files ","network_type":"Type of the network the data was sent through. Call setNetworkType to maintain the actual network type ","sent_bytes":"Total number of bytes sent ","received_bytes":"Total number of bytes received","_":"Contains information about the total amount of data that was used to send and receive files "},"type":{"subclass":"networkStatisticsEntryFile","properties":[{"name":"file_type","type":"FileType"},{"name":"network_type","type":"NetworkType"},{"name":"sent_bytes","type":"int53"},{"name":"received_bytes","type":"int53"}],"abstractClass":"NetworkStatisticsEntry"}},{"documentation":{"network_type":"Type of the network the data was sent through. Call setNetworkType to maintain the actual network type ","sent_bytes":"Total number of bytes sent ","received_bytes":"Total number of bytes received ","duration":"Total call duration, in seconds","_":"Contains information about the total amount of data that was used for calls "},"type":{"subclass":"networkStatisticsEntryCall","properties":[{"name":"network_type","type":"NetworkType"},{"name":"sent_bytes","type":"int53"},{"name":"received_bytes","type":"int53"},{"name":"duration","type":"double"}],"abstractClass":"NetworkStatisticsEntry"}},{"documentation":{"since_date":"Point in time (Unix timestamp) from which the statistics are collected ","entries":"Network statistics entries","_":"A full list of available network statistic entries "},"type":{"subclass":"networkStatistics","properties":[{"name":"since_date","type":"int32"},{"name":"entries","type":"vector<NetworkStatisticsEntry>"}],"abstractClass":"NetworkStatistics"}},{"documentation":{"is_auto_download_enabled":"True, if the auto-download is enabled ","max_photo_file_size":"The maximum size of a photo file to be auto-downloaded, in bytes ","max_video_file_size":"The maximum size of a video file to be auto-downloaded, in bytes ","max_other_file_size":"The maximum size of other file types to be auto-downloaded, in bytes ","video_upload_bitrate":"The maximum suggested bitrate for uploaded videos, in kbit/s ","preload_large_videos":"True, if the beginning of video files needs to be preloaded for instant playback ","preload_next_audio":"True, if the next audio track needs to be preloaded while the user is listening to an audio file ","use_less_data_for_calls":"True, if \"use less data for calls\" option needs to be enabled","_":"Contains auto-download settings "},"type":{"subclass":"autoDownloadSettings","properties":[{"name":"is_auto_download_enabled","type":"Bool"},{"name":"max_photo_file_size","type":"int32"},{"name":"max_video_file_size","type":"int53"},{"name":"max_other_file_size","type":"int53"},{"name":"video_upload_bitrate","type":"int32"},{"name":"preload_large_videos","type":"Bool"},{"name":"preload_next_audio","type":"Bool"},{"name":"use_less_data_for_calls","type":"Bool"}],"abstractClass":"AutoDownloadSettings"}},{"documentation":{"low":"Preset with lowest settings; supposed to be used by default when roaming ","medium":"Preset with medium settings; supposed to be used by default when using mobile data ","high":"Preset with highest settings; supposed to be used by default when connected on Wi-Fi","_":"Contains auto-download settings presets for the current user "},"type":{"subclass":"autoDownloadSettingsPresets","properties":[{"name":"low","type":"autoDownloadSettings"},{"name":"medium","type":"autoDownloadSettings"},{"name":"high","type":"autoDownloadSettings"}],"abstractClass":"AutoDownloadSettingsPresets"}},{"documentation":{"class":"ConnectionState ","_":"Currently waiting for the network to become available. Use setNetworkType to change the available network type"},"type":{"subclass":"connectionStateWaitingForNetwork","properties":[],"abstractClass":"ConnectionState"}},{"documentation":{"_":"Currently establishing a connection with a proxy server"},"type":{"subclass":"connectionStateConnectingToProxy","properties":[],"abstractClass":"ConnectionState"}},{"documentation":{"_":"Currently establishing a connection to the Telegram servers"},"type":{"subclass":"connectionStateConnecting","properties":[],"abstractClass":"ConnectionState"}},{"documentation":{"_":"Downloading data received while the application was offline"},"type":{"subclass":"connectionStateUpdating","properties":[],"abstractClass":"ConnectionState"}},{"documentation":{"_":"There is a working connection to the Telegram servers"},"type":{"subclass":"connectionStateReady","properties":[],"abstractClass":"ConnectionState"}},{"documentation":{"class":"TopChatCategory ","_":"A category containing frequently used private chats with non-bot users"},"type":{"subclass":"topChatCategoryUsers","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"_":"A category containing frequently used private chats with bot users"},"type":{"subclass":"topChatCategoryBots","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"_":"A category containing frequently used basic groups and supergroups"},"type":{"subclass":"topChatCategoryGroups","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"_":"A category containing frequently used channels"},"type":{"subclass":"topChatCategoryChannels","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"_":"A category containing frequently used chats with inline bots sorted by their usage in inline mode"},"type":{"subclass":"topChatCategoryInlineBots","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"_":"A category containing frequently used chats used for calls"},"type":{"subclass":"topChatCategoryCalls","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"_":"A category containing frequently used chats used to forward messages"},"type":{"subclass":"topChatCategoryForwardChats","properties":[],"abstractClass":"TopChatCategory"}},{"documentation":{"class":"TMeUrlType ","user_id":"Identifier of the user","_":"A URL linking to a user "},"type":{"subclass":"tMeUrlTypeUser","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"TMeUrlType"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel","_":"A URL linking to a public supergroup or channel "},"type":{"subclass":"tMeUrlTypeSupergroup","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"TMeUrlType"}},{"documentation":{"info":"Information about the chat invite link","_":"A chat invite link "},"type":{"subclass":"tMeUrlTypeChatInvite","properties":[{"name":"info","type":"chatInviteLinkInfo"}],"abstractClass":"TMeUrlType"}},{"documentation":{"sticker_set_id":"Identifier of the sticker set","_":"A URL linking to a sticker set "},"type":{"subclass":"tMeUrlTypeStickerSet","properties":[{"name":"sticker_set_id","type":"int64"}],"abstractClass":"TMeUrlType"}},{"documentation":{"url":"URL ","type":"Type of the URL","_":"Represents a URL linking to an internal Telegram entity "},"type":{"subclass":"tMeUrl","properties":[{"name":"url","type":"string"},{"name":"type","type":"TMeUrlType"}],"abstractClass":"TMeUrl"}},{"documentation":{"urls":"List of URLs","_":"Contains a list of t.me URLs "},"type":{"subclass":"tMeUrls","properties":[{"name":"urls","type":"vector<tMeUrl>"}],"abstractClass":"TMeUrls"}},{"documentation":{"class":"SuggestedAction ","_":"Suggests the user to enable \"archive_and_mute_new_chats_from_unknown_users\" option"},"type":{"subclass":"suggestedActionEnableArchiveAndMuteNewChats","properties":[],"abstractClass":"SuggestedAction"}},{"documentation":{"_":"Suggests the user to check whether they still remember their 2-step verification password"},"type":{"subclass":"suggestedActionCheckPassword","properties":[],"abstractClass":"SuggestedAction"}},{"documentation":{"_":"Suggests the user to check whether authorization phone number is correct and change the phone number if it is inaccessible"},"type":{"subclass":"suggestedActionCheckPhoneNumber","properties":[],"abstractClass":"SuggestedAction"}},{"documentation":{"_":"Suggests the user to view a hint about the meaning of one and two check marks on sent messages"},"type":{"subclass":"suggestedActionViewChecksHint","properties":[],"abstractClass":"SuggestedAction"}},{"documentation":{"supergroup_id":"Supergroup identifier","_":"Suggests the user to convert specified supergroup to a broadcast group "},"type":{"subclass":"suggestedActionConvertToBroadcastGroup","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"SuggestedAction"}},{"documentation":{"authorization_delay":"The number of days to pass between consecutive authorizations if the user declines to set password","_":"Suggests the user to set a 2-step verification password to be able to log in again "},"type":{"subclass":"suggestedActionSetPassword","properties":[{"name":"authorization_delay","type":"int32"}],"abstractClass":"SuggestedAction"}},{"documentation":{"count":"Count","_":"Contains a counter "},"type":{"subclass":"count","properties":[{"name":"count","type":"int32"}],"abstractClass":"Count"}},{"documentation":{"text":"Text","_":"Contains some text "},"type":{"subclass":"text","properties":[{"name":"text","type":"string"}],"abstractClass":"Text"}},{"documentation":{"seconds":"Number of seconds","_":"Contains a value representing a number of seconds "},"type":{"subclass":"seconds","properties":[{"name":"seconds","type":"double"}],"abstractClass":"Seconds"}},{"documentation":{"size":"The prefix size, in bytes","_":"Contains size of downloaded prefix of a file "},"type":{"subclass":"fileDownloadedPrefixSize","properties":[{"name":"size","type":"int53"}],"abstractClass":"FileDownloadedPrefixSize"}},{"documentation":{"text":"Text to be shown to the user ","need_update_application":"True, if the user must be asked to update the application","_":"Contains information about a tg: deep link "},"type":{"subclass":"deepLinkInfo","properties":[{"name":"text","type":"formattedText"},{"name":"need_update_application","type":"Bool"}],"abstractClass":"DeepLinkInfo"}},{"documentation":{"class":"TextParseMode ","version":"Version of the parser: 0 or 1 - Telegram Bot API \"Markdown\" parse mode, 2 - Telegram Bot API \"MarkdownV2\" parse mode","_":"The text uses Markdown-style formatting "},"type":{"subclass":"textParseModeMarkdown","properties":[{"name":"version","type":"int32"}],"abstractClass":"TextParseMode"}},{"documentation":{"_":"The text uses HTML-style formatting. The same as Telegram Bot API \"HTML\" parse mode"},"type":{"subclass":"textParseModeHTML","properties":[],"abstractClass":"TextParseMode"}},{"documentation":{"class":"ProxyType ","username":"Username for logging in; may be empty ","password":"Password for logging in; may be empty","_":"A SOCKS5 proxy server "},"type":{"subclass":"proxyTypeSocks5","properties":[{"name":"username","type":"string"},{"name":"password","type":"string"}],"abstractClass":"ProxyType"}},{"documentation":{"username":"Username for logging in; may be empty ","password":"Password for logging in; may be empty ","http_only":"Pass true if the proxy supports only HTTP requests and doesn't support transparent TCP connections via HTTP CONNECT method","_":"A HTTP transparent proxy server "},"type":{"subclass":"proxyTypeHttp","properties":[{"name":"username","type":"string"},{"name":"password","type":"string"},{"name":"http_only","type":"Bool"}],"abstractClass":"ProxyType"}},{"documentation":{"secret":"The proxy's secret in hexadecimal encoding","_":"An MTProto proxy server "},"type":{"subclass":"proxyTypeMtproto","properties":[{"name":"secret","type":"string"}],"abstractClass":"ProxyType"}},{"documentation":{"id":"Unique identifier of the proxy ","server":"Proxy server IP address ","port":"Proxy server port ","last_used_date":"Point in time (Unix timestamp) when the proxy was last used; 0 if never ","is_enabled":"True, if the proxy is enabled now ","type":"Type of the proxy","_":"Contains information about a proxy server "},"type":{"subclass":"proxy","properties":[{"name":"id","type":"int32"},{"name":"server","type":"string"},{"name":"port","type":"int32"},{"name":"last_used_date","type":"int32"},{"name":"is_enabled","type":"Bool"},{"name":"type","type":"ProxyType"}],"abstractClass":"Proxy"}},{"documentation":{"proxies":"List of proxy servers","_":"Represents a list of proxy servers "},"type":{"subclass":"proxies","properties":[{"name":"proxies","type":"vector<proxy>"}],"abstractClass":"Proxies"}},{"documentation":{"sticker":"File with the sticker; must fit in a 512x512 square. For WEBP stickers and masks the file must be in PNG format, which will be converted to WEBP server-side. Otherwise, the file must be local or uploaded within a week. See https://core.telegram.org/animated_stickers#technical-requirements for technical requirements ","emojis":"Emojis corresponding to the sticker ","format":"Sticker format ","mask_position":"Position where the mask is placed; pass null if not specified","_":"A sticker to be added to a sticker set "},"type":{"subclass":"inputSticker","properties":[{"name":"sticker","type":"InputFile"},{"name":"emojis","type":"string"},{"name":"format","type":"StickerFormat"},{"name":"mask_position","type":"maskPosition"}],"abstractClass":"InputSticker"}},{"documentation":{"start_date":"Point in time (Unix timestamp) at which the date range begins ","end_date":"Point in time (Unix timestamp) at which the date range ends","_":"Represents a date range "},"type":{"subclass":"dateRange","properties":[{"name":"start_date","type":"int32"},{"name":"end_date","type":"int32"}],"abstractClass":"DateRange"}},{"documentation":{"value":"The current value ","previous_value":"The value for the previous day ","growth_rate_percentage":"The growth rate of the value, as a percentage","_":"A value with information about its recent changes "},"type":{"subclass":"statisticalValue","properties":[{"name":"value","type":"double"},{"name":"previous_value","type":"double"},{"name":"growth_rate_percentage","type":"double"}],"abstractClass":"StatisticalValue"}},{"documentation":{"class":"StatisticalGraph ","json_data":"Graph data in JSON format ","zoom_token":"If non-empty, a token which can be used to receive a zoomed in graph","_":"A graph data "},"type":{"subclass":"statisticalGraphData","properties":[{"name":"json_data","type":"string"},{"name":"zoom_token","type":"string"}],"abstractClass":"StatisticalGraph"}},{"documentation":{"token":"The token to use for data loading","_":"The graph data to be asynchronously loaded through getStatisticalGraph "},"type":{"subclass":"statisticalGraphAsync","properties":[{"name":"token","type":"string"}],"abstractClass":"StatisticalGraph"}},{"documentation":{"error_message":"The error message","_":"An error message to be shown to the user instead of the graph "},"type":{"subclass":"statisticalGraphError","properties":[{"name":"error_message","type":"string"}],"abstractClass":"StatisticalGraph"}},{"documentation":{"message_id":"Message identifier ","view_count":"Number of times the message was viewed ","forward_count":"Number of times the message was forwarded","_":"Contains statistics about interactions with a message "},"type":{"subclass":"chatStatisticsMessageInteractionInfo","properties":[{"name":"message_id","type":"int53"},{"name":"view_count","type":"int32"},{"name":"forward_count","type":"int32"}],"abstractClass":"ChatStatisticsMessageInteractionInfo"}},{"documentation":{"user_id":"User identifier ","sent_message_count":"Number of sent messages ","average_character_count":"Average number of characters in sent messages; 0 if unknown","_":"Contains statistics about messages sent by a user "},"type":{"subclass":"chatStatisticsMessageSenderInfo","properties":[{"name":"user_id","type":"int53"},{"name":"sent_message_count","type":"int32"},{"name":"average_character_count","type":"int32"}],"abstractClass":"ChatStatisticsMessageSenderInfo"}},{"documentation":{"user_id":"Administrator user identifier ","deleted_message_count":"Number of messages deleted by the administrator ","banned_user_count":"Number of users banned by the administrator ","restricted_user_count":"Number of users restricted by the administrator","_":"Contains statistics about administrator actions done by a user "},"type":{"subclass":"chatStatisticsAdministratorActionsInfo","properties":[{"name":"user_id","type":"int53"},{"name":"deleted_message_count","type":"int32"},{"name":"banned_user_count","type":"int32"},{"name":"restricted_user_count","type":"int32"}],"abstractClass":"ChatStatisticsAdministratorActionsInfo"}},{"documentation":{"user_id":"User identifier ","added_member_count":"Number of new members invited by the user","_":"Contains statistics about number of new members invited by a user "},"type":{"subclass":"chatStatisticsInviterInfo","properties":[{"name":"user_id","type":"int53"},{"name":"added_member_count","type":"int32"}],"abstractClass":"ChatStatisticsInviterInfo"}},{"documentation":{"class":"ChatStatistics ","period":"A period to which the statistics applies ","member_count":"Number of members in the chat ","message_count":"Number of messages sent to the chat ","viewer_count":"Number of users who viewed messages in the chat ","sender_count":"Number of users who sent messages to the chat ","member_count_graph":"A graph containing number of members in the chat ","join_graph":"A graph containing number of members joined and left the chat ","join_by_source_graph":"A graph containing number of new member joins per source ","language_graph":"A graph containing distribution of active users per language ","message_content_graph":"A graph containing distribution of sent messages by content type ","action_graph":"A graph containing number of different actions in the chat ","day_graph":"A graph containing distribution of message views per hour ","week_graph":"A graph containing distribution of message views per day of week ","top_senders":"List of users sent most messages in the last week ","top_administrators":"List of most active administrators in the last week ","top_inviters":"List of most active inviters of new members in the last week","_":"A detailed statistics about a supergroup chat "},"type":{"subclass":"chatStatisticsSupergroup","properties":[{"name":"period","type":"dateRange"},{"name":"member_count","type":"statisticalValue"},{"name":"message_count","type":"statisticalValue"},{"name":"viewer_count","type":"statisticalValue"},{"name":"sender_count","type":"statisticalValue"},{"name":"member_count_graph","type":"StatisticalGraph"},{"name":"join_graph","type":"StatisticalGraph"},{"name":"join_by_source_graph","type":"StatisticalGraph"},{"name":"language_graph","type":"StatisticalGraph"},{"name":"message_content_graph","type":"StatisticalGraph"},{"name":"action_graph","type":"StatisticalGraph"},{"name":"day_graph","type":"StatisticalGraph"},{"name":"week_graph","type":"StatisticalGraph"},{"name":"top_senders","type":"vector<chatStatisticsMessageSenderInfo>"},{"name":"top_administrators","type":"vector<chatStatisticsAdministratorActionsInfo>"},{"name":"top_inviters","type":"vector<chatStatisticsInviterInfo>"}],"abstractClass":"ChatStatistics"}},{"documentation":{"period":"A period to which the statistics applies ","member_count":"Number of members in the chat ","mean_view_count":"Mean number of times the recently sent messages was viewed ","mean_share_count":"Mean number of times the recently sent messages was shared ","enabled_notifications_percentage":"A percentage of users with enabled notifications for the chat ","member_count_graph":"A graph containing number of members in the chat ","join_graph":"A graph containing number of members joined and left the chat ","mute_graph":"A graph containing number of members muted and unmuted the chat ","view_count_by_hour_graph":"A graph containing number of message views in a given hour in the last two weeks ","view_count_by_source_graph":"A graph containing number of message views per source ","join_by_source_graph":"A graph containing number of new member joins per source ","language_graph":"A graph containing number of users viewed chat messages per language ","message_interaction_graph":"A graph containing number of chat message views and shares ","instant_view_interaction_graph":"A graph containing number of views of associated with the chat instant views ","recent_message_interactions":"Detailed statistics about number of views and shares of recently sent messages","_":"A detailed statistics about a channel chat "},"type":{"subclass":"chatStatisticsChannel","properties":[{"name":"period","type":"dateRange"},{"name":"member_count","type":"statisticalValue"},{"name":"mean_view_count","type":"statisticalValue"},{"name":"mean_share_count","type":"statisticalValue"},{"name":"enabled_notifications_percentage","type":"double"},{"name":"member_count_graph","type":"StatisticalGraph"},{"name":"join_graph","type":"StatisticalGraph"},{"name":"mute_graph","type":"StatisticalGraph"},{"name":"view_count_by_hour_graph","type":"StatisticalGraph"},{"name":"view_count_by_source_graph","type":"StatisticalGraph"},{"name":"join_by_source_graph","type":"StatisticalGraph"},{"name":"language_graph","type":"StatisticalGraph"},{"name":"message_interaction_graph","type":"StatisticalGraph"},{"name":"instant_view_interaction_graph","type":"StatisticalGraph"},{"name":"recent_message_interactions","type":"vector<chatStatisticsMessageInteractionInfo>"}],"abstractClass":"ChatStatistics"}},{"documentation":{"message_interaction_graph":"A graph containing number of message views and shares","_":"A detailed statistics about a message "},"type":{"subclass":"messageStatistics","properties":[{"name":"message_interaction_graph","type":"StatisticalGraph"}],"abstractClass":"MessageStatistics"}},{"documentation":{"x":"The point's first coordinate ","y":"The point's second coordinate","_":"A point on a Cartesian plane "},"type":{"subclass":"point","properties":[{"name":"x","type":"double"},{"name":"y","type":"double"}],"abstractClass":"Point"}},{"documentation":{"class":"VectorPathCommand ","end_point":"The end point of the straight line","_":"A straight line to a given point "},"type":{"subclass":"vectorPathCommandLine","properties":[{"name":"end_point","type":"point"}],"abstractClass":"VectorPathCommand"}},{"documentation":{"start_control_point":"The start control point of the curve ","end_control_point":"The end control point of the curve ","end_point":"The end point of the curve","_":"A cubic Bézier curve to a given point "},"type":{"subclass":"vectorPathCommandCubicBezierCurve","properties":[{"name":"start_control_point","type":"point"},{"name":"end_control_point","type":"point"},{"name":"end_point","type":"point"}],"abstractClass":"VectorPathCommand"}},{"documentation":{"class":"BotCommandScope ","_":"A scope covering all users"},"type":{"subclass":"botCommandScopeDefault","properties":[],"abstractClass":"BotCommandScope"}},{"documentation":{"_":"A scope covering all private chats"},"type":{"subclass":"botCommandScopeAllPrivateChats","properties":[],"abstractClass":"BotCommandScope"}},{"documentation":{"_":"A scope covering all group and supergroup chats"},"type":{"subclass":"botCommandScopeAllGroupChats","properties":[],"abstractClass":"BotCommandScope"}},{"documentation":{"_":"A scope covering all group and supergroup chat administrators"},"type":{"subclass":"botCommandScopeAllChatAdministrators","properties":[],"abstractClass":"BotCommandScope"}},{"documentation":{"chat_id":"Chat identifier","_":"A scope covering all members of a chat "},"type":{"subclass":"botCommandScopeChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"BotCommandScope"}},{"documentation":{"chat_id":"Chat identifier","_":"A scope covering all administrators of a chat "},"type":{"subclass":"botCommandScopeChatAdministrators","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"BotCommandScope"}},{"documentation":{"chat_id":"Chat identifier ","user_id":"User identifier","_":"A scope covering a member of a chat "},"type":{"subclass":"botCommandScopeChatMember","properties":[{"name":"chat_id","type":"int53"},{"name":"user_id","type":"int53"}],"abstractClass":"BotCommandScope"}},{"documentation":{"class":"Update ","authorization_state":"New authorization state","_":"The user authorization state has changed "},"type":{"subclass":"updateAuthorizationState","properties":[{"name":"authorization_state","type":"AuthorizationState"}],"abstractClass":"Update"}},{"documentation":{"message":"The new message","_":"A new message was received; can also be an outgoing message "},"type":{"subclass":"updateNewMessage","properties":[{"name":"message","type":"message"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"The chat identifier of the sent message ","message_id":"A temporary message identifier","_":"A request to send a message has reached the Telegram server. This doesn't mean that the message will be sent successfully or even that the send message request will be processed. This update will be sent only if the option \"use_quick_ack\" is set to true. This update may be sent multiple times for the same message "},"type":{"subclass":"updateMessageSendAcknowledged","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"message":"The sent message. Usually only the message identifier, date, and content are changed, but almost all other fields can also change ","old_message_id":"The previous temporary message identifier","_":"A message has been successfully sent "},"type":{"subclass":"updateMessageSendSucceeded","properties":[{"name":"message","type":"message"},{"name":"old_message_id","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"message":"The failed to send message ","old_message_id":"The previous temporary message identifier ","error_code":"An error code ","error_message":"Error message","_":"A message failed to send. Be aware that some messages being sent can be irrecoverably deleted, in which case updateDeleteMessages will be received instead of this update "},"type":{"subclass":"updateMessageSendFailed","properties":[{"name":"message","type":"message"},{"name":"old_message_id","type":"int53"},{"name":"error_code","type":"int32"},{"name":"error_message","type":"string"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","new_content":"New message content","_":"The message content has changed "},"type":{"subclass":"updateMessageContent","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"new_content","type":"MessageContent"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","edit_date":"Point in time (Unix timestamp) when the message was edited ","reply_markup":"New message reply markup; may be null","_":"A message was edited. Changes in the message content will come in a separate updateMessageContent "},"type":{"subclass":"updateMessageEdited","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"edit_date","type":"int32"},{"name":"reply_markup","type":"ReplyMarkup"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"The message identifier ","is_pinned":"True, if the message is pinned","_":"The message pinned state was changed "},"type":{"subclass":"updateMessageIsPinned","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","interaction_info":"New information about interactions with the message; may be null","_":"The information about interactions with a message has changed "},"type":{"subclass":"updateMessageInteractionInfo","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"interaction_info","type":"messageInteractionInfo"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier","_":"The message content was opened. Updates voice note messages to \"listened\", video note messages to \"viewed\" and starts the TTL timer for self-destructing messages "},"type":{"subclass":"updateMessageContentOpened","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","unread_mention_count":"The new number of unread mention messages left in the chat","_":"A message with an unread mention was read "},"type":{"subclass":"updateMessageMentionRead","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"unread_mention_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","unread_reactions":"The new list of unread reactions ","unread_reaction_count":"The new number of messages with unread reactions left in the chat","_":"The list of unread reactions added to a message was changed "},"type":{"subclass":"updateMessageUnreadReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"unread_reactions","type":"vector<unreadReaction>"},{"name":"unread_reaction_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Identifier of the chat with the live location message ","message_id":"Identifier of the message with live location","_":"A message with a live location was viewed. When the update is received, the application is supposed to update the live location "},"type":{"subclass":"updateMessageLiveLocationViewed","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"chat":"The chat","_":"A new chat has been loaded/created. This update is guaranteed to come before the chat identifier is returned to the application. The chat field changes will be reported through separate updates "},"type":{"subclass":"updateNewChat","properties":[{"name":"chat","type":"chat"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","title":"The new chat title","_":"The title of a chat was changed "},"type":{"subclass":"updateChatTitle","properties":[{"name":"chat_id","type":"int53"},{"name":"title","type":"string"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","photo":"The new chat photo; may be null","_":"A chat photo was changed "},"type":{"subclass":"updateChatPhoto","properties":[{"name":"chat_id","type":"int53"},{"name":"photo","type":"chatPhotoInfo"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","permissions":"The new chat permissions","_":"Chat permissions was changed "},"type":{"subclass":"updateChatPermissions","properties":[{"name":"chat_id","type":"int53"},{"name":"permissions","type":"chatPermissions"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","last_message":"The new last message in the chat; may be null ","positions":"The new chat positions in the chat lists","_":"The last message of a chat was changed. If last_message is null, then the last message in the chat became unknown. Some new unknown messages might be added to the chat in this case "},"type":{"subclass":"updateChatLastMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"last_message","type":"message"},{"name":"positions","type":"vector<chatPosition>"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","position":"New chat position. If new order is 0, then the chat needs to be removed from the list","_":"The position of a chat in a chat list has changed. Instead of this update updateChatLastMessage or updateChatDraftMessage might be sent "},"type":{"subclass":"updateChatPosition","properties":[{"name":"chat_id","type":"int53"},{"name":"position","type":"chatPosition"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","last_read_inbox_message_id":"Identifier of the last read incoming message ","unread_count":"The number of unread messages left in the chat","_":"Incoming messages were read or the number of unread messages has been changed "},"type":{"subclass":"updateChatReadInbox","properties":[{"name":"chat_id","type":"int53"},{"name":"last_read_inbox_message_id","type":"int53"},{"name":"unread_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","last_read_outbox_message_id":"Identifier of last read outgoing message","_":"Outgoing messages were read "},"type":{"subclass":"updateChatReadOutbox","properties":[{"name":"chat_id","type":"int53"},{"name":"last_read_outbox_message_id","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","action_bar":"The new value of the action bar; may be null","_":"The chat action bar was changed "},"type":{"subclass":"updateChatActionBar","properties":[{"name":"chat_id","type":"int53"},{"name":"action_bar","type":"ChatActionBar"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","available_reactions":"The new reactions, available in the chat","_":"The chat available reactions were changed "},"type":{"subclass":"updateChatAvailableReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"available_reactions","type":"ChatAvailableReactions"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","draft_message":"The new draft message; may be null ","positions":"The new chat positions in the chat lists","_":"A chat draft has changed. Be aware that the update may come in the currently opened chat but with old content of the draft. If the user has changed the content of the draft, this update mustn't be applied "},"type":{"subclass":"updateChatDraftMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"draft_message","type":"draftMessage"},{"name":"positions","type":"vector<chatPosition>"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_sender_id":"New value of message_sender_id; may be null if the user can't change message sender","_":"The message sender that is selected to send messages in a chat has changed "},"type":{"subclass":"updateChatMessageSender","properties":[{"name":"chat_id","type":"int53"},{"name":"message_sender_id","type":"MessageSender"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_ttl":"New value of message_ttl","_":"The message Time To Live setting for a chat was changed "},"type":{"subclass":"updateChatMessageTtl","properties":[{"name":"chat_id","type":"int53"},{"name":"message_ttl","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","notification_settings":"The new notification settings","_":"Notification settings for a chat were changed "},"type":{"subclass":"updateChatNotificationSettings","properties":[{"name":"chat_id","type":"int53"},{"name":"notification_settings","type":"chatNotificationSettings"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","pending_join_requests":"The new data about pending join requests; may be null","_":"The chat pending join requests were changed "},"type":{"subclass":"updateChatPendingJoinRequests","properties":[{"name":"chat_id","type":"int53"},{"name":"pending_join_requests","type":"chatJoinRequestsInfo"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","reply_markup_message_id":"Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat","_":"The default chat reply markup was changed. Can occur because new messages with reply markup were received or because an old reply markup was hidden by the user "},"type":{"subclass":"updateChatReplyMarkup","properties":[{"name":"chat_id","type":"int53"},{"name":"reply_markup_message_id","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","theme_name":"The new name of the chat theme; may be empty if theme was reset to default","_":"The chat theme was changed "},"type":{"subclass":"updateChatTheme","properties":[{"name":"chat_id","type":"int53"},{"name":"theme_name","type":"string"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","unread_mention_count":"The number of unread mention messages left in the chat","_":"The chat unread_mention_count has changed "},"type":{"subclass":"updateChatUnreadMentionCount","properties":[{"name":"chat_id","type":"int53"},{"name":"unread_mention_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","unread_reaction_count":"The number of messages with unread reactions left in the chat","_":"The chat unread_reaction_count has changed "},"type":{"subclass":"updateChatUnreadReactionCount","properties":[{"name":"chat_id","type":"int53"},{"name":"unread_reaction_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","video_chat":"New value of video_chat","_":"A chat video chat state has changed "},"type":{"subclass":"updateChatVideoChat","properties":[{"name":"chat_id","type":"int53"},{"name":"video_chat","type":"videoChat"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","default_disable_notification":"The new default_disable_notification value","_":"The value of the default disable_notification parameter, used when a message is sent to the chat, was changed "},"type":{"subclass":"updateChatDefaultDisableNotification","properties":[{"name":"chat_id","type":"int53"},{"name":"default_disable_notification","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","has_protected_content":"New value of has_protected_content","_":"A chat content was allowed or restricted for saving "},"type":{"subclass":"updateChatHasProtectedContent","properties":[{"name":"chat_id","type":"int53"},{"name":"has_protected_content","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","has_scheduled_messages":"New value of has_scheduled_messages","_":"A chat's has_scheduled_messages field has changed "},"type":{"subclass":"updateChatHasScheduledMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"has_scheduled_messages","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","is_blocked":"New value of is_blocked","_":"A chat was blocked or unblocked "},"type":{"subclass":"updateChatIsBlocked","properties":[{"name":"chat_id","type":"int53"},{"name":"is_blocked","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","is_marked_as_unread":"New value of is_marked_as_unread","_":"A chat was marked as unread or was read "},"type":{"subclass":"updateChatIsMarkedAsUnread","properties":[{"name":"chat_id","type":"int53"},{"name":"is_marked_as_unread","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_filters":"The new list of chat filters ","main_chat_list_position":"Position of the main chat list among chat filters, 0-based","_":"The list of chat filters or a chat filter has changed "},"type":{"subclass":"updateChatFilters","properties":[{"name":"chat_filters","type":"vector<chatFilterInfo>"},{"name":"main_chat_list_position","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Identifier of the chat ","online_member_count":"New number of online members in the chat, or 0 if unknown","_":"The number of online group members has changed. This update with non-zero number of online group members is sent only for currently opened chats. There is no guarantee that it will be sent just after the number of online users has changed "},"type":{"subclass":"updateChatOnlineMemberCount","properties":[{"name":"chat_id","type":"int53"},{"name":"online_member_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","info":"New information about the topic","_":"Basic information about a topic in a forum chat was changed "},"type":{"subclass":"updateForumTopicInfo","properties":[{"name":"chat_id","type":"int53"},{"name":"info","type":"forumTopicInfo"}],"abstractClass":"Update"}},{"documentation":{"scope":"Types of chats for which notification settings were updated ","notification_settings":"The new notification settings","_":"Notification settings for some type of chats were updated "},"type":{"subclass":"updateScopeNotificationSettings","properties":[{"name":"scope","type":"NotificationSettingsScope"},{"name":"notification_settings","type":"scopeNotificationSettings"}],"abstractClass":"Update"}},{"documentation":{"notification_group_id":"Unique notification group identifier ","notification":"Changed notification","_":"A notification was changed "},"type":{"subclass":"updateNotification","properties":[{"name":"notification_group_id","type":"int32"},{"name":"notification","type":"notification"}],"abstractClass":"Update"}},{"documentation":{"notification_group_id":"Unique notification group identifier ","type":"New type of the notification group ","chat_id":"Identifier of a chat to which all notifications in the group belong ","notification_settings_chat_id":"Chat identifier, which notification settings must be applied to the added notifications ","notification_sound_id":"Identifier of the notification sound to be played; 0 if sound is disabled ","total_count":"Total number of unread notifications in the group, can be bigger than number of active notifications ","added_notifications":"List of added group notifications, sorted by notification ID ","removed_notification_ids":"Identifiers of removed group notifications, sorted by notification ID","_":"A list of active notifications in a notification group has changed "},"type":{"subclass":"updateNotificationGroup","properties":[{"name":"notification_group_id","type":"int32"},{"name":"type","type":"NotificationGroupType"},{"name":"chat_id","type":"int53"},{"name":"notification_settings_chat_id","type":"int53"},{"name":"notification_sound_id","type":"int64"},{"name":"total_count","type":"int32"},{"name":"added_notifications","type":"vector<notification>"},{"name":"removed_notification_ids","type":"vector<int32>"}],"abstractClass":"Update"}},{"documentation":{"groups":"Lists of active notification groups","_":"Contains active notifications that was shown on previous application launches. This update is sent only if the message database is used. In that case it comes once before any updateNotification and updateNotificationGroup update "},"type":{"subclass":"updateActiveNotifications","properties":[{"name":"groups","type":"vector<notificationGroup>"}],"abstractClass":"Update"}},{"documentation":{"have_delayed_notifications":"True, if there are some delayed notification updates, which will be sent soon ","have_unreceived_notifications":"True, if there can be some yet unreceived notifications, which are being fetched from the server","_":"Describes whether there are some pending notification updates. Can be used to prevent application from killing, while there are some pending notifications "},"type":{"subclass":"updateHavePendingNotifications","properties":[{"name":"have_delayed_notifications","type":"Bool"},{"name":"have_unreceived_notifications","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_ids":"Identifiers of the deleted messages ","is_permanent":"True, if the messages are permanently deleted by a user (as opposed to just becoming inaccessible) ","from_cache":"True, if the messages are deleted only from the cache and can possibly be retrieved again in the future","_":"Some messages were deleted "},"type":{"subclass":"updateDeleteMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"},{"name":"is_permanent","type":"Bool"},{"name":"from_cache","type":"Bool"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"If not 0, a message thread identifier in which the action was performed ","sender_id":"Identifier of a message sender performing the action ","action":"The action","_":"A message sender activity in the chat has changed "},"type":{"subclass":"updateChatAction","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"sender_id","type":"MessageSender"},{"name":"action","type":"ChatAction"}],"abstractClass":"Update"}},{"documentation":{"user_id":"User identifier ","status":"New status of the user","_":"The user went online or offline "},"type":{"subclass":"updateUserStatus","properties":[{"name":"user_id","type":"int53"},{"name":"status","type":"UserStatus"}],"abstractClass":"Update"}},{"documentation":{"user":"New data about the user","_":"Some data of a user has changed. This update is guaranteed to come before the user identifier is returned to the application "},"type":{"subclass":"updateUser","properties":[{"name":"user","type":"user"}],"abstractClass":"Update"}},{"documentation":{"basic_group":"New data about the group","_":"Some data of a basic group has changed. This update is guaranteed to come before the basic group identifier is returned to the application "},"type":{"subclass":"updateBasicGroup","properties":[{"name":"basic_group","type":"basicGroup"}],"abstractClass":"Update"}},{"documentation":{"supergroup":"New data about the supergroup","_":"Some data of a supergroup or a channel has changed. This update is guaranteed to come before the supergroup identifier is returned to the application "},"type":{"subclass":"updateSupergroup","properties":[{"name":"supergroup","type":"supergroup"}],"abstractClass":"Update"}},{"documentation":{"secret_chat":"New data about the secret chat","_":"Some data of a secret chat has changed. This update is guaranteed to come before the secret chat identifier is returned to the application "},"type":{"subclass":"updateSecretChat","properties":[{"name":"secret_chat","type":"secretChat"}],"abstractClass":"Update"}},{"documentation":{"user_id":"User identifier ","user_full_info":"New full information about the user","_":"Some data in userFullInfo has been changed "},"type":{"subclass":"updateUserFullInfo","properties":[{"name":"user_id","type":"int53"},{"name":"user_full_info","type":"userFullInfo"}],"abstractClass":"Update"}},{"documentation":{"basic_group_id":"Identifier of a basic group ","basic_group_full_info":"New full information about the group","_":"Some data in basicGroupFullInfo has been changed "},"type":{"subclass":"updateBasicGroupFullInfo","properties":[{"name":"basic_group_id","type":"int53"},{"name":"basic_group_full_info","type":"basicGroupFullInfo"}],"abstractClass":"Update"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel ","supergroup_full_info":"New full information about the supergroup","_":"Some data in supergroupFullInfo has been changed "},"type":{"subclass":"updateSupergroupFullInfo","properties":[{"name":"supergroup_id","type":"int53"},{"name":"supergroup_full_info","type":"supergroupFullInfo"}],"abstractClass":"Update"}},{"documentation":{"type":"Notification type. If type begins with \"AUTH_KEY_DROP_\", then two buttons \"Cancel\" and \"Log out\" must be shown under notification; if user presses the second, all local data must be destroyed using Destroy method ","content":"Notification content","_":"A service notification from the server was received. Upon receiving this the application must show a popup with the content of the notification "},"type":{"subclass":"updateServiceNotification","properties":[{"name":"type","type":"string"},{"name":"content","type":"MessageContent"}],"abstractClass":"Update"}},{"documentation":{"file":"New data about the file","_":"Information about a file was updated "},"type":{"subclass":"updateFile","properties":[{"name":"file","type":"file"}],"abstractClass":"Update"}},{"documentation":{"generation_id":"Unique identifier for the generation process ","original_path":"The path to a file from which a new file is generated; may be empty ","destination_path":"The path to a file that must be created and where the new file is generated ","conversion":"String specifying the conversion applied to the original file. If conversion is \"#url#\" than original_path contains an HTTP/HTTPS URL of a file, which must be downloaded by the application","_":"The file generation process needs to be started by the application "},"type":{"subclass":"updateFileGenerationStart","properties":[{"name":"generation_id","type":"int64"},{"name":"original_path","type":"string"},{"name":"destination_path","type":"string"},{"name":"conversion","type":"string"}],"abstractClass":"Update"}},{"documentation":{"generation_id":"Unique identifier for the generation process","_":"File generation is no longer needed "},"type":{"subclass":"updateFileGenerationStop","properties":[{"name":"generation_id","type":"int64"}],"abstractClass":"Update"}},{"documentation":{"total_size":"Total size of files in the file download list, in bytes ","total_count":"Total number of files in the file download list ","downloaded_size":"Total downloaded size of files in the file download list, in bytes","_":"The state of the file download list has changed "},"type":{"subclass":"updateFileDownloads","properties":[{"name":"total_size","type":"int53"},{"name":"total_count","type":"int32"},{"name":"downloaded_size","type":"int53"}],"abstractClass":"Update"}},{"documentation":{"file_download":"The added file download ","counts":"New number of being downloaded and recently downloaded files found","_":"A file was added to the file download list. This update is sent only after file download list is loaded for the first time "},"type":{"subclass":"updateFileAddedToDownloads","properties":[{"name":"file_download","type":"fileDownload"},{"name":"counts","type":"downloadedFileCounts"}],"abstractClass":"Update"}},{"documentation":{"file_id":"File identifier ","complete_date":"Point in time (Unix timestamp) when the file downloading was completed; 0 if the file downloading isn't completed ","is_paused":"True, if downloading of the file is paused ","counts":"New number of being downloaded and recently downloaded files found","_":"A file download was changed. This update is sent only after file download list is loaded for the first time "},"type":{"subclass":"updateFileDownload","properties":[{"name":"file_id","type":"int32"},{"name":"complete_date","type":"int32"},{"name":"is_paused","type":"Bool"},{"name":"counts","type":"downloadedFileCounts"}],"abstractClass":"Update"}},{"documentation":{"file_id":"File identifier ","counts":"New number of being downloaded and recently downloaded files found","_":"A file was removed from the file download list. This update is sent only after file download list is loaded for the first time "},"type":{"subclass":"updateFileRemovedFromDownloads","properties":[{"name":"file_id","type":"int32"},{"name":"counts","type":"downloadedFileCounts"}],"abstractClass":"Update"}},{"documentation":{"call":"New data about a call","_":"New call was created or information about a call was updated "},"type":{"subclass":"updateCall","properties":[{"name":"call","type":"call"}],"abstractClass":"Update"}},{"documentation":{"group_call":"New data about a group call","_":"Information about a group call was updated "},"type":{"subclass":"updateGroupCall","properties":[{"name":"group_call","type":"groupCall"}],"abstractClass":"Update"}},{"documentation":{"group_call_id":"Identifier of group call ","participant":"New data about a participant","_":"Information about a group call participant was changed. The updates are sent only after the group call is received through getGroupCall and only if the call is joined or being joined "},"type":{"subclass":"updateGroupCallParticipant","properties":[{"name":"group_call_id","type":"int32"},{"name":"participant","type":"groupCallParticipant"}],"abstractClass":"Update"}},{"documentation":{"call_id":"The call identifier ","data":"The data","_":"New call signaling data arrived "},"type":{"subclass":"updateNewCallSignalingData","properties":[{"name":"call_id","type":"int32"},{"name":"data","type":"bytes"}],"abstractClass":"Update"}},{"documentation":{"setting":"The privacy setting ","rules":"New privacy rules","_":"Some privacy setting rules have been changed "},"type":{"subclass":"updateUserPrivacySettingRules","properties":[{"name":"setting","type":"UserPrivacySetting"},{"name":"rules","type":"userPrivacySettingRules"}],"abstractClass":"Update"}},{"documentation":{"chat_list":"The chat list with changed number of unread messages ","unread_count":"Total number of unread messages ","unread_unmuted_count":"Total number of unread messages in unmuted chats","_":"Number of unread messages in a chat list has changed. This update is sent only if the message database is used "},"type":{"subclass":"updateUnreadMessageCount","properties":[{"name":"chat_list","type":"ChatList"},{"name":"unread_count","type":"int32"},{"name":"unread_unmuted_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"chat_list":"The chat list with changed number of unread messages ","total_count":"Approximate total number of chats in the chat list ","unread_count":"Total number of unread chats ","unread_unmuted_count":"Total number of unread unmuted chats ","marked_as_unread_count":"Total number of chats marked as unread ","marked_as_unread_unmuted_count":"Total number of unmuted chats marked as unread","_":"Number of unread chats, i.e. with unread messages or marked as unread, has changed. This update is sent only if the message database is used "},"type":{"subclass":"updateUnreadChatCount","properties":[{"name":"chat_list","type":"ChatList"},{"name":"total_count","type":"int32"},{"name":"unread_count","type":"int32"},{"name":"unread_unmuted_count","type":"int32"},{"name":"marked_as_unread_count","type":"int32"},{"name":"marked_as_unread_unmuted_count","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"name":"The option name ","value":"The new option value","_":"An option changed its value "},"type":{"subclass":"updateOption","properties":[{"name":"name","type":"string"},{"name":"value","type":"OptionValue"}],"abstractClass":"Update"}},{"documentation":{"sticker_set":"The sticker set","_":"A sticker set has changed "},"type":{"subclass":"updateStickerSet","properties":[{"name":"sticker_set","type":"stickerSet"}],"abstractClass":"Update"}},{"documentation":{"sticker_type":"Type of the affected stickers ","sticker_set_ids":"The new list of installed ordinary sticker sets","_":"The list of installed sticker sets was updated "},"type":{"subclass":"updateInstalledStickerSets","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"sticker_set_ids","type":"vector<int64>"}],"abstractClass":"Update"}},{"documentation":{"sticker_type":"Type of the affected stickers ","sticker_sets":"The prefix of the list of trending sticker sets with the newest trending sticker sets","_":"The list of trending sticker sets was updated or some of them were viewed "},"type":{"subclass":"updateTrendingStickerSets","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"sticker_sets","type":"trendingStickerSets"}],"abstractClass":"Update"}},{"documentation":{"is_attached":"True, if the list of stickers attached to photo or video files was updated, otherwise the list of sent stickers is updated ","sticker_ids":"The new list of file identifiers of recently used stickers","_":"The list of recently used stickers was updated "},"type":{"subclass":"updateRecentStickers","properties":[{"name":"is_attached","type":"Bool"},{"name":"sticker_ids","type":"vector<int32>"}],"abstractClass":"Update"}},{"documentation":{"sticker_ids":"The new list of file identifiers of favorite stickers","_":"The list of favorite stickers was updated "},"type":{"subclass":"updateFavoriteStickers","properties":[{"name":"sticker_ids","type":"vector<int32>"}],"abstractClass":"Update"}},{"documentation":{"animation_ids":"The new list of file identifiers of saved animations","_":"The list of saved animations was updated "},"type":{"subclass":"updateSavedAnimations","properties":[{"name":"animation_ids","type":"vector<int32>"}],"abstractClass":"Update"}},{"documentation":{"notification_sound_ids":"The new list of identifiers of saved notification sounds","_":"The list of saved notifications sounds was updated. This update may not be sent until information about a notification sound was requested for the first time "},"type":{"subclass":"updateSavedNotificationSounds","properties":[{"name":"notification_sound_ids","type":"vector<int64>"}],"abstractClass":"Update"}},{"documentation":{"for_dark_theme":"True, if background for dark theme has changed ","background":"The new selected background; may be null","_":"The selected background has changed "},"type":{"subclass":"updateSelectedBackground","properties":[{"name":"for_dark_theme","type":"Bool"},{"name":"background","type":"background"}],"abstractClass":"Update"}},{"documentation":{"chat_themes":"The new list of chat themes","_":"The list of available chat themes has changed "},"type":{"subclass":"updateChatThemes","properties":[{"name":"chat_themes","type":"vector<chatTheme>"}],"abstractClass":"Update"}},{"documentation":{"localization_target":"Localization target to which the language pack belongs ","language_pack_id":"Identifier of the updated language pack ","strings":"List of changed language pack strings","_":"Some language pack strings have been updated "},"type":{"subclass":"updateLanguagePackStrings","properties":[{"name":"localization_target","type":"string"},{"name":"language_pack_id","type":"string"},{"name":"strings","type":"vector<languagePackString>"}],"abstractClass":"Update"}},{"documentation":{"state":"The new connection state","_":"The connection state has changed. This update must be used only to show a human-readable description of the connection state "},"type":{"subclass":"updateConnectionState","properties":[{"name":"state","type":"ConnectionState"}],"abstractClass":"Update"}},{"documentation":{"terms_of_service_id":"Identifier of the terms of service ","terms_of_service":"The new terms of service","_":"New terms of service must be accepted by the user. If the terms of service are declined, then the deleteAccount method must be called with the reason \"Decline ToS update\" "},"type":{"subclass":"updateTermsOfService","properties":[{"name":"terms_of_service_id","type":"string"},{"name":"terms_of_service","type":"termsOfService"}],"abstractClass":"Update"}},{"documentation":{"users_nearby":"The new list of users nearby","_":"The list of users nearby has changed. The update is guaranteed to be sent only 60 seconds after a successful searchChatsNearby request "},"type":{"subclass":"updateUsersNearby","properties":[{"name":"users_nearby","type":"vector<chatNearby>"}],"abstractClass":"Update"}},{"documentation":{"bots":"The new list of bots added to attachment menu. The bots must not be shown on scheduled messages screen","_":"The list of bots added to attachment menu has changed "},"type":{"subclass":"updateAttachmentMenuBots","properties":[{"name":"bots","type":"vector<attachmentMenuBot>"}],"abstractClass":"Update"}},{"documentation":{"web_app_launch_id":"Identifier of Web App launch","_":"A message was sent by an opened Web App, so the Web App needs to be closed "},"type":{"subclass":"updateWebAppMessageSent","properties":[{"name":"web_app_launch_id","type":"int64"}],"abstractClass":"Update"}},{"documentation":{"emojis":"The new list of active emoji reactions","_":"The list of active emoji reactions has changed "},"type":{"subclass":"updateActiveEmojiReactions","properties":[{"name":"emojis","type":"vector<string>"}],"abstractClass":"Update"}},{"documentation":{"reaction_type":"The new type of the default reaction","_":"The type of default reaction has changed "},"type":{"subclass":"updateDefaultReactionType","properties":[{"name":"reaction_type","type":"ReactionType"}],"abstractClass":"Update"}},{"documentation":{"emojis":"The new list of supported dice emojis","_":"The list of supported dice emojis has changed "},"type":{"subclass":"updateDiceEmojis","properties":[{"name":"emojis","type":"vector<string>"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","sticker":"The animated sticker to be played","_":"Some animated emoji message was clicked and a big animated sticker must be played if the message is visible on the screen. chatActionWatchingAnimations with the text of the message needs to be sent if the sticker is played "},"type":{"subclass":"updateAnimatedEmojiMessageClicked","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"sticker","type":"sticker"}],"abstractClass":"Update"}},{"documentation":{"provider":"Name of the animation search provider ","emojis":"The new list of emojis suggested for searching","_":"The parameters of animation search through getOption(\"animation_search_bot_username\") bot has changed "},"type":{"subclass":"updateAnimationSearchParameters","properties":[{"name":"provider","type":"string"},{"name":"emojis","type":"vector<string>"}],"abstractClass":"Update"}},{"documentation":{"added_actions":"Added suggested actions ","removed_actions":"Removed suggested actions","_":"The list of suggested to the user actions has changed "},"type":{"subclass":"updateSuggestedActions","properties":[{"name":"added_actions","type":"vector<SuggestedAction>"},{"name":"removed_actions","type":"vector<SuggestedAction>"}],"abstractClass":"Update"}},{"documentation":{"id":"Unique query identifier ","sender_user_id":"Identifier of the user who sent the query ","user_location":"User location; may be null ","chat_type":"The type of the chat from which the query originated; may be null if unknown ","query":"Text of the query ","offset":"Offset of the first entry to return","_":"A new incoming inline query; for bots only "},"type":{"subclass":"updateNewInlineQuery","properties":[{"name":"id","type":"int64"},{"name":"sender_user_id","type":"int53"},{"name":"user_location","type":"location"},{"name":"chat_type","type":"ChatType"},{"name":"query","type":"string"},{"name":"offset","type":"string"}],"abstractClass":"Update"}},{"documentation":{"sender_user_id":"Identifier of the user who sent the query ","user_location":"User location; may be null ","query":"Text of the query ","result_id":"Identifier of the chosen result ","inline_message_id":"Identifier of the sent inline message, if known","_":"The user has chosen a result of an inline query; for bots only "},"type":{"subclass":"updateNewChosenInlineResult","properties":[{"name":"sender_user_id","type":"int53"},{"name":"user_location","type":"location"},{"name":"query","type":"string"},{"name":"result_id","type":"string"},{"name":"inline_message_id","type":"string"}],"abstractClass":"Update"}},{"documentation":{"id":"Unique query identifier ","sender_user_id":"Identifier of the user who sent the query ","chat_id":"Identifier of the chat where the query was sent ","message_id":"Identifier of the message from which the query originated ","chat_instance":"Identifier that uniquely corresponds to the chat to which the message was sent ","payload":"Query payload","_":"A new incoming callback query; for bots only "},"type":{"subclass":"updateNewCallbackQuery","properties":[{"name":"id","type":"int64"},{"name":"sender_user_id","type":"int53"},{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"chat_instance","type":"int64"},{"name":"payload","type":"CallbackQueryPayload"}],"abstractClass":"Update"}},{"documentation":{"id":"Unique query identifier ","sender_user_id":"Identifier of the user who sent the query ","inline_message_id":"Identifier of the inline message from which the query originated ","chat_instance":"An identifier uniquely corresponding to the chat a message was sent to ","payload":"Query payload","_":"A new incoming callback query from a message sent via a bot; for bots only "},"type":{"subclass":"updateNewInlineCallbackQuery","properties":[{"name":"id","type":"int64"},{"name":"sender_user_id","type":"int53"},{"name":"inline_message_id","type":"string"},{"name":"chat_instance","type":"int64"},{"name":"payload","type":"CallbackQueryPayload"}],"abstractClass":"Update"}},{"documentation":{"id":"Unique query identifier ","sender_user_id":"Identifier of the user who sent the query ","invoice_payload":"Invoice payload ","shipping_address":"User shipping address","_":"A new incoming shipping query; for bots only. Only for invoices with flexible price "},"type":{"subclass":"updateNewShippingQuery","properties":[{"name":"id","type":"int64"},{"name":"sender_user_id","type":"int53"},{"name":"invoice_payload","type":"string"},{"name":"shipping_address","type":"address"}],"abstractClass":"Update"}},{"documentation":{"id":"Unique query identifier ","sender_user_id":"Identifier of the user who sent the query ","currency":"Currency for the product price ","total_amount":"Total price for the product, in the smallest units of the currency ","invoice_payload":"Invoice payload ","shipping_option_id":"Identifier of a shipping option chosen by the user; may be empty if not applicable ","order_info":"Information about the order; may be null","_":"A new incoming pre-checkout query; for bots only. Contains full information about a checkout "},"type":{"subclass":"updateNewPreCheckoutQuery","properties":[{"name":"id","type":"int64"},{"name":"sender_user_id","type":"int53"},{"name":"currency","type":"string"},{"name":"total_amount","type":"int53"},{"name":"invoice_payload","type":"bytes"},{"name":"shipping_option_id","type":"string"},{"name":"order_info","type":"orderInfo"}],"abstractClass":"Update"}},{"documentation":{"event":"A JSON-serialized event","_":"A new incoming event; for bots only "},"type":{"subclass":"updateNewCustomEvent","properties":[{"name":"event","type":"string"}],"abstractClass":"Update"}},{"documentation":{"id":"The query identifier ","data":"JSON-serialized query data ","timeout":"Query timeout","_":"A new incoming query; for bots only "},"type":{"subclass":"updateNewCustomQuery","properties":[{"name":"id","type":"int64"},{"name":"data","type":"string"},{"name":"timeout","type":"int32"}],"abstractClass":"Update"}},{"documentation":{"poll":"New data about the poll","_":"A poll was updated; for bots only "},"type":{"subclass":"updatePoll","properties":[{"name":"poll","type":"poll"}],"abstractClass":"Update"}},{"documentation":{"poll_id":"Unique poll identifier ","user_id":"The user, who changed the answer to the poll ","option_ids":"0-based identifiers of answer options, chosen by the user","_":"A user changed the answer to a poll; for bots only "},"type":{"subclass":"updatePollAnswer","properties":[{"name":"poll_id","type":"int64"},{"name":"user_id","type":"int53"},{"name":"option_ids","type":"vector<int32>"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","actor_user_id":"Identifier of the user, changing the rights ","date":"Point in time (Unix timestamp) when the user rights was changed ","invite_link":"If user has joined the chat using an invite link, the invite link; may be null ","old_chat_member":"Previous chat member ","new_chat_member":"New chat member","_":"User rights changed in a chat; for bots only "},"type":{"subclass":"updateChatMember","properties":[{"name":"chat_id","type":"int53"},{"name":"actor_user_id","type":"int53"},{"name":"date","type":"int32"},{"name":"invite_link","type":"chatInviteLink"},{"name":"old_chat_member","type":"chatMember"},{"name":"new_chat_member","type":"chatMember"}],"abstractClass":"Update"}},{"documentation":{"chat_id":"Chat identifier ","request":"Join request ","invite_link":"The invite link, which was used to send join request; may be null","_":"A user sent a join request to a chat; for bots only "},"type":{"subclass":"updateNewChatJoinRequest","properties":[{"name":"chat_id","type":"int53"},{"name":"request","type":"chatJoinRequest"},{"name":"invite_link","type":"chatInviteLink"}],"abstractClass":"Update"}},{"documentation":{"updates":"List of updates","_":"Contains a list of updates "},"type":{"subclass":"updates","properties":[{"name":"updates","type":"vector<Update>"}],"abstractClass":"Updates"}},{"documentation":{"class":"LogStream ","_":"The log is written to stderr or an OS specific log"},"type":{"subclass":"logStreamDefault","properties":[],"abstractClass":"LogStream"}},{"documentation":{"path":"Path to the file to where the internal TDLib log will be written ","max_file_size":"The maximum size of the file to where the internal TDLib log is written before the file will automatically be rotated, in bytes ","redirect_stderr":"Pass true to additionally redirect stderr to the log file. Ignored on Windows","_":"The log is written to a file "},"type":{"subclass":"logStreamFile","properties":[{"name":"path","type":"string"},{"name":"max_file_size","type":"int53"},{"name":"redirect_stderr","type":"Bool"}],"abstractClass":"LogStream"}},{"documentation":{"_":"The log is written nowhere"},"type":{"subclass":"logStreamEmpty","properties":[],"abstractClass":"LogStream"}},{"documentation":{"verbosity_level":"Log verbosity level","_":"Contains a TDLib internal log verbosity level "},"type":{"subclass":"logVerbosityLevel","properties":[{"name":"verbosity_level","type":"int32"}],"abstractClass":"LogVerbosityLevel"}},{"documentation":{"tags":"List of log tags","_":"Contains a list of available TDLib internal log tags "},"type":{"subclass":"logTags","properties":[{"name":"tags","type":"vector<string>"}],"abstractClass":"LogTags"}},{"documentation":{"message":"Information message ","author":"Information author ","date":"Information change date","_":"Contains custom information about the user "},"type":{"subclass":"userSupportInfo","properties":[{"name":"message","type":"formattedText"},{"name":"author","type":"string"},{"name":"date","type":"int32"}],"abstractClass":"UserSupportInfo"}},{"documentation":{"value":"Number","_":"A simple object containing a number; for testing only "},"type":{"subclass":"testInt","properties":[{"name":"value","type":"int32"}],"abstractClass":"TestInt"}},{"documentation":{"value":"String","_":"A simple object containing a string; for testing only "},"type":{"subclass":"testString","properties":[{"name":"value","type":"string"}],"abstractClass":"TestString"}},{"documentation":{"value":"Bytes","_":"A simple object containing a sequence of bytes; for testing only "},"type":{"subclass":"testBytes","properties":[{"name":"value","type":"bytes"}],"abstractClass":"TestBytes"}},{"documentation":{"value":"Vector of numbers","_":"A simple object containing a vector of numbers; for testing only "},"type":{"subclass":"testVectorInt","properties":[{"name":"value","type":"vector<int32>"}],"abstractClass":"TestVectorInt"}},{"documentation":{"value":"Vector of objects","_":"A simple object containing a vector of objects that hold a number; for testing only "},"type":{"subclass":"testVectorIntObject","properties":[{"name":"value","type":"vector<testInt>"}],"abstractClass":"TestVectorIntObject"}},{"documentation":{"value":"Vector of strings","_":"A simple object containing a vector of strings; for testing only "},"type":{"subclass":"testVectorString","properties":[{"name":"value","type":"vector<string>"}],"abstractClass":"TestVectorString"}},{"documentation":{"value":"Vector of objects","_":"A simple object containing a vector of objects that hold a string; for testing only "},"type":{"subclass":"testVectorStringObject","properties":[{"name":"value","type":"vector<testString>"}],"abstractClass":"TestVectorStringObject"}},{"documentation":{"error":"Error message","_":"TDLib has encountered a fatal error "},"type":{"subclass":"updateFatalError","properties":[{"name":"error","type":"string"}],"abstractClass":"Update"}},{"documentation":{"data":"JavaScript blob containing file data","_":"A file from a JavaScript Blob "},"type":{"subclass":"inputFileBlob","properties":[{"name":"data","type":"blob"}],"abstractClass":"InputFile"}}],"functions":[{"documentation":{"_":"Returns the current authorization state; this is an offline request. For informational purposes only. Use updateAuthorizationState instead to maintain the current authorization state. Can be called before initialization"},"type":{"subclass":"getAuthorizationState","properties":[],"abstractClass":"AuthorizationState"}},{"documentation":{"use_test_dc":"Pass true to use Telegram test environment instead of the production environment ","database_directory":"The path to the directory for the persistent database; if empty, the current working directory will be used ","files_directory":"The path to the directory for storing files; if empty, database_directory will be used ","database_encryption_key":"Encryption key for the database ","use_file_database":"Pass true to keep information about downloaded and uploaded files between application restarts ","use_chat_info_database":"Pass true to keep cache of users, basic groups, supergroups, channels and secret chats between restarts. Implies use_file_database ","use_message_database":"Pass true to keep cache of chats and messages between restarts. Implies use_chat_info_database ","use_secret_chats":"Pass true to enable support for secret chats ","api_id":"Application identifier for Telegram API access, which can be obtained at https://my.telegram.org ","api_hash":"Application identifier hash for Telegram API access, which can be obtained at https://my.telegram.org ","system_language_code":"IETF language tag of the user's operating system language; must be non-empty ","device_model":"Model of the device the application is being run on; must be non-empty ","system_version":"Version of the operating system the application is being run on. If empty, the version is automatically detected by TDLib ","application_version":"Application version; must be non-empty ","enable_storage_optimizer":"Pass true to automatically delete old files in background ","ignore_file_names":"Pass true to ignore original file names for downloaded files. Otherwise, downloaded files are saved under names as close as possible to the original name","_":"Sets the parameters for TDLib initialization. Works only when the current authorization state is authorizationStateWaitTdlibParameters "},"type":{"subclass":"setTdlibParameters","properties":[{"name":"use_test_dc","type":"Bool"},{"name":"database_directory","type":"string"},{"name":"files_directory","type":"string"},{"name":"database_encryption_key","type":"bytes"},{"name":"use_file_database","type":"Bool"},{"name":"use_chat_info_database","type":"Bool"},{"name":"use_message_database","type":"Bool"},{"name":"use_secret_chats","type":"Bool"},{"name":"api_id","type":"int32"},{"name":"api_hash","type":"string"},{"name":"system_language_code","type":"string"},{"name":"device_model","type":"string"},{"name":"system_version","type":"string"},{"name":"application_version","type":"string"},{"name":"enable_storage_optimizer","type":"Bool"},{"name":"ignore_file_names","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"phone_number":"The phone number of the user, in international format ","settings":"Settings for the authentication of the user's phone number; pass null to use default settings","_":"Sets the phone number of the user and sends an authentication code to the user. Works only when the current authorization state is authorizationStateWaitPhoneNumber, -or if there is no pending authentication query and the current authorization state is authorizationStateWaitCode, authorizationStateWaitRegistration, or authorizationStateWaitPassword "},"type":{"subclass":"setAuthenticationPhoneNumber","properties":[{"name":"phone_number","type":"string"},{"name":"settings","type":"phoneNumberAuthenticationSettings"}],"abstractClass":"Ok"}},{"documentation":{"email_address":"The email address of the user","_":"Sets the email address of the user and sends an authentication code to the email address. Works only when the current authorization state is authorizationStateWaitEmailAddress "},"type":{"subclass":"setAuthenticationEmailAddress","properties":[{"name":"email_address","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"_":"Resends an authentication code to the user. Works only when the current authorization state is authorizationStateWaitCode, the next_code_type of the result is not null and the server-specified timeout has passed, or when the current authorization state is authorizationStateWaitEmailCode"},"type":{"subclass":"resendAuthenticationCode","properties":[],"abstractClass":"Ok"}},{"documentation":{"code":"Email address authentication to check","_":"Checks the authentication of a email address. Works only when the current authorization state is authorizationStateWaitEmailCode "},"type":{"subclass":"checkAuthenticationEmailCode","properties":[{"name":"code","type":"EmailAddressAuthentication"}],"abstractClass":"Ok"}},{"documentation":{"code":"Authentication code to check","_":"Checks the authentication code. Works only when the current authorization state is authorizationStateWaitCode "},"type":{"subclass":"checkAuthenticationCode","properties":[{"name":"code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"other_user_ids":"List of user identifiers of other users currently using the application","_":"Requests QR code authentication by scanning a QR code on another logged in device. Works only when the current authorization state is authorizationStateWaitPhoneNumber, -or if there is no pending authentication query and the current authorization state is authorizationStateWaitCode, authorizationStateWaitRegistration, or authorizationStateWaitPassword "},"type":{"subclass":"requestQrCodeAuthentication","properties":[{"name":"other_user_ids","type":"vector<int53>"}],"abstractClass":"Ok"}},{"documentation":{"first_name":"The first name of the user; 1-64 characters ","last_name":"The last name of the user; 0-64 characters","_":"Finishes user registration. Works only when the current authorization state is authorizationStateWaitRegistration "},"type":{"subclass":"registerUser","properties":[{"name":"first_name","type":"string"},{"name":"last_name","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"password":"The 2-step verification password to check","_":"Checks the 2-step verification password for correctness. Works only when the current authorization state is authorizationStateWaitPassword "},"type":{"subclass":"checkAuthenticationPassword","properties":[{"name":"password","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"_":"Requests to send a 2-step verification password recovery code to an email address that was previously set up. Works only when the current authorization state is authorizationStateWaitPassword"},"type":{"subclass":"requestAuthenticationPasswordRecovery","properties":[],"abstractClass":"Ok"}},{"documentation":{"recovery_code":"Recovery code to check","_":"Checks whether a 2-step verification password recovery code sent to an email address is valid. Works only when the current authorization state is authorizationStateWaitPassword "},"type":{"subclass":"checkAuthenticationPasswordRecoveryCode","properties":[{"name":"recovery_code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"recovery_code":"Recovery code to check ","new_password":"New 2-step verification password of the user; may be empty to remove the password ","new_hint":"New password hint; may be empty","_":"Recovers the 2-step verification password with a password recovery code sent to an email address that was previously set up. Works only when the current authorization state is authorizationStateWaitPassword "},"type":{"subclass":"recoverAuthenticationPassword","properties":[{"name":"recovery_code","type":"string"},{"name":"new_password","type":"string"},{"name":"new_hint","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"token":"The bot token","_":"Checks the authentication token of a bot; to log in as a bot. Works only when the current authorization state is authorizationStateWaitPhoneNumber. Can be used instead of setAuthenticationPhoneNumber and checkAuthenticationCode to log in "},"type":{"subclass":"checkAuthenticationBotToken","properties":[{"name":"token","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"_":"Closes the TDLib instance after a proper logout. Requires an available network connection. All local data will be destroyed. After the logout completes, updateAuthorizationState with authorizationStateClosed will be sent"},"type":{"subclass":"logOut","properties":[],"abstractClass":"Ok"}},{"documentation":{"_":"Closes the TDLib instance. All databases will be flushed to disk and properly closed. After the close completes, updateAuthorizationState with authorizationStateClosed will be sent. Can be called before initialization"},"type":{"subclass":"close","properties":[],"abstractClass":"Ok"}},{"documentation":{"_":"Closes the TDLib instance, destroying all local data without a proper logout. The current user session will remain in the list of all active sessions. All local data will be destroyed. After the destruction completes updateAuthorizationState with authorizationStateClosed will be sent. Can be called before authorization"},"type":{"subclass":"destroy","properties":[],"abstractClass":"Ok"}},{"documentation":{"link":"A link from a QR code. The link must be scanned by the in-app camera","_":"Confirms QR code authentication on another device. Returns created session on success "},"type":{"subclass":"confirmQrCodeAuthentication","properties":[{"name":"link","type":"string"}],"abstractClass":"Session"}},{"documentation":{"_":"Returns all updates needed to restore current TDLib state, i.e. all actual updateAuthorizationState/updateUser/updateNewChat and others. This is especially useful if TDLib is run in a separate process. Can be called before initialization"},"type":{"subclass":"getCurrentState","properties":[],"abstractClass":"Updates"}},{"documentation":{"new_encryption_key":"New encryption key","_":"Changes the database encryption key. Usually the encryption key is never changed and is stored in some OS keychain "},"type":{"subclass":"setDatabaseEncryptionKey","properties":[{"name":"new_encryption_key","type":"bytes"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns the current state of 2-step verification"},"type":{"subclass":"getPasswordState","properties":[],"abstractClass":"PasswordState"}},{"documentation":{"old_password":"Previous 2-step verification password of the user ","new_password":"New 2-step verification password of the user; may be empty to remove the password ","new_hint":"New password hint; may be empty ","set_recovery_email_address":"Pass true to change also the recovery email address ","new_recovery_email_address":"New recovery email address; may be empty","_":"Changes the 2-step verification password for the current user. If a new recovery email address is specified, then the change will not be applied until the new recovery email address is confirmed "},"type":{"subclass":"setPassword","properties":[{"name":"old_password","type":"string"},{"name":"new_password","type":"string"},{"name":"new_hint","type":"string"},{"name":"set_recovery_email_address","type":"Bool"},{"name":"new_recovery_email_address","type":"string"}],"abstractClass":"PasswordState"}},{"documentation":{"new_login_email_address":"New login email address","_":"Changes the login email address of the user. The change will not be applied until the new login email address is confirmed with `checkLoginEmailAddressCode`. To use Apple ID/Google ID instead of a email address, call `checkLoginEmailAddressCode` directly "},"type":{"subclass":"setLoginEmailAddress","properties":[{"name":"new_login_email_address","type":"string"}],"abstractClass":"EmailAddressAuthenticationCodeInfo"}},{"documentation":{"_":"Resends the login email address verification code"},"type":{"subclass":"resendLoginEmailAddressCode","properties":[],"abstractClass":"EmailAddressAuthenticationCodeInfo"}},{"documentation":{"code":"Email address authentication to check","_":"Checks the login email address authentication "},"type":{"subclass":"checkLoginEmailAddressCode","properties":[{"name":"code","type":"EmailAddressAuthentication"}],"abstractClass":"Ok"}},{"documentation":{"password":"The 2-step verification password for the current user","_":"Returns a 2-step verification recovery email address that was previously set up. This method can be used to verify a password provided by the user "},"type":{"subclass":"getRecoveryEmailAddress","properties":[{"name":"password","type":"string"}],"abstractClass":"RecoveryEmailAddress"}},{"documentation":{"password":"The 2-step verification password of the current user ","new_recovery_email_address":"New recovery email address","_":"Changes the 2-step verification recovery email address of the user. If a new recovery email address is specified, then the change will not be applied until the new recovery email address is confirmed. -If new_recovery_email_address is the same as the email address that is currently set up, this call succeeds immediately and aborts all other requests waiting for an email confirmation "},"type":{"subclass":"setRecoveryEmailAddress","properties":[{"name":"password","type":"string"},{"name":"new_recovery_email_address","type":"string"}],"abstractClass":"PasswordState"}},{"documentation":{"code":"Verification code to check","_":"Checks the 2-step verification recovery email address verification code "},"type":{"subclass":"checkRecoveryEmailAddressCode","properties":[{"name":"code","type":"string"}],"abstractClass":"PasswordState"}},{"documentation":{"_":"Resends the 2-step verification recovery email address verification code"},"type":{"subclass":"resendRecoveryEmailAddressCode","properties":[],"abstractClass":"PasswordState"}},{"documentation":{"_":"Requests to send a 2-step verification password recovery code to an email address that was previously set up"},"type":{"subclass":"requestPasswordRecovery","properties":[],"abstractClass":"EmailAddressAuthenticationCodeInfo"}},{"documentation":{"recovery_code":"Recovery code to check","_":"Checks whether a 2-step verification password recovery code sent to an email address is valid "},"type":{"subclass":"checkPasswordRecoveryCode","properties":[{"name":"recovery_code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"recovery_code":"Recovery code to check ","new_password":"New 2-step verification password of the user; may be empty to remove the password ","new_hint":"New password hint; may be empty","_":"Recovers the 2-step verification password using a recovery code sent to an email address that was previously set up "},"type":{"subclass":"recoverPassword","properties":[{"name":"recovery_code","type":"string"},{"name":"new_password","type":"string"},{"name":"new_hint","type":"string"}],"abstractClass":"PasswordState"}},{"documentation":{"_":"Removes 2-step verification password without previous password and access to recovery email address. The password can't be reset immediately and the request needs to be repeated after the specified time"},"type":{"subclass":"resetPassword","properties":[],"abstractClass":"ResetPasswordResult"}},{"documentation":{"_":"Cancels reset of 2-step verification password. The method can be called if passwordState.pending_reset_date > 0"},"type":{"subclass":"cancelPasswordReset","properties":[],"abstractClass":"Ok"}},{"documentation":{"password":"The 2-step verification password of the current user ","valid_for":"Time during which the temporary password will be valid, in seconds; must be between 60 and 86400","_":"Creates a new temporary password for processing payments "},"type":{"subclass":"createTemporaryPassword","properties":[{"name":"password","type":"string"},{"name":"valid_for","type":"int32"}],"abstractClass":"TemporaryPasswordState"}},{"documentation":{"_":"Returns information about the current temporary password"},"type":{"subclass":"getTemporaryPasswordState","properties":[],"abstractClass":"TemporaryPasswordState"}},{"documentation":{"_":"Returns the current user"},"type":{"subclass":"getMe","properties":[],"abstractClass":"User"}},{"documentation":{"user_id":"User identifier","_":"Returns information about a user by their identifier. This is an offline request if the current user is not a bot "},"type":{"subclass":"getUser","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"User"}},{"documentation":{"user_id":"User identifier","_":"Returns full information about a user by their identifier "},"type":{"subclass":"getUserFullInfo","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"UserFullInfo"}},{"documentation":{"basic_group_id":"Basic group identifier","_":"Returns information about a basic group by its identifier. This is an offline request if the current user is not a bot "},"type":{"subclass":"getBasicGroup","properties":[{"name":"basic_group_id","type":"int53"}],"abstractClass":"BasicGroup"}},{"documentation":{"basic_group_id":"Basic group identifier","_":"Returns full information about a basic group by its identifier "},"type":{"subclass":"getBasicGroupFullInfo","properties":[{"name":"basic_group_id","type":"int53"}],"abstractClass":"BasicGroupFullInfo"}},{"documentation":{"supergroup_id":"Supergroup or channel identifier","_":"Returns information about a supergroup or a channel by its identifier. This is an offline request if the current user is not a bot "},"type":{"subclass":"getSupergroup","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"Supergroup"}},{"documentation":{"supergroup_id":"Supergroup or channel identifier","_":"Returns full information about a supergroup or a channel by its identifier, cached for up to 1 minute "},"type":{"subclass":"getSupergroupFullInfo","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"SupergroupFullInfo"}},{"documentation":{"secret_chat_id":"Secret chat identifier","_":"Returns information about a secret chat by its identifier. This is an offline request "},"type":{"subclass":"getSecretChat","properties":[{"name":"secret_chat_id","type":"int32"}],"abstractClass":"SecretChat"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns information about a chat by its identifier, this is an offline request if the current user is not a bot "},"type":{"subclass":"getChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Chat"}},{"documentation":{"chat_id":"Identifier of the chat the message belongs to ","message_id":"Identifier of the message to get","_":"Returns information about a message "},"type":{"subclass":"getMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat the message belongs to ","message_id":"Identifier of the message to get","_":"Returns information about a message, if it is available without sending network request. This is an offline request "},"type":{"subclass":"getMessageLocally","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat the message belongs to ","message_id":"Identifier of the reply message","_":"Returns information about a message that is replied by a given message. Also returns the pinned message, the game message, the invoice message, and the topic creation message for messages of the types messagePinMessage, messageGameScore, messagePaymentSuccessful, and topic messages without replied message respectively "},"type":{"subclass":"getRepliedMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat the message belongs to","_":"Returns information about a newest pinned message in the chat "},"type":{"subclass":"getChatPinnedMessage","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat the message belongs to ","message_id":"Message identifier ","callback_query_id":"Identifier of the callback query","_":"Returns information about a message with the callback button that originated a callback query; for bots only "},"type":{"subclass":"getCallbackQueryMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"callback_query_id","type":"int64"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat the messages belong to ","message_ids":"Identifiers of the messages to get","_":"Returns information about messages. If a message is not found, returns null on the corresponding position of the result "},"type":{"subclass":"getMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Identifier of the message","_":"Returns information about a message thread. Can be used only if message.can_get_message_thread == true "},"type":{"subclass":"getMessageThread","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"MessageThreadInfo"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Identifier of the message","_":"Returns viewers of a recent outgoing message in a basic group or a supergroup chat. For video notes and voice notes only users, opened content of the message, are returned. The method can be called if message.can_get_viewers == true "},"type":{"subclass":"getMessageViewers","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Users"}},{"documentation":{"file_id":"Identifier of the file to get","_":"Returns information about a file; this is an offline request "},"type":{"subclass":"getFile","properties":[{"name":"file_id","type":"int32"}],"abstractClass":"File"}},{"documentation":{"remote_file_id":"Remote identifier of the file to get ","file_type":"File type; pass null if unknown","_":"Returns information about a file by its remote ID; this is an offline request. Can be used to register a URL as a file for further uploading, or sending as a message. Even the request succeeds, the file can be used only if it is still accessible to the user. -For example, if the file is from a message, then the message must be not deleted and accessible to the user. If the file database is disabled, then the corresponding object with the file must be preloaded by the application "},"type":{"subclass":"getRemoteFile","properties":[{"name":"remote_file_id","type":"string"},{"name":"file_type","type":"FileType"}],"abstractClass":"File"}},{"documentation":{"chat_list":"The chat list in which to load chats; pass null to load chats from the main chat list ","limit":"The maximum number of chats to be loaded. For optimal performance, the number of loaded chats is chosen by TDLib and can be smaller than the specified limit, even if the end of the list is not reached","_":"Loads more chats from a chat list. The loaded chats and their positions in the chat list will be sent through updates. Chats are sorted by the pair (chat.position.order, chat.id) in descending order. Returns a 404 error if all chats have been loaded "},"type":{"subclass":"loadChats","properties":[{"name":"chat_list","type":"ChatList"},{"name":"limit","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_list":"The chat list in which to return chats; pass null to get chats from the main chat list ","limit":"The maximum number of chats to be returned","_":"Returns an ordered list of chats from the beginning of a chat list. For informational purposes only. Use loadChats and updates processing instead to maintain chat lists in a consistent state "},"type":{"subclass":"getChats","properties":[{"name":"chat_list","type":"ChatList"},{"name":"limit","type":"int32"}],"abstractClass":"Chats"}},{"documentation":{"username":"Username to be resolved","_":"Searches a public chat by its username. Currently, only private chats, supergroups and channels can be public. Returns the chat if found; otherwise an error is returned "},"type":{"subclass":"searchPublicChat","properties":[{"name":"username","type":"string"}],"abstractClass":"Chat"}},{"documentation":{"query":"Query to search for","_":"Searches public chats by looking for specified query in their username and title. Currently, only private chats, supergroups and channels can be public. Returns a meaningful number of results. -Excludes private chats with contacts and chats from the chat list from the results "},"type":{"subclass":"searchPublicChats","properties":[{"name":"query","type":"string"}],"abstractClass":"Chats"}},{"documentation":{"query":"Query to search for. If the query is empty, returns up to 50 recently found chats ","limit":"The maximum number of chats to be returned","_":"Searches for the specified query in the title and username of already known chats, this is an offline request. Returns chats in the order seen in the main chat list "},"type":{"subclass":"searchChats","properties":[{"name":"query","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"Chats"}},{"documentation":{"query":"Query to search for ","limit":"The maximum number of chats to be returned","_":"Searches for the specified query in the title and username of already known chats via request to the server. Returns chats in the order seen in the main chat list "},"type":{"subclass":"searchChatsOnServer","properties":[{"name":"query","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"Chats"}},{"documentation":{"location":"Current user location","_":"Returns a list of users and location-based supergroups nearby. The list of users nearby will be updated for 60 seconds after the request by the updates updateUsersNearby. The request must be sent again every 25 seconds with adjusted location to not miss new chats "},"type":{"subclass":"searchChatsNearby","properties":[{"name":"location","type":"location"}],"abstractClass":"ChatsNearby"}},{"documentation":{"category":"Category of chats to be returned ","limit":"The maximum number of chats to be returned; up to 30","_":"Returns a list of frequently used chats. Supported only if the chat info database is enabled "},"type":{"subclass":"getTopChats","properties":[{"name":"category","type":"TopChatCategory"},{"name":"limit","type":"int32"}],"abstractClass":"Chats"}},{"documentation":{"category":"Category of frequently used chats ","chat_id":"Chat identifier","_":"Removes a chat from the list of frequently used chats. Supported only if the chat info database is enabled "},"type":{"subclass":"removeTopChat","properties":[{"name":"category","type":"TopChatCategory"},{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to add","_":"Adds a chat to the list of recently found chats. The chat is added to the beginning of the list. If the chat is already in the list, it will be removed from the list first "},"type":{"subclass":"addRecentlyFoundChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to be removed","_":"Removes a chat from the list of recently found chats "},"type":{"subclass":"removeRecentlyFoundChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"_":"Clears the list of recently found chats"},"type":{"subclass":"clearRecentlyFoundChats","properties":[],"abstractClass":"Ok"}},{"documentation":{"limit":"The maximum number of chats to be returned","_":"Returns recently opened chats, this is an offline request. Returns chats in the order of last opening "},"type":{"subclass":"getRecentlyOpenedChats","properties":[{"name":"limit","type":"int32"}],"abstractClass":"Chats"}},{"documentation":{"chat_id":"Chat identifier; must be identifier of a supergroup chat, or a channel chat, or a private chat with self, or zero if the chat is being created ","username":"Username to be checked","_":"Checks whether a username can be set for a chat "},"type":{"subclass":"checkChatUsername","properties":[{"name":"chat_id","type":"int53"},{"name":"username","type":"string"}],"abstractClass":"CheckChatUsernameResult"}},{"documentation":{"type":"Type of the public chats to return","_":"Returns a list of public chats of the specified type, owned by the user "},"type":{"subclass":"getCreatedPublicChats","properties":[{"name":"type","type":"PublicChatType"}],"abstractClass":"Chats"}},{"documentation":{"type":"Type of the public chats, for which to check the limit","_":"Checks whether the maximum number of owned public chats has been reached. Returns corresponding error if the limit was reached. The limit can be increased with Telegram Premium "},"type":{"subclass":"checkCreatedPublicChatsLimit","properties":[{"name":"type","type":"PublicChatType"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns a list of basic group and supergroup chats, which can be used as a discussion group for a channel. Returned basic group chats must be first upgraded to supergroups before they can be set as a discussion group. To set a returned supergroup as a discussion group, access to its old messages must be enabled using toggleSupergroupIsAllHistoryAvailable first"},"type":{"subclass":"getSuitableDiscussionChats","properties":[],"abstractClass":"Chats"}},{"documentation":{"_":"Returns a list of recently inactive supergroups and channels. Can be used when user reaches limit on the number of joined supergroups and channels and receives CHANNELS_TOO_MUCH error. Also, the limit can be increased with Telegram Premium"},"type":{"subclass":"getInactiveSupergroupChats","properties":[],"abstractClass":"Chats"}},{"documentation":{"user_id":"User identifier ","offset_chat_id":"Chat identifier starting from which to return chats; use 0 for the first request ","limit":"The maximum number of chats to be returned; up to 100","_":"Returns a list of common group chats with a given user. Chats are sorted by their type and creation date "},"type":{"subclass":"getGroupsInCommon","properties":[{"name":"user_id","type":"int53"},{"name":"offset_chat_id","type":"int53"},{"name":"limit","type":"int32"}],"abstractClass":"Chats"}},{"documentation":{"chat_id":"Chat identifier ","from_message_id":"Identifier of the message starting from which history must be fetched; use 0 to get results from the last message ","offset":"Specify 0 to get results from exactly the from_message_id or a negative offset up to 99 to get additionally some newer messages ","limit":"The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit ","only_local":"Pass true to get only messages that are available without sending network requests","_":"Returns messages in a chat. The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id). -For optimal performance, the number of returned messages is chosen by TDLib. This is an offline request if only_local is true "},"type":{"subclass":"getChatHistory","properties":[{"name":"chat_id","type":"int53"},{"name":"from_message_id","type":"int53"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"},{"name":"only_local","type":"Bool"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier, which thread history needs to be returned ","from_message_id":"Identifier of the message starting from which history must be fetched; use 0 to get results from the last message ","offset":"Specify 0 to get results from exactly the from_message_id or a negative offset up to 99 to get additionally some newer messages ","limit":"The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit","_":"Returns messages in a message thread of a message. Can be used only if message.can_get_message_thread == true. Message thread of a channel message is in the channel's linked supergroup. -The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id). For optimal performance, the number of returned messages is chosen by TDLib "},"type":{"subclass":"getMessageThreadHistory","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"from_message_id","type":"int53"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Chat identifier ","remove_from_chat_list":"Pass true to remove the chat from all chat lists ","revoke":"Pass true to delete chat history for all users","_":"Deletes all messages in the chat. Use chat.can_be_deleted_only_for_self and chat.can_be_deleted_for_all_users fields to find whether and how the method can be applied to the chat "},"type":{"subclass":"deleteChatHistory","properties":[{"name":"chat_id","type":"int53"},{"name":"remove_from_chat_list","type":"Bool"},{"name":"revoke","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Deletes a chat along with all messages in the corresponding chat for all chat members. For group chats this will release the usernames and remove all members. Use the field chat.can_be_deleted_for_all_users to find whether the method can be applied to the chat "},"type":{"subclass":"deleteChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat in which to search messages ","query":"Query to search for ","sender_id":"Identifier of the sender of messages to search for; pass null to search for messages from any sender. Not supported in secret chats ","from_message_id":"Identifier of the message starting from which history must be fetched; use 0 to get results from the last message ","offset":"Specify 0 to get results from exactly the from_message_id or a negative offset to get the specified message and some newer messages ","limit":"The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than -offset. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit ","filter":"Additional filter for messages to search; pass null to search for all messages ","message_thread_id":"If not 0, only messages in the specified thread will be returned; supergroups only","_":"Searches for messages with given words in the chat. Returns the results in reverse chronological order, i.e. in order of decreasing message_id. Cannot be used in secret chats with a non-empty query -(searchSecretMessages must be used instead), or without an enabled message database. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit. -A combination of query, sender_id, filter and message_thread_id search criteria is expected to be supported, only if it is required for Telegram official application implementation "},"type":{"subclass":"searchChatMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"query","type":"string"},{"name":"sender_id","type":"MessageSender"},{"name":"from_message_id","type":"int53"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"},{"name":"filter","type":"SearchMessagesFilter"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"Messages"}},{"documentation":{"chat_list":"Chat list in which to search messages; pass null to search in all chats regardless of their chat list. Only Main and Archive chat lists are supported ","query":"Query to search for ","offset_date":"The date of the message starting from which the results need to be fetched. Use 0 or any date in the future to get results from the last message ","offset_chat_id":"The chat identifier of the last found message, or 0 for the first request ","offset_message_id":"The message identifier of the last found message, or 0 for the first request ","limit":"The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit ","filter":"Additional filter for messages to search; pass null to search for all messages. Filters searchMessagesFilterMention, searchMessagesFilterUnreadMention, searchMessagesFilterUnreadReaction, searchMessagesFilterFailedToSend, and searchMessagesFilterPinned are unsupported in this function ","min_date":"If not 0, the minimum date of the messages to return ","max_date":"If not 0, the maximum date of the messages to return","_":"Searches for messages in all chats except secret chats. Returns the results in reverse chronological order (i.e., in order of decreasing (date, chat_id, message_id)). -For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit "},"type":{"subclass":"searchMessages","properties":[{"name":"chat_list","type":"ChatList"},{"name":"query","type":"string"},{"name":"offset_date","type":"int32"},{"name":"offset_chat_id","type":"int53"},{"name":"offset_message_id","type":"int53"},{"name":"limit","type":"int32"},{"name":"filter","type":"SearchMessagesFilter"},{"name":"min_date","type":"int32"},{"name":"max_date","type":"int32"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Identifier of the chat in which to search. Specify 0 to search in all secret chats ","query":"Query to search for. If empty, searchChatMessages must be used instead ","offset":"Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results ","limit":"The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit ","filter":"Additional filter for messages to search; pass null to search for all messages","_":"Searches for messages in secret chats. Returns the results in reverse chronological order. For optimal performance, the number of returned messages is chosen by TDLib "},"type":{"subclass":"searchSecretMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"query","type":"string"},{"name":"offset","type":"string"},{"name":"limit","type":"int32"},{"name":"filter","type":"SearchMessagesFilter"}],"abstractClass":"FoundMessages"}},{"documentation":{"from_message_id":"Identifier of the message from which to search; use 0 to get results from the last message ","limit":"The maximum number of messages to be returned; up to 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit ","only_missed":"Pass true to search only for messages with missed/declined calls","_":"Searches for call messages. Returns the results in reverse chronological order (i.e., in order of decreasing message_id). For optimal performance, the number of returned messages is chosen by TDLib "},"type":{"subclass":"searchCallMessages","properties":[{"name":"from_message_id","type":"int53"},{"name":"limit","type":"int32"},{"name":"only_missed","type":"Bool"}],"abstractClass":"Messages"}},{"documentation":{"query":"Query to search for in document file name and message caption ","limit":"The maximum number of messages to be returned; up to 100","_":"Searches for outgoing messages with content of the type messageDocument in all chats except secret chats. Returns the results in reverse chronological order "},"type":{"subclass":"searchOutgoingDocumentMessages","properties":[{"name":"query","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"FoundMessages"}},{"documentation":{"revoke":"Pass true to delete the messages for all users","_":"Deletes all call messages "},"type":{"subclass":"deleteAllCallMessages","properties":[{"name":"revoke","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","limit":"The maximum number of messages to be returned","_":"Returns information about the recent locations of chat members that were sent to the chat. Returns up to 1 location message per user "},"type":{"subclass":"searchChatRecentLocationMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"limit","type":"int32"}],"abstractClass":"Messages"}},{"documentation":{"_":"Returns all active live locations that need to be updated by the application. The list is persistent across application restarts only if the message database is used"},"type":{"subclass":"getActiveLiveLocationMessages","properties":[],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Chat identifier ","date":"Point in time (Unix timestamp) relative to which to search for messages","_":"Returns the last message sent in a chat no later than the specified date "},"type":{"subclass":"getChatMessageByDate","properties":[{"name":"chat_id","type":"int53"},{"name":"date","type":"int32"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat in which to return information about message positions ","filter":"Filter for message content. Filters searchMessagesFilterEmpty, searchMessagesFilterMention, searchMessagesFilterUnreadMention, and searchMessagesFilterUnreadReaction are unsupported in this function ","from_message_id":"The message identifier from which to return information about message positions ","limit":"The expected number of message positions to be returned; 50-2000. A smaller number of positions can be returned, if there are not enough appropriate messages","_":"Returns sparse positions of messages of the specified type in the chat to be used for shared media scroll implementation. Returns the results in reverse chronological order (i.e., in order of decreasing message_id). -Cannot be used in secret chats or with searchMessagesFilterFailedToSend filter without an enabled message database "},"type":{"subclass":"getChatSparseMessagePositions","properties":[{"name":"chat_id","type":"int53"},{"name":"filter","type":"SearchMessagesFilter"},{"name":"from_message_id","type":"int53"},{"name":"limit","type":"int32"}],"abstractClass":"MessagePositions"}},{"documentation":{"chat_id":"Identifier of the chat in which to return information about messages ","filter":"Filter for message content. Filters searchMessagesFilterEmpty, searchMessagesFilterMention, searchMessagesFilterUnreadMention, and searchMessagesFilterUnreadReaction are unsupported in this function ","from_message_id":"The message identifier from which to return information about messages; use 0 to get results from the last message","_":"Returns information about the next messages of the specified type in the chat split by days. Returns the results in reverse chronological order. Can return partial result for the last returned day. Behavior of this method depends on the value of the option \"utc_time_offset\" "},"type":{"subclass":"getChatMessageCalendar","properties":[{"name":"chat_id","type":"int53"},{"name":"filter","type":"SearchMessagesFilter"},{"name":"from_message_id","type":"int53"}],"abstractClass":"MessageCalendar"}},{"documentation":{"chat_id":"Identifier of the chat in which to count messages ","filter":"Filter for message content; searchMessagesFilterEmpty is unsupported in this function ","return_local":"Pass true to get the number of messages without sending network requests, or -1 if the number of messages is unknown locally","_":"Returns approximate number of messages of the specified type in the chat "},"type":{"subclass":"getChatMessageCount","properties":[{"name":"chat_id","type":"int53"},{"name":"filter","type":"SearchMessagesFilter"},{"name":"return_local","type":"Bool"}],"abstractClass":"Count"}},{"documentation":{"chat_id":"Identifier of the chat in which to find message position ","message_id":"Message identifier ","filter":"Filter for message content; searchMessagesFilterEmpty, searchMessagesFilterUnreadMention, searchMessagesFilterUnreadReaction, and searchMessagesFilterFailedToSend are unsupported in this function ","message_thread_id":"If not 0, only messages in the specified thread will be considered; supergroups only","_":"Returns approximate 1-based position of a message among messages, which can be found by the specified filter in the chat. Cannot be used in secret chats "},"type":{"subclass":"getChatMessagePosition","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"filter","type":"SearchMessagesFilter"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"Count"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns all scheduled messages in a chat. The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id) "},"type":{"subclass":"getChatScheduledMessages","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Chat identifier of the message ","message_id":"Message identifier ","offset":"Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results ","limit":"The maximum number of messages to be returned; must be positive and can't be greater than 100. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit","_":"Returns forwarded copies of a channel message to different public channels. For optimal performance, the number of returned messages is chosen by TDLib "},"type":{"subclass":"getMessagePublicForwards","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"offset","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"FoundMessages"}},{"documentation":{"chat_id":"Identifier of the chat","_":"Returns sponsored messages to be shown in a chat; for channel chats only "},"type":{"subclass":"getChatSponsoredMessages","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"SponsoredMessages"}},{"documentation":{"notification_group_id":"Identifier of notification group to which the notification belongs ","notification_id":"Identifier of removed notification","_":"Removes an active notification from notification list. Needs to be called only if the notification is removed by the current user "},"type":{"subclass":"removeNotification","properties":[{"name":"notification_group_id","type":"int32"},{"name":"notification_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"notification_group_id":"Notification group identifier ","max_notification_id":"The maximum identifier of removed notifications","_":"Removes a group of active notifications. Needs to be called only if the notification group is removed by the current user "},"type":{"subclass":"removeNotificationGroup","properties":[{"name":"notification_group_id","type":"int32"},{"name":"max_notification_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","media_timestamp":"If not 0, timestamp from which the video/audio/video note/voice note playing must start, in seconds. The media can be in the message content or in its web page preview ","for_album":"Pass true to create a link for the whole media album ","in_message_thread":"Pass true to create a link to the message as a channel post comment, in a message thread, or a forum topic","_":"Returns an HTTPS link to a message in a chat. Available only for already sent messages in supergroups and channels, or if message.can_get_media_timestamp_links and a media timestamp link is generated. This is an offline request "},"type":{"subclass":"getMessageLink","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"media_timestamp","type":"int32"},{"name":"for_album","type":"Bool"},{"name":"in_message_thread","type":"Bool"}],"abstractClass":"MessageLink"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","for_album":"Pass true to return an HTML code for embedding of the whole media album","_":"Returns an HTML code for embedding the message. Available only for messages in supergroups and channels with a username "},"type":{"subclass":"getMessageEmbeddingCode","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"for_album","type":"Bool"}],"abstractClass":"Text"}},{"documentation":{"url":"The message link","_":"Returns information about a public or private message link. Can be called for any internal link of the type internalLinkTypeMessage "},"type":{"subclass":"getMessageLinkInfo","properties":[{"name":"url","type":"string"}],"abstractClass":"MessageLinkInfo"}},{"documentation":{"text":"Text to translate ","from_language_code":"A two-letter ISO 639-1 language code of the language from which the message is translated. If empty, the language will be detected automatically ","to_language_code":"A two-letter ISO 639-1 language code of the language to which the message is translated","_":"Translates a text to the given language. Returns a 404 error if the translation can't be performed "},"type":{"subclass":"translateText","properties":[{"name":"text","type":"string"},{"name":"from_language_code","type":"string"},{"name":"to_language_code","type":"string"}],"abstractClass":"Text"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message","_":"Recognizes speech in a video note or a voice note message. The message must be successfully sent and must not be scheduled. May return an error with a message \"MSG_VOICE_TOO_LONG\" if media duration is too big to be recognized "},"type":{"subclass":"recognizeSpeech","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","is_good":"Pass true if the speech recognition is good","_":"Rates recognized speech in a video note or a voice note message "},"type":{"subclass":"rateSpeechRecognition","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"is_good","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns list of message sender identifiers, which can be used to send messages in a chat "},"type":{"subclass":"getChatAvailableMessageSenders","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"ChatMessageSenders"}},{"documentation":{"chat_id":"Chat identifier ","message_sender_id":"New message sender for the chat","_":"Selects a message sender to send messages in a chat "},"type":{"subclass":"setChatMessageSender","properties":[{"name":"chat_id","type":"int53"},{"name":"message_sender_id","type":"MessageSender"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Target chat ","message_thread_id":"If not 0, a message thread identifier in which the message will be sent ","reply_to_message_id":"Identifier of the replied message; 0 if none ","options":"Options to be used to send the message; pass null to use default options ","reply_markup":"Markup for replying to the message; pass null if none; for bots only ","input_message_content":"The content of the message to be sent","_":"Sends a message. Returns the sent message "},"type":{"subclass":"sendMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"reply_to_message_id","type":"int53"},{"name":"options","type":"messageSendOptions"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Target chat ","message_thread_id":"If not 0, a message thread identifier in which the messages will be sent ","reply_to_message_id":"Identifier of a replied message; 0 if none ","options":"Options to be used to send the messages; pass null to use default options ","input_message_contents":"Contents of messages to be sent. At most 10 messages can be added to an album ","only_preview":"Pass true to get fake messages instead of actually sending them","_":"Sends 2-10 messages grouped together into an album. Currently, only audio, document, photo and video messages can be grouped into an album. Documents and audio files can be only grouped in an album with messages of the same type. Returns sent messages "},"type":{"subclass":"sendMessageAlbum","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"reply_to_message_id","type":"int53"},{"name":"options","type":"messageSendOptions"},{"name":"input_message_contents","type":"vector<InputMessageContent>"},{"name":"only_preview","type":"Bool"}],"abstractClass":"Messages"}},{"documentation":{"bot_user_id":"Identifier of the bot ","chat_id":"Identifier of the target chat ","parameter":"A hidden parameter sent to the bot for deep linking purposes (https://core.telegram.org/bots#deep-linking)","_":"Invites a bot to a chat (if it is not yet a member) and sends it the /start command. Bots can't be invited to a private chat other than the chat with the bot. Bots can't be invited to channels (although they can be added as admins) and secret chats. Returns the sent message "},"type":{"subclass":"sendBotStartMessage","properties":[{"name":"bot_user_id","type":"int53"},{"name":"chat_id","type":"int53"},{"name":"parameter","type":"string"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Target chat ","message_thread_id":"If not 0, a message thread identifier in which the message will be sent ","reply_to_message_id":"Identifier of a replied message; 0 if none ","options":"Options to be used to send the message; pass null to use default options ","query_id":"Identifier of the inline query ","result_id":"Identifier of the inline result ","hide_via_bot":"Pass true to hide the bot, via which the message is sent. Can be used only for bots getOption(\"animation_search_bot_username\"), getOption(\"photo_search_bot_username\"), and getOption(\"venue_search_bot_username\")","_":"Sends the result of an inline query as a message. Returns the sent message. Always clears a chat draft message "},"type":{"subclass":"sendInlineQueryResultMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"reply_to_message_id","type":"int53"},{"name":"options","type":"messageSendOptions"},{"name":"query_id","type":"int64"},{"name":"result_id","type":"string"},{"name":"hide_via_bot","type":"Bool"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Identifier of the chat to which to forward messages ","message_thread_id":"If not 0, a message thread identifier in which the message will be sent; for forum threads only ","from_chat_id":"Identifier of the chat from which to forward messages ","message_ids":"Identifiers of the messages to forward. Message identifiers must be in a strictly increasing order. At most 100 messages can be forwarded simultaneously ","options":"Options to be used to send the messages; pass null to use default options ","send_copy":"Pass true to copy content of the messages without reference to the original sender. Always true if the messages are forwarded to a secret chat or are local ","remove_caption":"Pass true to remove media captions of message copies. Ignored if send_copy is false ","only_preview":"Pass true to get fake messages instead of actually forwarding them","_":"Forwards previously sent messages. Returns the forwarded messages in the same order as the message identifiers passed in message_ids. If a message can't be forwarded, null will be returned instead of the message "},"type":{"subclass":"forwardMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"from_chat_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"},{"name":"options","type":"messageSendOptions"},{"name":"send_copy","type":"Bool"},{"name":"remove_caption","type":"Bool"},{"name":"only_preview","type":"Bool"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Identifier of the chat to send messages ","message_ids":"Identifiers of the messages to resend. Message identifiers must be in a strictly increasing order","_":"Resends messages which failed to send. Can be called only for messages for which messageSendingStateFailed.can_retry is true and after specified in messageSendingStateFailed.retry_after time passed. -If a message is re-sent, the corresponding failed to send message is deleted. Returns the sent messages in the same order as the message identifiers passed in message_ids. If a message can't be re-sent, null will be returned instead of the message "},"type":{"subclass":"resendMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"}],"abstractClass":"Messages"}},{"documentation":{"chat_id":"Chat identifier","_":"Sends a notification about a screenshot taken in a chat. Supported only in private and secret chats "},"type":{"subclass":"sendChatScreenshotTakenNotification","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Target chat ","sender_id":"Identifier of the sender of the message ","reply_to_message_id":"Identifier of the replied message; 0 if none ","disable_notification":"Pass true to disable notification for the message ","input_message_content":"The content of the message to be added","_":"Adds a local message to a chat. The message is persistent across application restarts only if the message database is used. Returns the added message "},"type":{"subclass":"addLocalMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"sender_id","type":"MessageSender"},{"name":"reply_to_message_id","type":"int53"},{"name":"disable_notification","type":"Bool"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"Chat identifier ","message_ids":"Identifiers of the messages to be deleted ","revoke":"Pass true to delete messages for all chat members. Always true for supergroups, channels and secret chats","_":"Deletes messages "},"type":{"subclass":"deleteMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"},{"name":"revoke","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","sender_id":"Identifier of the sender of messages to delete","_":"Deletes all messages sent by the specified message sender in a chat. Supported only for supergroups; requires can_delete_messages administrator privileges "},"type":{"subclass":"deleteChatMessagesBySender","properties":[{"name":"chat_id","type":"int53"},{"name":"sender_id","type":"MessageSender"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","min_date":"The minimum date of the messages to delete ","max_date":"The maximum date of the messages to delete ","revoke":"Pass true to delete chat messages for all users; private chats only","_":"Deletes all messages between the specified dates in a chat. Supported only for private chats and basic groups. Messages sent in the last 30 seconds will not be deleted "},"type":{"subclass":"deleteChatMessagesByDate","properties":[{"name":"chat_id","type":"int53"},{"name":"min_date","type":"int32"},{"name":"max_date","type":"int32"},{"name":"revoke","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"The chat the message belongs to ","message_id":"Identifier of the message ","reply_markup":"The new message reply markup; pass null if none; for bots only ","input_message_content":"New text content of the message. Must be of type inputMessageText","_":"Edits the text of a message (or a text of a game message). Returns the edited message after the edit is completed on the server side "},"type":{"subclass":"editMessageText","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"The chat the message belongs to ","message_id":"Identifier of the message ","reply_markup":"The new message reply markup; pass null if none; for bots only ","location":"New location content of the message; pass null to stop sharing the live location ","heading":"The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown ","proximity_alert_radius":"The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled","_":"Edits the message content of a live location. Messages can be edited for a limited period of time specified in the live location. Returns the edited message after the edit is completed on the server side "},"type":{"subclass":"editMessageLiveLocation","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"location","type":"location"},{"name":"heading","type":"int32"},{"name":"proximity_alert_radius","type":"int32"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"The chat the message belongs to ","message_id":"Identifier of the message ","reply_markup":"The new message reply markup; pass null if none; for bots only ","input_message_content":"New content of the message. Must be one of the following types: inputMessageAnimation, inputMessageAudio, inputMessageDocument, inputMessagePhoto or inputMessageVideo","_":"Edits the content of a message with an animation, an audio, a document, a photo or a video, including message caption. If only the caption needs to be edited, use editMessageCaption instead. -The media can't be edited if the message was set to self-destruct or to a self-destructing media. The type of message content in an album can't be changed with exception of replacing a photo with a video or vice versa. Returns the edited message after the edit is completed on the server side "},"type":{"subclass":"editMessageMedia","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"The chat the message belongs to ","message_id":"Identifier of the message ","reply_markup":"The new message reply markup; pass null if none; for bots only ","caption":"New message content caption; 0-getOption(\"message_caption_length_max\") characters; pass null to remove caption","_":"Edits the message content caption. Returns the edited message after the edit is completed on the server side "},"type":{"subclass":"editMessageCaption","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"caption","type":"formattedText"}],"abstractClass":"Message"}},{"documentation":{"chat_id":"The chat the message belongs to ","message_id":"Identifier of the message ","reply_markup":"The new message reply markup; pass null if none","_":"Edits the message reply markup; for bots only. Returns the edited message after the edit is completed on the server side "},"type":{"subclass":"editMessageReplyMarkup","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reply_markup","type":"ReplyMarkup"}],"abstractClass":"Message"}},{"documentation":{"inline_message_id":"Inline message identifier ","reply_markup":"The new message reply markup; pass null if none ","input_message_content":"New text content of the message. Must be of type inputMessageText","_":"Edits the text of an inline text or game message sent via a bot; for bots only "},"type":{"subclass":"editInlineMessageText","properties":[{"name":"inline_message_id","type":"string"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"Ok"}},{"documentation":{"inline_message_id":"Inline message identifier ","reply_markup":"The new message reply markup; pass null if none ","location":"New location content of the message; pass null to stop sharing the live location ","heading":"The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown ","proximity_alert_radius":"The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled","_":"Edits the content of a live location in an inline message sent via a bot; for bots only "},"type":{"subclass":"editInlineMessageLiveLocation","properties":[{"name":"inline_message_id","type":"string"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"location","type":"location"},{"name":"heading","type":"int32"},{"name":"proximity_alert_radius","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"inline_message_id":"Inline message identifier ","reply_markup":"The new message reply markup; pass null if none; for bots only ","input_message_content":"New content of the message. Must be one of the following types: inputMessageAnimation, inputMessageAudio, inputMessageDocument, inputMessagePhoto or inputMessageVideo","_":"Edits the content of a message with an animation, an audio, a document, a photo or a video in an inline message sent via a bot; for bots only "},"type":{"subclass":"editInlineMessageMedia","properties":[{"name":"inline_message_id","type":"string"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"input_message_content","type":"InputMessageContent"}],"abstractClass":"Ok"}},{"documentation":{"inline_message_id":"Inline message identifier ","reply_markup":"The new message reply markup; pass null if none ","caption":"New message content caption; pass null to remove caption; 0-getOption(\"message_caption_length_max\") characters","_":"Edits the caption of an inline message sent via a bot; for bots only "},"type":{"subclass":"editInlineMessageCaption","properties":[{"name":"inline_message_id","type":"string"},{"name":"reply_markup","type":"ReplyMarkup"},{"name":"caption","type":"formattedText"}],"abstractClass":"Ok"}},{"documentation":{"inline_message_id":"Inline message identifier ","reply_markup":"The new message reply markup; pass null if none","_":"Edits the reply markup of an inline message sent via a bot; for bots only "},"type":{"subclass":"editInlineMessageReplyMarkup","properties":[{"name":"inline_message_id","type":"string"},{"name":"reply_markup","type":"ReplyMarkup"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"The chat the message belongs to ","message_id":"Identifier of the message ","scheduling_state":"The new message scheduling state; pass null to send the message immediately","_":"Edits the time when a scheduled message will be sent. Scheduling state of all messages in the same album or forwarded together with the message will be also changed "},"type":{"subclass":"editMessageSchedulingState","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"scheduling_state","type":"MessageSchedulingState"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns list of custom emojis, which can be used as forum topic icon by all users"},"type":{"subclass":"getForumTopicDefaultIcons","properties":[],"abstractClass":"Stickers"}},{"documentation":{"chat_id":"Identifier of the chat ","name":"Name of the topic; 1-128 characters ","icon":"Icon of the topic. Icon color must be one of 0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, or 0xFB6F5F. Telegram Premium users can use any custom emoji as topic icon, other users can use only a custom emoji returned by getForumTopicDefaultIcons","_":"Creates a topic in a forum supergroup chat; requires can_manage_topics rights in the supergroup "},"type":{"subclass":"createForumTopic","properties":[{"name":"chat_id","type":"int53"},{"name":"name","type":"string"},{"name":"icon","type":"forumTopicIcon"}],"abstractClass":"ForumTopicInfo"}},{"documentation":{"chat_id":"Identifier of the chat ","message_thread_id":"Message thread identifier of the forum topic ","name":"New name of the topic; 0-128 characters. If empty, the previous topic name is kept ","edit_icon_custom_emoji":"Pass true to edit the icon of the topic. Icon of the General topic can't be edited ","icon_custom_emoji_id":"Identifier of the new custom emoji for topic icon; pass 0 to remove the custom emoji. Ignored if edit_icon_custom_emoji is false. Telegram Premium users can use any custom emoji, other users can use only a custom emoji returned by getForumTopicDefaultIcons","_":"Edits title and icon of a topic in a forum supergroup chat; requires can_manage_topics administrator rights in the supergroup unless the user is creator of the topic "},"type":{"subclass":"editForumTopic","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"name","type":"string"},{"name":"edit_icon_custom_emoji","type":"Bool"},{"name":"icon_custom_emoji_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","message_thread_id":"Message thread identifier of the forum topic","_":"Returns information about a forum topic "},"type":{"subclass":"getForumTopic","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"ForumTopic"}},{"documentation":{"chat_id":"Identifier of the chat ","message_thread_id":"Message thread identifier of the forum topic","_":"Returns an HTTPS link to a topic in a forum chat. This is an offline request "},"type":{"subclass":"getForumTopicLink","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"HttpUrl"}},{"documentation":{"chat_id":"Identifier of the forum chat ","query":"Query to search for in the forum topic's name ","offset_date":"The date starting from which the results need to be fetched. Use 0 or any date in the future to get results from the last topic ","offset_message_id":"The message identifier of the last message in the last found topic, or 0 for the first request ","offset_message_thread_id":"The message thread identifier of the last found topic, or 0 for the first request ","limit":"The maximum number of forum topics to be returned; up to 100. For optimal performance, the number of returned forum topics is chosen by TDLib and can be smaller than the specified limit","_":"Returns found forum topics in a forum chat. This is a temporary method for getting information about topic list from the server "},"type":{"subclass":"getForumTopics","properties":[{"name":"chat_id","type":"int53"},{"name":"query","type":"string"},{"name":"offset_date","type":"int32"},{"name":"offset_message_id","type":"int53"},{"name":"offset_message_thread_id","type":"int53"},{"name":"limit","type":"int32"}],"abstractClass":"ForumTopics"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"Message thread identifier of the forum topic ","notification_settings":"New notification settings for the forum topic. If the topic is muted for more than 366 days, it is considered to be muted forever","_":"Changes the notification settings of a forum topic "},"type":{"subclass":"setForumTopicNotificationSettings","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"notification_settings","type":"chatNotificationSettings"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","message_thread_id":"Message thread identifier of the forum topic ","is_closed":"Pass true to close the topic; pass false to reopen it","_":"Toggles whether a topic is closed in a forum supergroup chat; requires can_manage_topics administrator rights in the supergroup unless the user is creator of the topic "},"type":{"subclass":"toggleForumTopicIsClosed","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"is_closed","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","is_hidden":"Pass true to hide and close the General topic; pass false to unhide it","_":"Toggles whether a General topic is hidden in a forum supergroup chat; requires can_manage_topics administrator rights in the supergroup "},"type":{"subclass":"toggleGeneralForumTopicIsHidden","properties":[{"name":"chat_id","type":"int53"},{"name":"is_hidden","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","message_thread_id":"Message thread identifier of the forum topic","_":"Deletes all messages in a forum topic; requires can_delete_messages administrator rights in the supergroup unless the user is creator of the topic, the topic has no messages from other users and has at most 11 messages "},"type":{"subclass":"deleteForumTopic","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"emoji":"Text representation of the reaction","_":"Returns information about a emoji reaction. Returns a 404 error if the reaction is not found "},"type":{"subclass":"getEmojiReaction","properties":[{"name":"emoji","type":"string"}],"abstractClass":"EmojiReaction"}},{"documentation":{"_":"Returns TGS stickers with generic animations for custom emoji reactions"},"type":{"subclass":"getCustomEmojiReactionAnimations","properties":[],"abstractClass":"Stickers"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","row_size":"Number of reaction per row, 5-25","_":"Returns reactions, which can be added to a message. The list can change after updateActiveEmojiReactions, updateChatAvailableReactions for the chat, or updateMessageInteractionInfo for the message "},"type":{"subclass":"getMessageAvailableReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"row_size","type":"int32"}],"abstractClass":"AvailableReactions"}},{"documentation":{"_":"Clears the list of recently used reactions"},"type":{"subclass":"clearRecentReactions","properties":[],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","reaction_type":"Type of the reaction to add ","is_big":"Pass true if the reaction is added with a big animation ","update_recent_reactions":"Pass true if the reaction needs to be added to recent reactions","_":"Adds a reaction to a message. Use getMessageAvailableReactions to receive the list of available reactions for the message "},"type":{"subclass":"addMessageReaction","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reaction_type","type":"ReactionType"},{"name":"is_big","type":"Bool"},{"name":"update_recent_reactions","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","reaction_type":"Type of the reaction to remove","_":"Removes a reaction from a message. A chosen reaction can always be removed "},"type":{"subclass":"removeMessageReaction","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reaction_type","type":"ReactionType"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to which the message belongs ","message_id":"Identifier of the message ","reaction_type":"Type of the reactions to return; pass null to return all added reactions ","offset":"Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results ","limit":"The maximum number of reactions to be returned; must be positive and can't be greater than 100","_":"Returns reactions added for a message, along with their sender "},"type":{"subclass":"getMessageAddedReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reaction_type","type":"ReactionType"},{"name":"offset","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"AddedReactions"}},{"documentation":{"reaction_type":"New type of the default reaction","_":"Changes type of default reaction for the current user "},"type":{"subclass":"setDefaultReactionType","properties":[{"name":"reaction_type","type":"ReactionType"}],"abstractClass":"Ok"}},{"documentation":{"text":"The text in which to look for entites","_":"Returns all entities (mentions, hashtags, cashtags, bot commands, bank card numbers, URLs, and email addresses) found in the text. Can be called synchronously "},"type":{"subclass":"getTextEntities","properties":[{"name":"text","type":"string"}],"abstractClass":"TextEntities"}},{"documentation":{"text":"The text to parse ","parse_mode":"Text parse mode","_":"Parses Bold, Italic, Underline, Strikethrough, Spoiler, CustomEmoji, Code, Pre, PreCode, TextUrl and MentionName entities from a marked-up text. Can be called synchronously "},"type":{"subclass":"parseTextEntities","properties":[{"name":"text","type":"string"},{"name":"parse_mode","type":"TextParseMode"}],"abstractClass":"FormattedText"}},{"documentation":{"text":"The text to parse. For example, \"__italic__ ~~strikethrough~~ ||spoiler|| **bold** `code` ```pre``` __[italic__ text_url](telegram.org) __italic**bold italic__bold**\"","_":"Parses Markdown entities in a human-friendly format, ignoring markup errors. Can be called synchronously "},"type":{"subclass":"parseMarkdown","properties":[{"name":"text","type":"formattedText"}],"abstractClass":"FormattedText"}},{"documentation":{"text":"The text","_":"Replaces text entities with Markdown formatting in a human-friendly format. Entities that can't be represented in Markdown unambiguously are kept as is. Can be called synchronously "},"type":{"subclass":"getMarkdownText","properties":[{"name":"text","type":"formattedText"}],"abstractClass":"FormattedText"}},{"documentation":{"file_name":"The name of the file or path to the file","_":"Returns the MIME type of a file, guessed by its extension. Returns an empty string on failure. Can be called synchronously "},"type":{"subclass":"getFileMimeType","properties":[{"name":"file_name","type":"string"}],"abstractClass":"Text"}},{"documentation":{"mime_type":"The MIME type of the file","_":"Returns the extension of a file, guessed by its MIME type. Returns an empty string on failure. Can be called synchronously "},"type":{"subclass":"getFileExtension","properties":[{"name":"mime_type","type":"string"}],"abstractClass":"Text"}},{"documentation":{"file_name":"File name or path to the file","_":"Removes potentially dangerous characters from the name of a file. The encoding of the file name is supposed to be UTF-8. Returns an empty string on failure. Can be called synchronously "},"type":{"subclass":"cleanFileName","properties":[{"name":"file_name","type":"string"}],"abstractClass":"Text"}},{"documentation":{"language_pack_database_path":"Path to the language pack database in which strings are stored ","localization_target":"Localization target to which the language pack belongs ","language_pack_id":"Language pack identifier ","key":"Language pack key of the string to be returned","_":"Returns a string stored in the local database from the specified localization target and language pack by its key. Returns a 404 error if the string is not found. Can be called synchronously "},"type":{"subclass":"getLanguagePackString","properties":[{"name":"language_pack_database_path","type":"string"},{"name":"localization_target","type":"string"},{"name":"language_pack_id","type":"string"},{"name":"key","type":"string"}],"abstractClass":"LanguagePackStringValue"}},{"documentation":{"json":"The JSON-serialized string","_":"Converts a JSON-serialized string to corresponding JsonValue object. Can be called synchronously "},"type":{"subclass":"getJsonValue","properties":[{"name":"json","type":"string"}],"abstractClass":"JsonValue"}},{"documentation":{"json_value":"The JsonValue object","_":"Converts a JsonValue object to corresponding JSON-serialized string. Can be called synchronously "},"type":{"subclass":"getJsonString","properties":[{"name":"json_value","type":"JsonValue"}],"abstractClass":"Text"}},{"documentation":{"theme":"Theme parameters to convert to JSON","_":"Converts a themeParameters object to corresponding JSON-serialized string. Can be called synchronously "},"type":{"subclass":"getThemeParametersJsonString","properties":[{"name":"theme","type":"themeParameters"}],"abstractClass":"Text"}},{"documentation":{"chat_id":"Identifier of the chat to which the poll belongs ","message_id":"Identifier of the message containing the poll ","option_ids":"0-based identifiers of answer options, chosen by the user. User can choose more than 1 answer option only is the poll allows multiple answers","_":"Changes the user answer to a poll. A poll in quiz mode can be answered only once "},"type":{"subclass":"setPollAnswer","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"option_ids","type":"vector<int32>"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat to which the poll belongs ","message_id":"Identifier of the message containing the poll ","option_id":"0-based identifier of the answer option ","offset":"Number of users to skip in the result; must be non-negative ","limit":"The maximum number of users to be returned; must be positive and can't be greater than 50. For optimal performance, the number of returned users is chosen by TDLib and can be smaller than the specified limit, even if the end of the voter list has not been reached","_":"Returns users voted for the specified option in a non-anonymous polls. For optimal performance, the number of returned users is chosen by TDLib "},"type":{"subclass":"getPollVoters","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"option_id","type":"int32"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"Users"}},{"documentation":{"chat_id":"Identifier of the chat to which the poll belongs ","message_id":"Identifier of the message containing the poll ","reply_markup":"The new message reply markup; pass null if none; for bots only","_":"Stops a poll. A poll in a message can be stopped when the message has can_be_edited flag set "},"type":{"subclass":"stopPoll","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"reply_markup","type":"ReplyMarkup"}],"abstractClass":"Ok"}},{"documentation":{"action":"Suggested action to hide","_":"Hides a suggested action "},"type":{"subclass":"hideSuggestedAction","properties":[{"name":"action","type":"SuggestedAction"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier of the message with the button ","message_id":"Message identifier of the message with the button ","button_id":"Button identifier","_":"Returns information about a button of type inlineKeyboardButtonTypeLoginUrl. The method needs to be called when the user presses the button "},"type":{"subclass":"getLoginUrlInfo","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"button_id","type":"int53"}],"abstractClass":"LoginUrlInfo"}},{"documentation":{"chat_id":"Chat identifier of the message with the button ","message_id":"Message identifier of the message with the button ","button_id":"Button identifier ","allow_write_access":"Pass true to allow the bot to send messages to the current user","_":"Returns an HTTP URL which can be used to automatically authorize the user on a website after clicking an inline button of type inlineKeyboardButtonTypeLoginUrl. -Use the method getLoginUrlInfo to find whether a prior user confirmation is needed. If an error is returned, then the button must be handled as an ordinary URL button "},"type":{"subclass":"getLoginUrl","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"button_id","type":"int53"},{"name":"allow_write_access","type":"Bool"}],"abstractClass":"HttpUrl"}},{"documentation":{"bot_user_id":"The identifier of the target bot ","chat_id":"Identifier of the chat where the query was sent ","user_location":"Location of the user; pass null if unknown or the bot doesn't need user's location ","query":"Text of the query ","offset":"Offset of the first entry to return","_":"Sends an inline query to a bot and returns its results. Returns an error with code 502 if the bot fails to answer the query before the query timeout expires "},"type":{"subclass":"getInlineQueryResults","properties":[{"name":"bot_user_id","type":"int53"},{"name":"chat_id","type":"int53"},{"name":"user_location","type":"location"},{"name":"query","type":"string"},{"name":"offset","type":"string"}],"abstractClass":"InlineQueryResults"}},{"documentation":{"inline_query_id":"Identifier of the inline query ","is_personal":"Pass true if results may be cached and returned only for the user that sent the query. By default, results may be returned to any user who sends the same query ","results":"The results of the query ","cache_time":"Allowed time to cache the results of the query, in seconds ","next_offset":"Offset for the next inline query; pass an empty string if there are no more results ","switch_pm_text":"If non-empty, this text must be shown on the button that opens a private chat with the bot and sends a start message to the bot with the parameter switch_pm_parameter ","switch_pm_parameter":"The parameter for the bot start message","_":"Sets the result of an inline query; for bots only "},"type":{"subclass":"answerInlineQuery","properties":[{"name":"inline_query_id","type":"int64"},{"name":"is_personal","type":"Bool"},{"name":"results","type":"vector<InputInlineQueryResult>"},{"name":"cache_time","type":"int32"},{"name":"next_offset","type":"string"},{"name":"switch_pm_text","type":"string"},{"name":"switch_pm_parameter","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"bot_user_id":"Identifier of the target bot ","url":"The URL from the keyboardButtonTypeWebApp button ","theme":"Preferred Web App theme; pass null to use the default theme ","application_name":"Short name of the application; 0-64 English letters, digits, and underscores","_":"Returns an HTTPS URL of a Web App to open after keyboardButtonTypeWebApp button is pressed "},"type":{"subclass":"getWebAppUrl","properties":[{"name":"bot_user_id","type":"int53"},{"name":"url","type":"string"},{"name":"theme","type":"themeParameters"},{"name":"application_name","type":"string"}],"abstractClass":"HttpUrl"}},{"documentation":{"bot_user_id":"Identifier of the target bot ","button_text":"Text of the keyboardButtonTypeWebApp button, which opened the Web App ","data":"Received data","_":"Sends data received from a keyboardButtonTypeWebApp Web App to a bot "},"type":{"subclass":"sendWebAppData","properties":[{"name":"bot_user_id","type":"int53"},{"name":"button_text","type":"string"},{"name":"data","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat in which the Web App is opened ","bot_user_id":"Identifier of the bot, providing the Web App ","url":"The URL from an inlineKeyboardButtonTypeWebApp button, a botMenuButton button, or an internalLinkTypeAttachmentMenuBot link, or an empty string otherwise ","theme":"Preferred Web App theme; pass null to use the default theme ","application_name":"Short name of the application; 0-64 English letters, digits, and underscores ","message_thread_id":"If not 0, a message thread identifier in which the message will be sent ","reply_to_message_id":"Identifier of the replied message for the message sent by the Web App; 0 if none","_":"Informs TDLib that a Web App is being opened from attachment menu, a botMenuButton button, an internalLinkTypeAttachmentMenuBot link, or an inlineKeyboardButtonTypeWebApp button. -For each bot, a confirmation alert about data sent to the bot must be shown once "},"type":{"subclass":"openWebApp","properties":[{"name":"chat_id","type":"int53"},{"name":"bot_user_id","type":"int53"},{"name":"url","type":"string"},{"name":"theme","type":"themeParameters"},{"name":"application_name","type":"string"},{"name":"message_thread_id","type":"int53"},{"name":"reply_to_message_id","type":"int53"}],"abstractClass":"WebAppInfo"}},{"documentation":{"web_app_launch_id":"Identifier of Web App launch, received from openWebApp","_":"Informs TDLib that a previously opened Web App was closed "},"type":{"subclass":"closeWebApp","properties":[{"name":"web_app_launch_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"web_app_query_id":"Identifier of the Web App query ","result":"The result of the query","_":"Sets the result of interaction with a Web App and sends corresponding message on behalf of the user to the chat from which the query originated; for bots only "},"type":{"subclass":"answerWebAppQuery","properties":[{"name":"web_app_query_id","type":"string"},{"name":"result","type":"InputInlineQueryResult"}],"abstractClass":"SentWebAppMessage"}},{"documentation":{"chat_id":"Identifier of the chat with the message ","message_id":"Identifier of the message from which the query originated ","payload":"Query payload","_":"Sends a callback query to a bot and returns an answer. Returns an error with code 502 if the bot fails to answer the query before the query timeout expires "},"type":{"subclass":"getCallbackQueryAnswer","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"payload","type":"CallbackQueryPayload"}],"abstractClass":"CallbackQueryAnswer"}},{"documentation":{"callback_query_id":"Identifier of the callback query ","text":"Text of the answer ","show_alert":"Pass true to show an alert to the user instead of a toast notification ","url":"URL to be opened ","cache_time":"Time during which the result of the query can be cached, in seconds","_":"Sets the result of a callback query; for bots only "},"type":{"subclass":"answerCallbackQuery","properties":[{"name":"callback_query_id","type":"int64"},{"name":"text","type":"string"},{"name":"show_alert","type":"Bool"},{"name":"url","type":"string"},{"name":"cache_time","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"shipping_query_id":"Identifier of the shipping query ","shipping_options":"Available shipping options ","error_message":"An error message, empty on success","_":"Sets the result of a shipping query; for bots only "},"type":{"subclass":"answerShippingQuery","properties":[{"name":"shipping_query_id","type":"int64"},{"name":"shipping_options","type":"vector<shippingOption>"},{"name":"error_message","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"pre_checkout_query_id":"Identifier of the pre-checkout query ","error_message":"An error message, empty on success","_":"Sets the result of a pre-checkout query; for bots only "},"type":{"subclass":"answerPreCheckoutQuery","properties":[{"name":"pre_checkout_query_id","type":"int64"},{"name":"error_message","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"The chat to which the message with the game belongs ","message_id":"Identifier of the message ","edit_message":"Pass true to edit the game message to include the current scoreboard ","user_id":"User identifier ","score":"The new score ","force":"Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table","_":"Updates the game score of the specified user in the game; for bots only "},"type":{"subclass":"setGameScore","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"edit_message","type":"Bool"},{"name":"user_id","type":"int53"},{"name":"score","type":"int32"},{"name":"force","type":"Bool"}],"abstractClass":"Message"}},{"documentation":{"inline_message_id":"Inline message identifier ","edit_message":"Pass true to edit the game message to include the current scoreboard ","user_id":"User identifier ","score":"The new score ","force":"Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table","_":"Updates the game score of the specified user in a game; for bots only "},"type":{"subclass":"setInlineGameScore","properties":[{"name":"inline_message_id","type":"string"},{"name":"edit_message","type":"Bool"},{"name":"user_id","type":"int53"},{"name":"score","type":"int32"},{"name":"force","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"The chat that contains the message with the game ","message_id":"Identifier of the message ","user_id":"User identifier","_":"Returns the high scores for a game and some part of the high score table in the range of the specified user; for bots only "},"type":{"subclass":"getGameHighScores","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"user_id","type":"int53"}],"abstractClass":"GameHighScores"}},{"documentation":{"inline_message_id":"Inline message identifier ","user_id":"User identifier","_":"Returns game high scores and some part of the high score table in the range of the specified user; for bots only "},"type":{"subclass":"getInlineGameHighScores","properties":[{"name":"inline_message_id","type":"string"},{"name":"user_id","type":"int53"}],"abstractClass":"GameHighScores"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"The message identifier of the used keyboard","_":"Deletes the default reply markup from a chat. Must be called after a one-time keyboard or a replyMarkupForceReply reply markup has been used. An updateChatReplyMarkup update will be sent if the reply markup is changed "},"type":{"subclass":"deleteChatReplyMarkup","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"If not 0, a message thread identifier in which the action was performed ","action":"The action description; pass null to cancel the currently active action","_":"Sends a notification about user activity in a chat "},"type":{"subclass":"sendChatAction","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"action","type":"ChatAction"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Informs TDLib that the chat is opened by the user. Many useful activities depend on the chat being opened or closed (e.g., in supergroups and channels all updates are received only for opened chats) "},"type":{"subclass":"openChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Informs TDLib that the chat is closed by the user. Many useful activities depend on the chat being opened or closed "},"type":{"subclass":"closeChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"If not 0, a message thread identifier in which the messages are being viewed ","message_ids":"The identifiers of the messages being viewed ","force_read":"Pass true to mark as read the specified messages even the chat is closed","_":"Informs TDLib that messages are being viewed by the user. Sponsored messages must be marked as viewed only when the entire text of the message is shown on the screen (excluding the button). Many useful activities depend on whether the messages are currently being viewed or not (e.g., marking messages as read, incrementing a view counter, updating a view counter, removing deleted messages in supergroups and channels) "},"type":{"subclass":"viewMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"},{"name":"force_read","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier of the message ","message_id":"Identifier of the message with the opened content","_":"Informs TDLib that the message content has been opened (e.g., the user has opened a photo, video, document, location or venue, or has listened to an audio file or voice note message). An updateMessageContentOpened update will be generated if something has changed "},"type":{"subclass":"openMessageContent","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier of the message ","message_id":"Identifier of the clicked message","_":"Informs TDLib that a message with an animated emoji was clicked by the user. Returns a big animated sticker to be played or a 404 error if usual animation needs to be played "},"type":{"subclass":"clickAnimatedEmojiMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Sticker"}},{"documentation":{"link":"The link","_":"Returns information about the type of an internal link. Returns a 404 error if the link is not internal. Can be called before authorization "},"type":{"subclass":"getInternalLinkType","properties":[{"name":"link","type":"string"}],"abstractClass":"InternalLinkType"}},{"documentation":{"link":"The link","_":"Returns information about an action to be done when the current user clicks an external link. Don't use this method for links from secret chats if web page preview is disabled in secret chats "},"type":{"subclass":"getExternalLinkInfo","properties":[{"name":"link","type":"string"}],"abstractClass":"LoginUrlInfo"}},{"documentation":{"link":"The HTTP link ","allow_write_access":"Pass true if the current user allowed the bot, returned in getExternalLinkInfo, to send them messages","_":"Returns an HTTP URL which can be used to automatically authorize the current user on a website after clicking an HTTP link. Use the method getExternalLinkInfo to find whether a prior user confirmation is needed "},"type":{"subclass":"getExternalLink","properties":[{"name":"link","type":"string"},{"name":"allow_write_access","type":"Bool"}],"abstractClass":"HttpUrl"}},{"documentation":{"chat_id":"Chat identifier","_":"Marks all mentions in a chat as read "},"type":{"subclass":"readAllChatMentions","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"Message thread identifier in which mentions are marked as read","_":"Marks all mentions in a forum topic as read "},"type":{"subclass":"readAllMessageThreadMentions","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Marks all reactions in a chat or a forum topic as read "},"type":{"subclass":"readAllChatReactions","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"Message thread identifier in which reactions are marked as read","_":"Marks all reactions in a forum topic as read "},"type":{"subclass":"readAllMessageThreadReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"User identifier ","force":"Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect","_":"Returns an existing chat corresponding to a given user "},"type":{"subclass":"createPrivateChat","properties":[{"name":"user_id","type":"int53"},{"name":"force","type":"Bool"}],"abstractClass":"Chat"}},{"documentation":{"basic_group_id":"Basic group identifier ","force":"Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect","_":"Returns an existing chat corresponding to a known basic group "},"type":{"subclass":"createBasicGroupChat","properties":[{"name":"basic_group_id","type":"int53"},{"name":"force","type":"Bool"}],"abstractClass":"Chat"}},{"documentation":{"supergroup_id":"Supergroup or channel identifier ","force":"Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect","_":"Returns an existing chat corresponding to a known supergroup or channel "},"type":{"subclass":"createSupergroupChat","properties":[{"name":"supergroup_id","type":"int53"},{"name":"force","type":"Bool"}],"abstractClass":"Chat"}},{"documentation":{"secret_chat_id":"Secret chat identifier","_":"Returns an existing chat corresponding to a known secret chat "},"type":{"subclass":"createSecretChat","properties":[{"name":"secret_chat_id","type":"int32"}],"abstractClass":"Chat"}},{"documentation":{"user_ids":"Identifiers of users to be added to the basic group ","title":"Title of the new basic group; 1-128 characters ","message_ttl":"Message TTL value, in seconds; must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically","_":"Creates a new basic group and sends a corresponding messageBasicGroupChatCreate. Returns the newly created chat "},"type":{"subclass":"createNewBasicGroupChat","properties":[{"name":"user_ids","type":"vector<int53>"},{"name":"title","type":"string"},{"name":"message_ttl","type":"int32"}],"abstractClass":"Chat"}},{"documentation":{"description":"Chat description; 0-255 characters ","title":"Title of the new chat; 1-128 characters ","is_channel":"Pass true to create a channel chat ","param_description":"Chat description; 0-255 characters ","location":"Chat location if a location-based supergroup is being created; pass null to create an ordinary supergroup chat ","message_ttl":"Message TTL value, in seconds; must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically ","for_import":"Pass true to create a supergroup for importing messages using importMessage","_":"Creates a new supergroup or channel and sends a corresponding messageSupergroupChatCreate. Returns the newly created chat "},"type":{"subclass":"createNewSupergroupChat","properties":[{"name":"title","type":"string"},{"name":"is_channel","type":"Bool"},{"name":"description","type":"string"},{"name":"location","type":"chatLocation"},{"name":"message_ttl","type":"int32"},{"name":"for_import","type":"Bool"}],"abstractClass":"Chat"}},{"documentation":{"user_id":"Identifier of the target user","_":"Creates a new secret chat. Returns the newly created chat "},"type":{"subclass":"createNewSecretChat","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"Chat"}},{"documentation":{"chat_id":"Identifier of the chat to upgrade","_":"Creates a new supergroup from an existing basic group and sends a corresponding messageChatUpgradeTo and messageChatUpgradeFrom; requires creator privileges. Deactivates the original basic group "},"type":{"subclass":"upgradeBasicGroupChatToSupergroupChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Chat"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns chat lists to which the chat can be added. This is an offline request "},"type":{"subclass":"getChatListsToAddChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"ChatLists"}},{"documentation":{"chat_id":"Chat identifier ","chat_list":"The chat list. Use getChatListsToAddChat to get suitable chat lists","_":"Adds a chat to a chat list. A chat can't be simultaneously in Main and Archive chat lists, so it is automatically removed from another one if needed "},"type":{"subclass":"addChatToList","properties":[{"name":"chat_id","type":"int53"},{"name":"chat_list","type":"ChatList"}],"abstractClass":"Ok"}},{"documentation":{"chat_filter_id":"Chat filter identifier","_":"Returns information about a chat filter by its identifier "},"type":{"subclass":"getChatFilter","properties":[{"name":"chat_filter_id","type":"int32"}],"abstractClass":"ChatFilter"}},{"documentation":{"filter":"Chat filter","_":"Creates new chat filter. Returns information about the created chat filter. There can be up to getOption(\"chat_filter_count_max\") chat filters, but the limit can be increased with Telegram Premium "},"type":{"subclass":"createChatFilter","properties":[{"name":"filter","type":"chatFilter"}],"abstractClass":"ChatFilterInfo"}},{"documentation":{"chat_filter_id":"Chat filter identifier ","filter":"The edited chat filter","_":"Edits existing chat filter. Returns information about the edited chat filter "},"type":{"subclass":"editChatFilter","properties":[{"name":"chat_filter_id","type":"int32"},{"name":"filter","type":"chatFilter"}],"abstractClass":"ChatFilterInfo"}},{"documentation":{"chat_filter_id":"Chat filter identifier","_":"Deletes existing chat filter "},"type":{"subclass":"deleteChatFilter","properties":[{"name":"chat_filter_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_filter_ids":"Identifiers of chat filters in the new correct order ","main_chat_list_position":"Position of the main chat list among chat filters, 0-based. Can be non-zero only for Premium users","_":"Changes the order of chat filters "},"type":{"subclass":"reorderChatFilters","properties":[{"name":"chat_filter_ids","type":"vector<int32>"},{"name":"main_chat_list_position","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns recommended chat filters for the current user"},"type":{"subclass":"getRecommendedChatFilters","properties":[],"abstractClass":"RecommendedChatFilters"}},{"documentation":{"filter":"Chat filter","_":"Returns default icon name for a filter. Can be called synchronously "},"type":{"subclass":"getChatFilterDefaultIconName","properties":[{"name":"filter","type":"chatFilter"}],"abstractClass":"Text"}},{"documentation":{"chat_id":"Chat identifier ","title":"New title of the chat; 1-128 characters","_":"Changes the chat title. Supported only for basic groups, supergroups and channels. Requires can_change_info administrator right "},"type":{"subclass":"setChatTitle","properties":[{"name":"chat_id","type":"int53"},{"name":"title","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","photo":"New chat photo; pass null to delete the chat photo","_":"Changes the photo of a chat. Supported only for basic groups, supergroups and channels. Requires can_change_info administrator right "},"type":{"subclass":"setChatPhoto","properties":[{"name":"chat_id","type":"int53"},{"name":"photo","type":"InputChatPhoto"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","ttl":"New TTL value, in seconds; unless the chat is secret, it must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically","_":"Changes the message TTL in a chat. Requires change_info administrator right in basic groups, supergroups and channels -Message TTL can't be changed in a chat with the current user (Saved Messages) and the chat 777000 (Telegram). "},"type":{"subclass":"setChatMessageTtl","properties":[{"name":"chat_id","type":"int53"},{"name":"ttl","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","permissions":"New non-administrator members permissions in the chat","_":"Changes the chat members permissions. Supported only for basic groups and supergroups. Requires can_restrict_members administrator right "},"type":{"subclass":"setChatPermissions","properties":[{"name":"chat_id","type":"int53"},{"name":"permissions","type":"chatPermissions"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","theme_name":"Name of the new chat theme; pass an empty string to return the default theme","_":"Changes the chat theme. Supported only in private and secret chats "},"type":{"subclass":"setChatTheme","properties":[{"name":"chat_id","type":"int53"},{"name":"theme_name","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_thread_id":"If not 0, a message thread identifier in which the draft was changed ","draft_message":"New draft message; pass null to remove the draft","_":"Changes the draft message in a chat "},"type":{"subclass":"setChatDraftMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"},{"name":"draft_message","type":"draftMessage"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","notification_settings":"New notification settings for the chat. If the chat is muted for more than 366 days, it is considered to be muted forever","_":"Changes the notification settings of a chat. Notification settings of a chat with the current user (Saved Messages) can't be changed "},"type":{"subclass":"setChatNotificationSettings","properties":[{"name":"chat_id","type":"int53"},{"name":"notification_settings","type":"chatNotificationSettings"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","has_protected_content":"New value of has_protected_content","_":"Changes the ability of users to save, forward, or copy chat content. Supported only for basic groups, supergroups and channels. Requires owner privileges "},"type":{"subclass":"toggleChatHasProtectedContent","properties":[{"name":"chat_id","type":"int53"},{"name":"has_protected_content","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","is_marked_as_unread":"New value of is_marked_as_unread","_":"Changes the marked as unread state of a chat "},"type":{"subclass":"toggleChatIsMarkedAsUnread","properties":[{"name":"chat_id","type":"int53"},{"name":"is_marked_as_unread","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","default_disable_notification":"New value of default_disable_notification","_":"Changes the value of the default disable_notification parameter, used when a message is sent to a chat "},"type":{"subclass":"toggleChatDefaultDisableNotification","properties":[{"name":"chat_id","type":"int53"},{"name":"default_disable_notification","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","available_reactions":"Reactions available in the chat. All emoji reactions must be active","_":"Changes reactions, available in a chat. Available for basic groups, supergroups, and channels. Requires can_change_info administrator right "},"type":{"subclass":"setChatAvailableReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"available_reactions","type":"ChatAvailableReactions"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","client_data":"New value of client_data","_":"Changes application-specific data associated with a chat "},"type":{"subclass":"setChatClientData","properties":[{"name":"chat_id","type":"int53"},{"name":"client_data","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"description":"New chat description; 0-255 characters","chat_id":"Identifier of the chat ","param_description":"New chat description; 0-255 characters","_":"Changes information about a chat. Available for basic groups, supergroups, and channels. Requires can_change_info administrator right "},"type":{"subclass":"setChatDescription","properties":[{"name":"chat_id","type":"int53"},{"name":"description","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the channel chat. Pass 0 to remove a link from the supergroup passed in the second argument to a linked channel chat (requires can_pin_messages rights in the supergroup) ","discussion_chat_id":"Identifier of a new channel's discussion group. Use 0 to remove the discussion group. -Use the method getSuitableDiscussionChats to find all suitable groups. Basic group chats must be first upgraded to supergroup chats. If new chat members don't have access to old messages in the supergroup, then toggleSupergroupIsAllHistoryAvailable must be used first to change that","_":"Changes the discussion group of a channel chat; requires can_change_info administrator right in the channel if it is specified "},"type":{"subclass":"setChatDiscussionGroup","properties":[{"name":"chat_id","type":"int53"},{"name":"discussion_chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","location":"New location for the chat; must be valid and not null","_":"Changes the location of a chat. Available only for some location-based supergroups, use supergroupFullInfo.can_set_location to check whether the method is allowed to use "},"type":{"subclass":"setChatLocation","properties":[{"name":"chat_id","type":"int53"},{"name":"location","type":"chatLocation"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","slow_mode_delay":"New slow mode delay for the chat, in seconds; must be one of 0, 10, 30, 60, 300, 900, 3600","_":"Changes the slow mode delay of a chat. Available only for supergroups; requires can_restrict_members rights "},"type":{"subclass":"setChatSlowModeDelay","properties":[{"name":"chat_id","type":"int53"},{"name":"slow_mode_delay","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","message_id":"Identifier of the new pinned message ","disable_notification":"Pass true to disable notification about the pinned message. Notifications are always disabled in channels and private chats ","only_for_self":"Pass true to pin the message only for self; private chats only","_":"Pins a message in a chat; requires can_pin_messages rights or can_edit_messages rights in the channel "},"type":{"subclass":"pinChatMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"disable_notification","type":"Bool"},{"name":"only_for_self","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","message_id":"Identifier of the removed pinned message","_":"Removes a pinned message from a chat; requires can_pin_messages rights in the group or can_edit_messages rights in the channel "},"type":{"subclass":"unpinChatMessage","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat","_":"Removes all pinned messages from a chat; requires can_pin_messages rights in the group or can_edit_messages rights in the channel "},"type":{"subclass":"unpinAllChatMessages","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of the chat ","message_thread_id":"Message thread identifier in which messages will be unpinned","_":"Removes all pinned messages from a forum topic; requires can_pin_messages rights in the supergroup "},"type":{"subclass":"unpinAllMessageThreadMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_thread_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Adds the current user as a new member to a chat. Private and secret chats can't be joined using this method. May return an error with a message \"INVITE_REQUEST_SENT\" if only a join request was created "},"type":{"subclass":"joinChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Removes the current user from chat members. Private and secret chats can't be left using this method "},"type":{"subclass":"leaveChat","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","user_id":"Identifier of the user ","forward_limit":"The number of earlier messages from the chat to be forwarded to the new member; up to 100. Ignored for supergroups and channels, or if the added user is a bot","_":"Adds a new member to a chat. Members can't be added to private or secret chats "},"type":{"subclass":"addChatMember","properties":[{"name":"chat_id","type":"int53"},{"name":"user_id","type":"int53"},{"name":"forward_limit","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","user_ids":"Identifiers of the users to be added to the chat. The maximum number of added users is 20 for supergroups and 100 for channels","_":"Adds multiple new members to a chat. Currently, this method is only available for supergroups and channels. This method can't be used to join a chat. Members can't be added to a channel if it has more than 200 members "},"type":{"subclass":"addChatMembers","properties":[{"name":"chat_id","type":"int53"},{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","member_id":"Member identifier. Chats can be only banned and unbanned in supergroups and channels ","status":"The new status of the member in the chat","_":"Changes the status of a chat member, needs appropriate privileges. This function is currently not suitable for transferring chat ownership; use transferChatOwnership instead. Use addChatMember or banChatMember if some additional parameters needs to be passed "},"type":{"subclass":"setChatMemberStatus","properties":[{"name":"chat_id","type":"int53"},{"name":"member_id","type":"MessageSender"},{"name":"status","type":"ChatMemberStatus"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","member_id":"Member identifier ","banned_until_date":"Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever. Ignored in basic groups and if a chat is banned ","revoke_messages":"Pass true to delete all messages in the chat for the user that is being removed. Always true for supergroups and channels","_":"Bans a member in a chat. Members can't be banned in private or secret chats. In supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first "},"type":{"subclass":"banChatMember","properties":[{"name":"chat_id","type":"int53"},{"name":"member_id","type":"MessageSender"},{"name":"banned_until_date","type":"int32"},{"name":"revoke_messages","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"_":"Checks whether the current session can be used to transfer a chat ownership to another user"},"type":{"subclass":"canTransferOwnership","properties":[],"abstractClass":"CanTransferOwnershipResult"}},{"documentation":{"chat_id":"Chat identifier ","user_id":"Identifier of the user to which transfer the ownership. The ownership can't be transferred to a bot or to a deleted user ","password":"The 2-step verification password of the current user","_":"Changes the owner of a chat. The current user must be a current owner of the chat. Use the method canTransferOwnership to check whether the ownership can be transferred from the current session. Available only for supergroups and channel chats "},"type":{"subclass":"transferChatOwnership","properties":[{"name":"chat_id","type":"int53"},{"name":"user_id","type":"int53"},{"name":"password","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","member_id":"Member identifier","_":"Returns information about a single member of a chat "},"type":{"subclass":"getChatMember","properties":[{"name":"chat_id","type":"int53"},{"name":"member_id","type":"MessageSender"}],"abstractClass":"ChatMember"}},{"documentation":{"chat_id":"Chat identifier ","query":"Query to search for ","limit":"The maximum number of users to be returned; up to 200 ","filter":"The type of users to search for; pass null to search among all chat members","_":"Searches for a specified query in the first name, last name and usernames of the members of a specified chat. Requires administrator rights in channels "},"type":{"subclass":"searchChatMembers","properties":[{"name":"chat_id","type":"int53"},{"name":"query","type":"string"},{"name":"limit","type":"int32"},{"name":"filter","type":"ChatMembersFilter"}],"abstractClass":"ChatMembers"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns a list of administrators of the chat with their custom titles "},"type":{"subclass":"getChatAdministrators","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"ChatAdministrators"}},{"documentation":{"exclude_secret_chats":"Pass true to keep local message drafts in secret chats","_":"Clears message drafts in all chats "},"type":{"subclass":"clearAllDraftMessages","properties":[{"name":"exclude_secret_chats","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"notification_sound_id":"Identifier of the notification sound","_":"Returns saved notification sound by its identifier. Returns a 404 error if there is no saved notification sound with the specified identifier "},"type":{"subclass":"getSavedNotificationSound","properties":[{"name":"notification_sound_id","type":"int64"}],"abstractClass":"NotificationSounds"}},{"documentation":{"_":"Returns list of saved notification sounds. If a sound isn't in the list, then default sound needs to be used"},"type":{"subclass":"getSavedNotificationSounds","properties":[],"abstractClass":"NotificationSounds"}},{"documentation":{"sound":"Notification sound file to add","_":"Adds a new notification sound to the list of saved notification sounds. The new notification sound is added to the top of the list. If it is already in the list, its position isn't changed "},"type":{"subclass":"addSavedNotificationSound","properties":[{"name":"sound","type":"InputFile"}],"abstractClass":"NotificationSound"}},{"documentation":{"notification_sound_id":"Identifier of the notification sound","_":"Removes a notification sound from the list of saved notification sounds "},"type":{"subclass":"removeSavedNotificationSound","properties":[{"name":"notification_sound_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"scope":"If specified, only chats from the scope will be returned; pass null to return chats from all scopes ","compare_sound":"Pass true to include in the response chats with only non-default sound","_":"Returns list of chats with non-default notification settings "},"type":{"subclass":"getChatNotificationSettingsExceptions","properties":[{"name":"scope","type":"NotificationSettingsScope"},{"name":"compare_sound","type":"Bool"}],"abstractClass":"Chats"}},{"documentation":{"scope":"Types of chats for which to return the notification settings information","_":"Returns the notification settings for chats of a given type "},"type":{"subclass":"getScopeNotificationSettings","properties":[{"name":"scope","type":"NotificationSettingsScope"}],"abstractClass":"ScopeNotificationSettings"}},{"documentation":{"scope":"Types of chats for which to change the notification settings ","notification_settings":"The new notification settings for the given scope","_":"Changes notification settings for chats of a given type "},"type":{"subclass":"setScopeNotificationSettings","properties":[{"name":"scope","type":"NotificationSettingsScope"},{"name":"notification_settings","type":"scopeNotificationSettings"}],"abstractClass":"Ok"}},{"documentation":{"_":"Resets all notification settings to their default values. By default, all chats are unmuted and message previews are shown"},"type":{"subclass":"resetAllNotificationSettings","properties":[],"abstractClass":"Ok"}},{"documentation":{"chat_list":"Chat list in which to change the pinned state of the chat ","chat_id":"Chat identifier ","is_pinned":"Pass true to pin the chat; pass false to unpin it","_":"Changes the pinned state of a chat. There can be up to getOption(\"pinned_chat_count_max\")/getOption(\"pinned_archived_chat_count_max\") pinned non-secret chats and the same number of secret chats in the main/archive chat list. The limit can be increased with Telegram Premium "},"type":{"subclass":"toggleChatIsPinned","properties":[{"name":"chat_list","type":"ChatList"},{"name":"chat_id","type":"int53"},{"name":"is_pinned","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_list":"Chat list in which to change the order of pinned chats ","chat_ids":"The new list of pinned chats","_":"Changes the order of pinned chats "},"type":{"subclass":"setPinnedChats","properties":[{"name":"chat_list","type":"ChatList"},{"name":"chat_ids","type":"vector<int53>"}],"abstractClass":"Ok"}},{"documentation":{"bot_user_id":"Bot's user identifier","_":"Returns information about a bot that can be added to attachment menu "},"type":{"subclass":"getAttachmentMenuBot","properties":[{"name":"bot_user_id","type":"int53"}],"abstractClass":"AttachmentMenuBot"}},{"documentation":{"bot_user_id":"Bot's user identifier ","is_added":"Pass true to add the bot to attachment menu; pass false to remove the bot from attachment menu","_":"Adds or removes a bot to attachment menu. Bot can be added to attachment menu, only if userTypeBot.can_be_added_to_attachment_menu == true "},"type":{"subclass":"toggleBotIsAddedToAttachmentMenu","properties":[{"name":"bot_user_id","type":"int53"},{"name":"is_added","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns up to 8 themed emoji statuses, which color must be changed to the color of the Telegram Premium badge"},"type":{"subclass":"getThemedEmojiStatuses","properties":[],"abstractClass":"EmojiStatuses"}},{"documentation":{"_":"Returns recent emoji statuses"},"type":{"subclass":"getRecentEmojiStatuses","properties":[],"abstractClass":"EmojiStatuses"}},{"documentation":{"_":"Returns default emoji statuses"},"type":{"subclass":"getDefaultEmojiStatuses","properties":[],"abstractClass":"EmojiStatuses"}},{"documentation":{"_":"Clears the list of recently used emoji statuses"},"type":{"subclass":"clearRecentEmojiStatuses","properties":[],"abstractClass":"Ok"}},{"documentation":{"file_id":"Identifier of the file to download ","priority":"Priority of the download (1-32). The higher the priority, the earlier the file will be downloaded. If the priorities of two files are equal, then the last one for which downloadFile/addFileToDownloads was called will be downloaded first ","offset":"The starting position from which the file needs to be downloaded ","limit":"Number of bytes which need to be downloaded starting from the \"offset\" position before the download will automatically be canceled; use 0 to download without a limit ","synchronous":"Pass true to return response only after the file download has succeeded, has failed, has been canceled, or a new downloadFile request with different offset/limit parameters was sent; pass false to return file state immediately, just after the download has been started","_":"Downloads a file from the cloud. Download progress and completion of the download will be notified through updateFile updates "},"type":{"subclass":"downloadFile","properties":[{"name":"file_id","type":"int32"},{"name":"priority","type":"int32"},{"name":"offset","type":"int53"},{"name":"limit","type":"int53"},{"name":"synchronous","type":"Bool"}],"abstractClass":"File"}},{"documentation":{"file_id":"Identifier of a file to stop downloading ","only_if_pending":"Pass true to stop downloading only if it hasn't been started, i.e. request hasn't been sent to server","_":"Stops the downloading of a file. If a file has already been downloaded, does nothing "},"type":{"subclass":"cancelDownloadFile","properties":[{"name":"file_id","type":"int32"},{"name":"only_if_pending","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"file_id":"Identifier of the file ","directory":"Directory in which the file is supposed to be saved","_":"Returns suggested name for saving a file in a given directory "},"type":{"subclass":"getSuggestedFileName","properties":[{"name":"file_id","type":"int32"},{"name":"directory","type":"string"}],"abstractClass":"Text"}},{"documentation":{"file":"File to upload ","file_type":"File type; pass null if unknown ","priority":"Priority of the upload (1-32). The higher the priority, the earlier the file will be uploaded. If the priorities of two files are equal, then the first one for which preliminaryUploadFile was called will be uploaded first","_":"Preliminary uploads a file to the cloud before sending it in a message, which can be useful for uploading of being recorded voice and video notes. Updates updateFile will be used to notify about upload progress and successful completion of the upload. The file will not have a persistent remote identifier until it will be sent in a message "},"type":{"subclass":"preliminaryUploadFile","properties":[{"name":"file","type":"InputFile"},{"name":"file_type","type":"FileType"},{"name":"priority","type":"int32"}],"abstractClass":"File"}},{"documentation":{"file_id":"Identifier of the file to stop uploading","_":"Stops the preliminary uploading of a file. Supported only for files uploaded by using preliminaryUploadFile. For other files the behavior is undefined "},"type":{"subclass":"cancelPreliminaryUploadFile","properties":[{"name":"file_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"generation_id":"The identifier of the generation process ","offset":"The offset from which to write the data to the file ","data":"The data to write","_":"Writes a part of a generated file. This method is intended to be used only if the application has no direct access to TDLib's file system, because it is usually slower than a direct write to the destination file "},"type":{"subclass":"writeGeneratedFilePart","properties":[{"name":"generation_id","type":"int64"},{"name":"offset","type":"int53"},{"name":"data","type":"bytes"}],"abstractClass":"Ok"}},{"documentation":{"generation_id":"The identifier of the generation process ","expected_size":"Expected size of the generated file, in bytes; 0 if unknown ","local_prefix_size":"The number of bytes already generated","_":"Informs TDLib on a file generation progress "},"type":{"subclass":"setFileGenerationProgress","properties":[{"name":"generation_id","type":"int64"},{"name":"expected_size","type":"int53"},{"name":"local_prefix_size","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"generation_id":"The identifier of the generation process ","error":"If passed, the file generation has failed and must be terminated; pass null if the file generation succeeded","_":"Finishes the file generation "},"type":{"subclass":"finishFileGeneration","properties":[{"name":"generation_id","type":"int64"},{"name":"error","type":"error"}],"abstractClass":"Ok"}},{"documentation":{"file_id":"Identifier of the file. The file must be located in the TDLib file cache ","offset":"The offset from which to read the file ","count":"Number of bytes to read. An error will be returned if there are not enough bytes available in the file from the specified position. Pass 0 to read all available data from the specified position","_":"Reads a part of a file from the TDLib file cache and returns read bytes. This method is intended to be used only if the application has no direct access to TDLib's file system, because it is usually slower than a direct read from the file "},"type":{"subclass":"readFilePart","properties":[{"name":"file_id","type":"int32"},{"name":"offset","type":"int53"},{"name":"count","type":"int53"}],"abstractClass":"FilePart"}},{"documentation":{"file_id":"Identifier of the file to delete","_":"Deletes a file from the TDLib file cache "},"type":{"subclass":"deleteFile","properties":[{"name":"file_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"file_id":"Identifier of the file to download ","chat_id":"Chat identifier of the message with the file ","message_id":"Message identifier ","priority":"Priority of the download (1-32). The higher the priority, the earlier the file will be downloaded. If the priorities of two files are equal, then the last one for which downloadFile/addFileToDownloads was called will be downloaded first","_":"Adds a file from a message to the list of file downloads. Download progress and completion of the download will be notified through updateFile updates. -If message database is used, the list of file downloads is persistent across application restarts. The downloading is independent from download using downloadFile, i.e. it continues if downloadFile is canceled or is used to download a part of the file "},"type":{"subclass":"addFileToDownloads","properties":[{"name":"file_id","type":"int32"},{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"priority","type":"int32"}],"abstractClass":"File"}},{"documentation":{"file_id":"Identifier of the downloaded file ","is_paused":"Pass true if the download is paused","_":"Changes pause state of a file in the file download list "},"type":{"subclass":"toggleDownloadIsPaused","properties":[{"name":"file_id","type":"int32"},{"name":"is_paused","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"are_paused":"Pass true to pause all downloads; pass false to unpause them","_":"Changes pause state of all files in the file download list "},"type":{"subclass":"toggleAllDownloadsArePaused","properties":[{"name":"are_paused","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"file_id":"Identifier of the downloaded file ","delete_from_cache":"Pass true to delete the file from the TDLib file cache","_":"Removes a file from the file download list "},"type":{"subclass":"removeFileFromDownloads","properties":[{"name":"file_id","type":"int32"},{"name":"delete_from_cache","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"only_active":"Pass true to remove only active downloads, including paused ","only_completed":"Pass true to remove only completed downloads ","delete_from_cache":"Pass true to delete the file from the TDLib file cache","_":"Removes all files from the file download list "},"type":{"subclass":"removeAllFilesFromDownloads","properties":[{"name":"only_active","type":"Bool"},{"name":"only_completed","type":"Bool"},{"name":"delete_from_cache","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"query":"Query to search for; may be empty to return all downloaded files ","only_active":"Pass true to search only for active downloads, including paused ","only_completed":"Pass true to search only for completed downloads ","offset":"Offset of the first entry to return as received from the previous request; use empty string to get the first chunk of results ","limit":"The maximum number of files to be returned","_":"Searches for files in the file download list or recently downloaded files from the list "},"type":{"subclass":"searchFileDownloads","properties":[{"name":"query","type":"string"},{"name":"only_active","type":"Bool"},{"name":"only_completed","type":"Bool"},{"name":"offset","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"FoundFileDownloads"}},{"documentation":{"message_file_head":"Beginning of the message file; up to 100 first lines","_":"Returns information about a file with messages exported from another application "},"type":{"subclass":"getMessageFileType","properties":[{"name":"message_file_head","type":"string"}],"abstractClass":"MessageFileType"}},{"documentation":{"chat_id":"Identifier of a chat to which the messages will be imported. It must be an identifier of a private chat with a mutual contact or an identifier of a supergroup chat with can_change_info administrator right","_":"Returns a confirmation text to be shown to the user before starting message import "},"type":{"subclass":"getMessageImportConfirmationText","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Text"}},{"documentation":{"chat_id":"Identifier of a chat to which the messages will be imported. It must be an identifier of a private chat with a mutual contact or an identifier of a supergroup chat with can_change_info administrator right ","message_file":"File with messages to import. Only inputFileLocal and inputFileGenerated are supported. The file must not be previously uploaded ","attached_files":"Files used in the imported messages. Only inputFileLocal and inputFileGenerated are supported. The files must not be previously uploaded","_":"Imports messages exported from another app "},"type":{"subclass":"importMessages","properties":[{"name":"chat_id","type":"int53"},{"name":"message_file","type":"InputFile"},{"name":"attached_files","type":"vector<InputFile>"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Replaces current primary invite link for a chat with a new primary invite link. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right "},"type":{"subclass":"replacePrimaryChatInviteLink","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"ChatInviteLink"}},{"documentation":{"chat_id":"Chat identifier ","name":"Invite link name; 0-32 characters ","expiration_date":"Point in time (Unix timestamp) when the link will expire; pass 0 if never ","member_limit":"The maximum number of chat members that can join the chat via the link simultaneously; 0-99999; pass 0 if not limited ","creates_join_request":"Pass true if users joining the chat via the link need to be approved by chat administrators. In this case, member_limit must be 0","_":"Creates a new invite link for a chat. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right in the chat "},"type":{"subclass":"createChatInviteLink","properties":[{"name":"chat_id","type":"int53"},{"name":"name","type":"string"},{"name":"expiration_date","type":"int32"},{"name":"member_limit","type":"int32"},{"name":"creates_join_request","type":"Bool"}],"abstractClass":"ChatInviteLink"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link to be edited ","name":"Invite link name; 0-32 characters ","expiration_date":"Point in time (Unix timestamp) when the link will expire; pass 0 if never ","member_limit":"The maximum number of chat members that can join the chat via the link simultaneously; 0-99999; pass 0 if not limited ","creates_join_request":"Pass true if users joining the chat via the link need to be approved by chat administrators. In this case, member_limit must be 0","_":"Edits a non-primary invite link for a chat. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links "},"type":{"subclass":"editChatInviteLink","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"},{"name":"name","type":"string"},{"name":"expiration_date","type":"int32"},{"name":"member_limit","type":"int32"},{"name":"creates_join_request","type":"Bool"}],"abstractClass":"ChatInviteLink"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link to get","_":"Returns information about an invite link. Requires administrator privileges and can_invite_users right in the chat to get own links and owner privileges to get other links "},"type":{"subclass":"getChatInviteLink","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"}],"abstractClass":"ChatInviteLink"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns list of chat administrators with number of their invite links. Requires owner privileges in the chat "},"type":{"subclass":"getChatInviteLinkCounts","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"ChatInviteLinkCounts"}},{"documentation":{"chat_id":"Chat identifier ","creator_user_id":"User identifier of a chat administrator. Must be an identifier of the current user for non-owner ","is_revoked":"Pass true if revoked links needs to be returned instead of active or expired ","offset_date":"Creation date of an invite link starting after which to return invite links; use 0 to get results from the beginning ","offset_invite_link":"Invite link starting after which to return invite links; use empty string to get results from the beginning ","limit":"The maximum number of invite links to return; up to 100","_":"Returns invite links for a chat created by specified administrator. Requires administrator privileges and can_invite_users right in the chat to get own links and owner privileges to get other links "},"type":{"subclass":"getChatInviteLinks","properties":[{"name":"chat_id","type":"int53"},{"name":"creator_user_id","type":"int53"},{"name":"is_revoked","type":"Bool"},{"name":"offset_date","type":"int32"},{"name":"offset_invite_link","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"ChatInviteLinks"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link for which to return chat members ","offset_member":"A chat member from which to return next chat members; pass null to get results from the beginning ","limit":"The maximum number of chat members to return; up to 100","_":"Returns chat members joined a chat via an invite link. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links "},"type":{"subclass":"getChatInviteLinkMembers","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"},{"name":"offset_member","type":"chatInviteLinkMember"},{"name":"limit","type":"int32"}],"abstractClass":"ChatInviteLinkMembers"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link to be revoked","_":"Revokes invite link for a chat. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links. -If a primary link is revoked, then additionally to the revoked link returns new primary link "},"type":{"subclass":"revokeChatInviteLink","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"}],"abstractClass":"ChatInviteLinks"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link to revoke","_":"Deletes revoked chat invite links. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links "},"type":{"subclass":"deleteRevokedChatInviteLink","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","creator_user_id":"User identifier of a chat administrator, which links will be deleted. Must be an identifier of the current user for non-owner","_":"Deletes all revoked chat invite links created by a given chat administrator. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links "},"type":{"subclass":"deleteAllRevokedChatInviteLinks","properties":[{"name":"chat_id","type":"int53"},{"name":"creator_user_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"invite_link":"Invite link to be checked","_":"Checks the validity of an invite link for a chat and returns information about the corresponding chat "},"type":{"subclass":"checkChatInviteLink","properties":[{"name":"invite_link","type":"string"}],"abstractClass":"ChatInviteLinkInfo"}},{"documentation":{"invite_link":"Invite link to use","_":"Uses an invite link to add the current user to the chat if possible. May return an error with a message \"INVITE_REQUEST_SENT\" if only a join request was created "},"type":{"subclass":"joinChatByInviteLink","properties":[{"name":"invite_link","type":"string"}],"abstractClass":"Chat"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link for which to return join requests. If empty, all join requests will be returned. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links ","query":"A query to search for in the first names, last names and usernames of the users to return ","offset_request":"A chat join request from which to return next requests; pass null to get results from the beginning ","limit":"The maximum number of requests to join the chat to return","_":"Returns pending join requests in a chat "},"type":{"subclass":"getChatJoinRequests","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"},{"name":"query","type":"string"},{"name":"offset_request","type":"chatJoinRequest"},{"name":"limit","type":"int32"}],"abstractClass":"ChatJoinRequests"}},{"documentation":{"chat_id":"Chat identifier ","user_id":"Identifier of the user that sent the request ","approve":"Pass true to approve the request; pass false to decline it","_":"Handles a pending join request in a chat "},"type":{"subclass":"processChatJoinRequest","properties":[{"name":"chat_id","type":"int53"},{"name":"user_id","type":"int53"},{"name":"approve","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","invite_link":"Invite link for which to process join requests. If empty, all join requests will be processed. Requires administrator privileges and can_invite_users right in the chat for own links and owner privileges for other links ","approve":"Pass true to approve all requests; pass false to decline them","_":"Handles all pending join requests for a given link in a chat "},"type":{"subclass":"processChatJoinRequests","properties":[{"name":"chat_id","type":"int53"},{"name":"invite_link","type":"string"},{"name":"approve","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"Identifier of the user to be called ","protocol":"The call protocols supported by the application ","is_video":"Pass true to create a video call","_":"Creates a new call "},"type":{"subclass":"createCall","properties":[{"name":"user_id","type":"int53"},{"name":"protocol","type":"callProtocol"},{"name":"is_video","type":"Bool"}],"abstractClass":"CallId"}},{"documentation":{"call_id":"Call identifier ","protocol":"The call protocols supported by the application","_":"Accepts an incoming call "},"type":{"subclass":"acceptCall","properties":[{"name":"call_id","type":"int32"},{"name":"protocol","type":"callProtocol"}],"abstractClass":"Ok"}},{"documentation":{"call_id":"Call identifier ","data":"The data","_":"Sends call signaling data "},"type":{"subclass":"sendCallSignalingData","properties":[{"name":"call_id","type":"int32"},{"name":"data","type":"bytes"}],"abstractClass":"Ok"}},{"documentation":{"call_id":"Call identifier ","is_disconnected":"Pass true if the user was disconnected ","duration":"The call duration, in seconds ","is_video":"Pass true if the call was a video call ","connection_id":"Identifier of the connection used during the call","_":"Discards a call "},"type":{"subclass":"discardCall","properties":[{"name":"call_id","type":"int32"},{"name":"is_disconnected","type":"Bool"},{"name":"duration","type":"int32"},{"name":"is_video","type":"Bool"},{"name":"connection_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"call_id":"Call identifier ","rating":"Call rating; 1-5 ","comment":"An optional user comment if the rating is less than 5 ","problems":"List of the exact types of problems with the call, specified by the user","_":"Sends a call rating "},"type":{"subclass":"sendCallRating","properties":[{"name":"call_id","type":"int32"},{"name":"rating","type":"int32"},{"name":"comment","type":"string"},{"name":"problems","type":"vector<CallProblem>"}],"abstractClass":"Ok"}},{"documentation":{"call_id":"Call identifier ","debug_information":"Debug information in application-specific format","_":"Sends debug information for a call to Telegram servers "},"type":{"subclass":"sendCallDebugInformation","properties":[{"name":"call_id","type":"int32"},{"name":"debug_information","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"call_id":"Call identifier ","log_file":"Call log file. Only inputFileLocal and inputFileGenerated are supported","_":"Sends log file for a call to Telegram servers "},"type":{"subclass":"sendCallLog","properties":[{"name":"call_id","type":"int32"},{"name":"log_file","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns list of participant identifiers, on whose behalf a video chat in the chat can be joined "},"type":{"subclass":"getVideoChatAvailableParticipants","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"MessageSenders"}},{"documentation":{"chat_id":"Chat identifier ","default_participant_id":"Default group call participant identifier to join the video chats","_":"Changes default participant identifier, on whose behalf a video chat in the chat will be joined "},"type":{"subclass":"setVideoChatDefaultParticipant","properties":[{"name":"chat_id","type":"int53"},{"name":"default_participant_id","type":"MessageSender"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Identifier of a chat in which the video chat will be created ","title":"Group call title; if empty, chat title will be used ","start_date":"Point in time (Unix timestamp) when the group call is supposed to be started by an administrator; 0 to start the video chat immediately. The date must be at least 10 seconds and at most 8 days in the future ","is_rtmp_stream":"Pass true to create an RTMP stream instead of an ordinary video chat; requires creator privileges","_":"Creates a video chat (a group call bound to a chat). Available only for basic groups, supergroups and channels; requires can_manage_video_chats rights "},"type":{"subclass":"createVideoChat","properties":[{"name":"chat_id","type":"int53"},{"name":"title","type":"string"},{"name":"start_date","type":"int32"},{"name":"is_rtmp_stream","type":"Bool"}],"abstractClass":"GroupCallId"}},{"documentation":{"chat_id":"Chat identifier","_":"Returns RTMP URL for streaming to the chat; requires creator privileges "},"type":{"subclass":"getVideoChatRtmpUrl","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"RtmpUrl"}},{"documentation":{"chat_id":"Chat identifier","_":"Replaces the current RTMP URL for streaming to the chat; requires creator privileges "},"type":{"subclass":"replaceVideoChatRtmpUrl","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"RtmpUrl"}},{"documentation":{"group_call_id":"Group call identifier","_":"Returns information about a group call "},"type":{"subclass":"getGroupCall","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"GroupCall"}},{"documentation":{"group_call_id":"Group call identifier","_":"Starts a scheduled group call "},"type":{"subclass":"startScheduledGroupCall","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","enabled_start_notification":"New value of the enabled_start_notification setting","_":"Toggles whether the current user will receive a notification when the group call will start; scheduled group calls only "},"type":{"subclass":"toggleGroupCallEnabledStartNotification","properties":[{"name":"group_call_id","type":"int32"},{"name":"enabled_start_notification","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","participant_id":"Identifier of a group call participant, which will be used to join the call; pass null to join as self; video chats only ","audio_source_id":"Caller audio channel synchronization source identifier; received from tgcalls ","payload":"Group call join payload; received from tgcalls ","is_muted":"Pass true to join the call with muted microphone ","is_my_video_enabled":"Pass true if the user's video is enabled ","invite_hash":"If non-empty, invite hash to be used to join the group call without being muted by administrators","_":"Joins an active group call. Returns join response payload for tgcalls "},"type":{"subclass":"joinGroupCall","properties":[{"name":"group_call_id","type":"int32"},{"name":"participant_id","type":"MessageSender"},{"name":"audio_source_id","type":"int32"},{"name":"payload","type":"string"},{"name":"is_muted","type":"Bool"},{"name":"is_my_video_enabled","type":"Bool"},{"name":"invite_hash","type":"string"}],"abstractClass":"Text"}},{"documentation":{"group_call_id":"Group call identifier ","audio_source_id":"Screen sharing audio channel synchronization source identifier; received from tgcalls ","payload":"Group call join payload; received from tgcalls","_":"Starts screen sharing in a joined group call. Returns join response payload for tgcalls "},"type":{"subclass":"startGroupCallScreenSharing","properties":[{"name":"group_call_id","type":"int32"},{"name":"audio_source_id","type":"int32"},{"name":"payload","type":"string"}],"abstractClass":"Text"}},{"documentation":{"group_call_id":"Group call identifier ","is_paused":"True, if screen sharing is paused","_":"Pauses or unpauses screen sharing in a joined group call "},"type":{"subclass":"toggleGroupCallScreenSharingIsPaused","properties":[{"name":"group_call_id","type":"int32"},{"name":"is_paused","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier","_":"Ends screen sharing in a joined group call "},"type":{"subclass":"endGroupCallScreenSharing","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","title":"New group call title; 1-64 characters","_":"Sets group call title. Requires groupCall.can_be_managed group call flag "},"type":{"subclass":"setGroupCallTitle","properties":[{"name":"group_call_id","type":"int32"},{"name":"title","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","mute_new_participants":"New value of the mute_new_participants setting","_":"Toggles whether new participants of a group call can be unmuted only by administrators of the group call. Requires groupCall.can_toggle_mute_new_participants group call flag "},"type":{"subclass":"toggleGroupCallMuteNewParticipants","properties":[{"name":"group_call_id","type":"int32"},{"name":"mute_new_participants","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","user_ids":"User identifiers. At most 10 users can be invited simultaneously","_":"Invites users to an active group call. Sends a service message of type messageInviteToGroupCall for video chats "},"type":{"subclass":"inviteGroupCallParticipants","properties":[{"name":"group_call_id","type":"int32"},{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","can_self_unmute":"Pass true if the invite link needs to contain an invite hash, passing which to joinGroupCall would allow the invited user to unmute themselves. Requires groupCall.can_be_managed group call flag","_":"Returns invite link to a video chat in a public chat "},"type":{"subclass":"getGroupCallInviteLink","properties":[{"name":"group_call_id","type":"int32"},{"name":"can_self_unmute","type":"Bool"}],"abstractClass":"HttpUrl"}},{"documentation":{"group_call_id":"Group call identifier","_":"Revokes invite link for a group call. Requires groupCall.can_be_managed group call flag "},"type":{"subclass":"revokeGroupCallInviteLink","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","title":"Group call recording title; 0-64 characters ","record_video":"Pass true to record a video file instead of an audio file ","use_portrait_orientation":"Pass true to use portrait orientation for video instead of landscape one","_":"Starts recording of an active group call. Requires groupCall.can_be_managed group call flag "},"type":{"subclass":"startGroupCallRecording","properties":[{"name":"group_call_id","type":"int32"},{"name":"title","type":"string"},{"name":"record_video","type":"Bool"},{"name":"use_portrait_orientation","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier","_":"Ends recording of an active group call. Requires groupCall.can_be_managed group call flag "},"type":{"subclass":"endGroupCallRecording","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","is_my_video_paused":"Pass true if the current user's video is paused","_":"Toggles whether current user's video is paused "},"type":{"subclass":"toggleGroupCallIsMyVideoPaused","properties":[{"name":"group_call_id","type":"int32"},{"name":"is_my_video_paused","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","is_my_video_enabled":"Pass true if the current user's video is enabled","_":"Toggles whether current user's video is enabled "},"type":{"subclass":"toggleGroupCallIsMyVideoEnabled","properties":[{"name":"group_call_id","type":"int32"},{"name":"is_my_video_enabled","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","audio_source":"Group call participant's synchronization audio source identifier, or 0 for the current user ","is_speaking":"Pass true if the user is speaking","_":"Informs TDLib that speaking state of a participant of an active group has changed "},"type":{"subclass":"setGroupCallParticipantIsSpeaking","properties":[{"name":"group_call_id","type":"int32"},{"name":"audio_source","type":"int32"},{"name":"is_speaking","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","participant_id":"Participant identifier ","is_muted":"Pass true to mute the user; pass false to unmute the them","_":"Toggles whether a participant of an active group call is muted, unmuted, or allowed to unmute themselves "},"type":{"subclass":"toggleGroupCallParticipantIsMuted","properties":[{"name":"group_call_id","type":"int32"},{"name":"participant_id","type":"MessageSender"},{"name":"is_muted","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","participant_id":"Participant identifier ","volume_level":"New participant's volume level; 1-20000 in hundreds of percents","_":"Changes volume level of a participant of an active group call. If the current user can manage the group call, then the participant's volume level will be changed for all users with the default volume level "},"type":{"subclass":"setGroupCallParticipantVolumeLevel","properties":[{"name":"group_call_id","type":"int32"},{"name":"participant_id","type":"MessageSender"},{"name":"volume_level","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier ","participant_id":"Participant identifier ","is_hand_raised":"Pass true if the user's hand needs to be raised. Only self hand can be raised. Requires groupCall.can_be_managed group call flag to lower other's hand","_":"Toggles whether a group call participant hand is rased "},"type":{"subclass":"toggleGroupCallParticipantIsHandRaised","properties":[{"name":"group_call_id","type":"int32"},{"name":"participant_id","type":"MessageSender"},{"name":"is_hand_raised","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier. The group call must be previously received through getGroupCall and must be joined or being joined ","limit":"The maximum number of participants to load; up to 100","_":"Loads more participants of a group call. The loaded participants will be received through updates. Use the field groupCall.loaded_all_participants to check whether all participants have already been loaded "},"type":{"subclass":"loadGroupCallParticipants","properties":[{"name":"group_call_id","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier","_":"Leaves a group call "},"type":{"subclass":"leaveGroupCall","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier","_":"Ends a group call. Requires groupCall.can_be_managed "},"type":{"subclass":"endGroupCall","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"group_call_id":"Group call identifier","_":"Returns information about available group call streams "},"type":{"subclass":"getGroupCallStreams","properties":[{"name":"group_call_id","type":"int32"}],"abstractClass":"GroupCallStreams"}},{"documentation":{"group_call_id":"Group call identifier ","time_offset":"Point in time when the stream segment begins; Unix timestamp in milliseconds ","scale":"Segment duration scale; 0-1. Segment's duration is 1000/(2**scale) milliseconds ","channel_id":"Identifier of an audio/video channel to get as received from tgcalls ","video_quality":"Video quality as received from tgcalls; pass null to get the worst available quality","_":"Returns a file with a segment of a group call stream in a modified OGG format for audio or MPEG-4 format for video "},"type":{"subclass":"getGroupCallStreamSegment","properties":[{"name":"group_call_id","type":"int32"},{"name":"time_offset","type":"int53"},{"name":"scale","type":"int32"},{"name":"channel_id","type":"int32"},{"name":"video_quality","type":"GroupCallVideoQuality"}],"abstractClass":"FilePart"}},{"documentation":{"sender_id":"Identifier of a message sender to block/unblock ","is_blocked":"New value of is_blocked","_":"Changes the block state of a message sender. Currently, only users and supergroup chats can be blocked "},"type":{"subclass":"toggleMessageSenderIsBlocked","properties":[{"name":"sender_id","type":"MessageSender"},{"name":"is_blocked","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"message_id":"The identifier of an incoming message in the Replies chat ","delete_message":"Pass true to delete the message ","delete_all_messages":"Pass true to delete all messages from the same sender ","report_spam":"Pass true to report the sender to the Telegram moderators","_":"Blocks an original sender of a message in the Replies chat "},"type":{"subclass":"blockMessageSenderFromReplies","properties":[{"name":"message_id","type":"int53"},{"name":"delete_message","type":"Bool"},{"name":"delete_all_messages","type":"Bool"},{"name":"report_spam","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"offset":"Number of users and chats to skip in the result; must be non-negative ","limit":"The maximum number of users and chats to return; up to 100","_":"Returns users and chats that were blocked by the current user "},"type":{"subclass":"getBlockedMessageSenders","properties":[{"name":"offset","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"MessageSenders"}},{"documentation":{"contact":"The contact to add or edit; phone number may be empty and needs to be specified only if known, vCard is ignored ","share_phone_number":"Pass true to share the current user's phone number with the new contact. A corresponding rule to userPrivacySettingShowPhoneNumber will be added if needed. Use the field userFullInfo.need_phone_number_privacy_exception to check whether the current user needs to be asked to share their phone number","_":"Adds a user to the contact list or edits an existing contact by their user identifier "},"type":{"subclass":"addContact","properties":[{"name":"contact","type":"contact"},{"name":"share_phone_number","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"contacts":"The list of contacts to import or edit; contacts' vCard are ignored and are not imported","_":"Adds new contacts or edits existing contacts by their phone numbers; contacts' user identifiers are ignored "},"type":{"subclass":"importContacts","properties":[{"name":"contacts","type":"vector<contact>"}],"abstractClass":"ImportedContacts"}},{"documentation":{"_":"Returns all user contacts"},"type":{"subclass":"getContacts","properties":[],"abstractClass":"Users"}},{"documentation":{"query":"Query to search for; may be empty to return all contacts ","limit":"The maximum number of users to be returned","_":"Searches for the specified query in the first names, last names and usernames of the known user contacts "},"type":{"subclass":"searchContacts","properties":[{"name":"query","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"Users"}},{"documentation":{"user_ids":"Identifiers of users to be deleted","_":"Removes users from the contact list "},"type":{"subclass":"removeContacts","properties":[{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns the total number of imported contacts"},"type":{"subclass":"getImportedContactCount","properties":[],"abstractClass":"Count"}},{"documentation":{"contacts":"The new list of contacts, contact's vCard are ignored and are not imported","_":"Changes imported contacts using the list of contacts saved on the device. Imports newly added contacts and, if at least the file database is enabled, deletes recently deleted contacts. -Query result depends on the result of the previous query, so only one query is possible at the same time "},"type":{"subclass":"changeImportedContacts","properties":[{"name":"contacts","type":"vector<contact>"}],"abstractClass":"ImportedContacts"}},{"documentation":{"_":"Clears all imported contacts, contact list remains unchanged"},"type":{"subclass":"clearImportedContacts","properties":[],"abstractClass":"Ok"}},{"documentation":{"phone_number":"Phone number to search for","_":"Searches a user by their phone number. Returns a 404 error if the user can't be found "},"type":{"subclass":"searchUserByPhoneNumber","properties":[{"name":"phone_number","type":"string"}],"abstractClass":"User"}},{"documentation":{"user_id":"Identifier of the user with whom to share the phone number. The user must be a mutual contact","_":"Shares the phone number of the current user with a mutual contact. Supposed to be called when the user clicks on chatActionBarSharePhoneNumber "},"type":{"subclass":"sharePhoneNumber","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"User identifier ","offset":"The number of photos to skip; must be non-negative ","limit":"The maximum number of photos to be returned; up to 100","_":"Returns the profile photos of a user. The result of this query may be outdated: some photos might have been deleted already "},"type":{"subclass":"getUserProfilePhotos","properties":[{"name":"user_id","type":"int53"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"ChatPhotos"}},{"documentation":{"sticker_type":"Type of the stickers to return ","query":"Search query; an emoji or a keyword prefix. If empty, returns all known installed stickers ","limit":"The maximum number of stickers to be returned ","chat_id":"Chat identifier for which to return stickers. Available custom emoji stickers may be different for different chats","_":"Returns stickers from the installed sticker sets that correspond to a given emoji or can be found by sticker-specific keywords. If the query is non-empty, then favorite, recently used or trending stickers may also be returned "},"type":{"subclass":"getStickers","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"query","type":"string"},{"name":"limit","type":"int32"},{"name":"chat_id","type":"int53"}],"abstractClass":"Stickers"}},{"documentation":{"emoji":"String representation of emoji; must be non-empty ","limit":"The maximum number of stickers to be returned; 0-100","_":"Searches for stickers from public sticker sets that correspond to a given emoji "},"type":{"subclass":"searchStickers","properties":[{"name":"emoji","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"Stickers"}},{"documentation":{"limit":"The maximum number of stickers to be returned; 0-100","_":"Returns premium stickers from regular sticker sets "},"type":{"subclass":"getPremiumStickers","properties":[{"name":"limit","type":"int32"}],"abstractClass":"Stickers"}},{"documentation":{"sticker_type":"Type of the sticker sets to return","_":"Returns a list of installed sticker sets "},"type":{"subclass":"getInstalledStickerSets","properties":[{"name":"sticker_type","type":"StickerType"}],"abstractClass":"StickerSets"}},{"documentation":{"sticker_type":"Type of the sticker sets to return ","offset_sticker_set_id":"Identifier of the sticker set from which to return the result ","limit":"The maximum number of sticker sets to return; up to 100","_":"Returns a list of archived sticker sets "},"type":{"subclass":"getArchivedStickerSets","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"offset_sticker_set_id","type":"int64"},{"name":"limit","type":"int32"}],"abstractClass":"StickerSets"}},{"documentation":{"sticker_type":"Type of the sticker sets to return ","offset":"The offset from which to return the sticker sets; must be non-negative ","limit":"The maximum number of sticker sets to be returned; up to 100. For optimal performance, the number of returned sticker sets is chosen by TDLib and can be smaller than the specified limit, even if the end of the list has not been reached","_":"Returns a list of trending sticker sets. For optimal performance, the number of returned sticker sets is chosen by TDLib "},"type":{"subclass":"getTrendingStickerSets","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"TrendingStickerSets"}},{"documentation":{"file_id":"File identifier","_":"Returns a list of sticker sets attached to a file. Currently, only photos and videos can have attached sticker sets "},"type":{"subclass":"getAttachedStickerSets","properties":[{"name":"file_id","type":"int32"}],"abstractClass":"StickerSets"}},{"documentation":{"set_id":"Identifier of the sticker set","_":"Returns information about a sticker set by its identifier "},"type":{"subclass":"getStickerSet","properties":[{"name":"set_id","type":"int64"}],"abstractClass":"StickerSet"}},{"documentation":{"name":"Name of the sticker set","_":"Searches for a sticker set by its name "},"type":{"subclass":"searchStickerSet","properties":[{"name":"name","type":"string"}],"abstractClass":"StickerSet"}},{"documentation":{"sticker_type":"Type of the sticker sets to search for ","query":"Query to search for ","limit":"The maximum number of sticker sets to return","_":"Searches for installed sticker sets by looking for specified query in their title and name "},"type":{"subclass":"searchInstalledStickerSets","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"query","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"StickerSets"}},{"documentation":{"query":"Query to search for","_":"Searches for ordinary sticker sets by looking for specified query in their title and name. Excludes installed sticker sets from the results "},"type":{"subclass":"searchStickerSets","properties":[{"name":"query","type":"string"}],"abstractClass":"StickerSets"}},{"documentation":{"set_id":"Identifier of the sticker set ","is_installed":"The new value of is_installed ","is_archived":"The new value of is_archived. A sticker set can't be installed and archived simultaneously","_":"Installs/uninstalls or activates/archives a sticker set "},"type":{"subclass":"changeStickerSet","properties":[{"name":"set_id","type":"int64"},{"name":"is_installed","type":"Bool"},{"name":"is_archived","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"sticker_set_ids":"Identifiers of viewed trending sticker sets","_":"Informs the server that some trending sticker sets have been viewed by the user "},"type":{"subclass":"viewTrendingStickerSets","properties":[{"name":"sticker_set_ids","type":"vector<int64>"}],"abstractClass":"Ok"}},{"documentation":{"sticker_type":"Type of the sticker sets to reorder ","sticker_set_ids":"Identifiers of installed sticker sets in the new correct order","_":"Changes the order of installed sticker sets "},"type":{"subclass":"reorderInstalledStickerSets","properties":[{"name":"sticker_type","type":"StickerType"},{"name":"sticker_set_ids","type":"vector<int64>"}],"abstractClass":"Ok"}},{"documentation":{"is_attached":"Pass true to return stickers and masks that were recently attached to photos or video files; pass false to return recently sent stickers","_":"Returns a list of recently used stickers "},"type":{"subclass":"getRecentStickers","properties":[{"name":"is_attached","type":"Bool"}],"abstractClass":"Stickers"}},{"documentation":{"is_attached":"Pass true to add the sticker to the list of stickers recently attached to photo or video files; pass false to add the sticker to the list of recently sent stickers ","sticker":"Sticker file to add","_":"Manually adds a new sticker to the list of recently used stickers. The new sticker is added to the top of the list. If the sticker was already in the list, it is removed from the list first. Only stickers belonging to a sticker set can be added to this list. Emoji stickers can't be added to recent stickers "},"type":{"subclass":"addRecentSticker","properties":[{"name":"is_attached","type":"Bool"},{"name":"sticker","type":"InputFile"}],"abstractClass":"Stickers"}},{"documentation":{"is_attached":"Pass true to remove the sticker from the list of stickers recently attached to photo or video files; pass false to remove the sticker from the list of recently sent stickers ","sticker":"Sticker file to delete","_":"Removes a sticker from the list of recently used stickers "},"type":{"subclass":"removeRecentSticker","properties":[{"name":"is_attached","type":"Bool"},{"name":"sticker","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"is_attached":"Pass true to clear the list of stickers recently attached to photo or video files; pass false to clear the list of recently sent stickers","_":"Clears the list of recently used stickers "},"type":{"subclass":"clearRecentStickers","properties":[{"name":"is_attached","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns favorite stickers"},"type":{"subclass":"getFavoriteStickers","properties":[],"abstractClass":"Stickers"}},{"documentation":{"sticker":"Sticker file to add","_":"Adds a new sticker to the list of favorite stickers. The new sticker is added to the top of the list. If the sticker was already in the list, it is removed from the list first. Only stickers belonging to a sticker set can be added to this list. Emoji stickers can't be added to favorite stickers "},"type":{"subclass":"addFavoriteSticker","properties":[{"name":"sticker","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"sticker":"Sticker file to delete from the list","_":"Removes a sticker from the list of favorite stickers "},"type":{"subclass":"removeFavoriteSticker","properties":[{"name":"sticker","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"sticker":"Sticker file identifier","_":"Returns emoji corresponding to a sticker. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object "},"type":{"subclass":"getStickerEmojis","properties":[{"name":"sticker","type":"InputFile"}],"abstractClass":"Emojis"}},{"documentation":{"text":"Text to search for ","exact_match":"Pass true if only emojis, which exactly match the text, needs to be returned ","input_language_codes":"List of possible IETF language tags of the user's input language; may be empty if unknown","_":"Searches for emojis by keywords. Supported only if the file database is enabled "},"type":{"subclass":"searchEmojis","properties":[{"name":"text","type":"string"},{"name":"exact_match","type":"Bool"},{"name":"input_language_codes","type":"vector<string>"}],"abstractClass":"Emojis"}},{"documentation":{"emoji":"The emoji","_":"Returns an animated emoji corresponding to a given emoji. Returns a 404 error if the emoji has no animated emoji "},"type":{"subclass":"getAnimatedEmoji","properties":[{"name":"emoji","type":"string"}],"abstractClass":"AnimatedEmoji"}},{"documentation":{"language_code":"Language code for which the emoji replacements will be suggested","_":"Returns an HTTP URL which can be used to automatically log in to the translation platform and suggest new emoji replacements. The URL will be valid for 30 seconds after generation "},"type":{"subclass":"getEmojiSuggestionsUrl","properties":[{"name":"language_code","type":"string"}],"abstractClass":"HttpUrl"}},{"documentation":{"custom_emoji_ids":"Identifiers of custom emoji stickers. At most 200 custom emoji stickers can be received simultaneously","_":"Returns list of custom emoji stickers by their identifiers. Stickers are returned in arbitrary order. Only found stickers are returned "},"type":{"subclass":"getCustomEmojiStickers","properties":[{"name":"custom_emoji_ids","type":"vector<int64>"}],"abstractClass":"Stickers"}},{"documentation":{"_":"Returns saved animations"},"type":{"subclass":"getSavedAnimations","properties":[],"abstractClass":"Animations"}},{"documentation":{"animation":"The animation file to be added. Only animations known to the server (i.e., successfully sent via a message) can be added to the list","_":"Manually adds a new animation to the list of saved animations. The new animation is added to the beginning of the list. If the animation was already in the list, it is removed first. Only non-secret video animations with MIME type \"video/mp4\" can be added to the list "},"type":{"subclass":"addSavedAnimation","properties":[{"name":"animation","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"animation":"Animation file to be removed","_":"Removes an animation from the list of saved animations "},"type":{"subclass":"removeSavedAnimation","properties":[{"name":"animation","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns up to 20 recently used inline bots in the order of their last usage"},"type":{"subclass":"getRecentInlineBots","properties":[],"abstractClass":"Users"}},{"documentation":{"prefix":"Hashtag prefix to search for ","limit":"The maximum number of hashtags to be returned","_":"Searches for recently used hashtags by their prefix "},"type":{"subclass":"searchHashtags","properties":[{"name":"prefix","type":"string"},{"name":"limit","type":"int32"}],"abstractClass":"Hashtags"}},{"documentation":{"hashtag":"Hashtag to delete","_":"Removes a hashtag from the list of recently used hashtags "},"type":{"subclass":"removeRecentHashtag","properties":[{"name":"hashtag","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"text":"Message text with formatting","_":"Returns a web page preview by the text of the message. Do not call this function too often. Returns a 404 error if the web page has no preview "},"type":{"subclass":"getWebPagePreview","properties":[{"name":"text","type":"formattedText"}],"abstractClass":"WebPage"}},{"documentation":{"url":"The web page URL ","force_full":"Pass true to get full instant view for the web page","_":"Returns an instant view version of a web page if available. Returns a 404 error if the web page has no instant view page "},"type":{"subclass":"getWebPageInstantView","properties":[{"name":"url","type":"string"},{"name":"force_full","type":"Bool"}],"abstractClass":"WebPageInstantView"}},{"documentation":{"photo":"Profile photo to set","_":"Changes a profile photo for the current user "},"type":{"subclass":"setProfilePhoto","properties":[{"name":"photo","type":"InputChatPhoto"}],"abstractClass":"Ok"}},{"documentation":{"profile_photo_id":"Identifier of the profile photo to delete","_":"Deletes a profile photo "},"type":{"subclass":"deleteProfilePhoto","properties":[{"name":"profile_photo_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"first_name":"The new value of the first name for the current user; 1-64 characters ","last_name":"The new value of the optional last name for the current user; 0-64 characters","_":"Changes the first and last name of the current user "},"type":{"subclass":"setName","properties":[{"name":"first_name","type":"string"},{"name":"last_name","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"bio":"The new value of the user bio; 0-getOption(\"bio_length_max\") characters without line feeds","_":"Changes the bio of the current user "},"type":{"subclass":"setBio","properties":[{"name":"bio","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"username":"The new value of the username. Use an empty string to remove the username. The username can't be completely removed if there is another active or disabled username","_":"Changes the editable username of the current user "},"type":{"subclass":"setUsername","properties":[{"name":"username","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"username":"The username to change ","is_active":"Pass true to activate the username; pass false to disable it","_":"Changes active state for a username of the current user. The editable username can't be disabled. May return an error with a message \"USERNAMES_ACTIVE_TOO_MUCH\" if the maximum number of active usernames has been reached "},"type":{"subclass":"toggleUsernameIsActive","properties":[{"name":"username","type":"string"},{"name":"is_active","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"usernames":"The new order of active usernames. All currently active usernames must be specified","_":"Changes order of active usernames of the current user "},"type":{"subclass":"reorderActiveUsernames","properties":[{"name":"usernames","type":"vector<string>"}],"abstractClass":"Ok"}},{"documentation":{"emoji_status":"New emoji status; pass null to switch to the default badge ","duration":"Duration of the status, in seconds; pass 0 to keep the status active until it will be changed manually","_":"Changes the emoji status of the current user; for Telegram Premium users only "},"type":{"subclass":"setEmojiStatus","properties":[{"name":"emoji_status","type":"emojiStatus"},{"name":"duration","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"location":"The new location of the user","_":"Changes the location of the current user. Needs to be called if getOption(\"is_location_visible\") is true and location changes for more than 1 kilometer "},"type":{"subclass":"setLocation","properties":[{"name":"location","type":"location"}],"abstractClass":"Ok"}},{"documentation":{"phone_number":"The new phone number of the user in international format ","settings":"Settings for the authentication of the user's phone number; pass null to use default settings","_":"Changes the phone number of the user and sends an authentication code to the user's new phone number. On success, returns information about the sent code "},"type":{"subclass":"changePhoneNumber","properties":[{"name":"phone_number","type":"string"},{"name":"settings","type":"phoneNumberAuthenticationSettings"}],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"_":"Resends the authentication code sent to confirm a new phone number for the current user. Works only if the previously received authenticationCodeInfo next_code_type was not null and the server-specified timeout has passed"},"type":{"subclass":"resendChangePhoneNumberCode","properties":[],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"code":"Authentication code to check","_":"Checks the authentication code sent to confirm a new phone number of the user "},"type":{"subclass":"checkChangePhoneNumberCode","properties":[{"name":"code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns an HTTPS link, which can be used to get information about the current user"},"type":{"subclass":"getUserLink","properties":[],"abstractClass":"UserLink"}},{"documentation":{"token":"Token to search for","_":"Searches a user by a token from the user's link "},"type":{"subclass":"searchUserByToken","properties":[{"name":"token","type":"string"}],"abstractClass":"User"}},{"documentation":{"scope":"The scope to which the commands are relevant; pass null to change commands in the default bot command scope ","language_code":"A two-letter ISO 639-1 language code. If empty, the commands will be applied to all users from the given scope, for which language there are no dedicated commands ","commands":"List of the bot's commands","_":"Sets the list of commands supported by the bot for the given user scope and language; for bots only "},"type":{"subclass":"setCommands","properties":[{"name":"scope","type":"BotCommandScope"},{"name":"language_code","type":"string"},{"name":"commands","type":"vector<botCommand>"}],"abstractClass":"Ok"}},{"documentation":{"scope":"The scope to which the commands are relevant; pass null to delete commands in the default bot command scope ","language_code":"A two-letter ISO 639-1 language code or an empty string","_":"Deletes commands supported by the bot for the given user scope and language; for bots only "},"type":{"subclass":"deleteCommands","properties":[{"name":"scope","type":"BotCommandScope"},{"name":"language_code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"scope":"The scope to which the commands are relevant; pass null to get commands in the default bot command scope ","language_code":"A two-letter ISO 639-1 language code or an empty string","_":"Returns the list of commands supported by the bot for the given user scope and language; for bots only "},"type":{"subclass":"getCommands","properties":[{"name":"scope","type":"BotCommandScope"},{"name":"language_code","type":"string"}],"abstractClass":"BotCommands"}},{"documentation":{"user_id":"Identifier of the user or 0 to set menu button for all users ","menu_button":"New menu button","_":"Sets menu button for the given user or for all users; for bots only "},"type":{"subclass":"setMenuButton","properties":[{"name":"user_id","type":"int53"},{"name":"menu_button","type":"botMenuButton"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"Identifier of the user or 0 to get the default menu button","_":"Returns menu button set by the bot for the given user; for bots only "},"type":{"subclass":"getMenuButton","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"BotMenuButton"}},{"documentation":{"default_group_administrator_rights":"Default administrator rights for adding the bot to basic group and supergroup chats; may be null","_":"Sets default administrator rights for adding the bot to basic group and supergroup chats; for bots only "},"type":{"subclass":"setDefaultGroupAdministratorRights","properties":[{"name":"default_group_administrator_rights","type":"chatAdministratorRights"}],"abstractClass":"Ok"}},{"documentation":{"default_channel_administrator_rights":"Default administrator rights for adding the bot to channels; may be null","_":"Sets default administrator rights for adding the bot to channel chats; for bots only "},"type":{"subclass":"setDefaultChannelAdministratorRights","properties":[{"name":"default_channel_administrator_rights","type":"chatAdministratorRights"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns all active sessions of the current user"},"type":{"subclass":"getActiveSessions","properties":[],"abstractClass":"Sessions"}},{"documentation":{"session_id":"Session identifier","_":"Terminates a session of the current user "},"type":{"subclass":"terminateSession","properties":[{"name":"session_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"_":"Terminates all other sessions of the current user"},"type":{"subclass":"terminateAllOtherSessions","properties":[],"abstractClass":"Ok"}},{"documentation":{"session_id":"Session identifier ","can_accept_calls":"Pass true to allow accepting incoming calls by the session; pass false otherwise","_":"Toggles whether a session can accept incoming calls "},"type":{"subclass":"toggleSessionCanAcceptCalls","properties":[{"name":"session_id","type":"int64"},{"name":"can_accept_calls","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"session_id":"Session identifier ","can_accept_secret_chats":"Pass true to allow accepring secret chats by the session; pass false otherwise","_":"Toggles whether a session can accept incoming secret chats "},"type":{"subclass":"toggleSessionCanAcceptSecretChats","properties":[{"name":"session_id","type":"int64"},{"name":"can_accept_secret_chats","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"inactive_session_ttl_days":"New number of days of inactivity before sessions will be automatically terminated; 1-366 days","_":"Changes the period of inactivity after which sessions will automatically be terminated "},"type":{"subclass":"setInactiveSessionTtl","properties":[{"name":"inactive_session_ttl_days","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns all website where the current user used Telegram to log in"},"type":{"subclass":"getConnectedWebsites","properties":[],"abstractClass":"ConnectedWebsites"}},{"documentation":{"website_id":"Website identifier","_":"Disconnects website from the current user's Telegram account "},"type":{"subclass":"disconnectWebsite","properties":[{"name":"website_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"_":"Disconnects all websites from the current user's Telegram account"},"type":{"subclass":"disconnectAllWebsites","properties":[],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel ","username":"New value of the username. Use an empty string to remove the username. The username can't be completely removed if there is another active or disabled username","_":"Changes the editable username of a supergroup or channel, requires owner privileges in the supergroup or channel "},"type":{"subclass":"setSupergroupUsername","properties":[{"name":"supergroup_id","type":"int53"},{"name":"username","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel ","username":"The username to change ","is_active":"Pass true to activate the username; pass false to disable it","_":"Changes active state for a username of a supergroup or channel, requires owner privileges in the supergroup or channel. The editable username can't be disabled. May return an error with a message \"USERNAMES_ACTIVE_TOO_MUCH\" if the maximum number of active usernames has been reached "},"type":{"subclass":"toggleSupergroupUsernameIsActive","properties":[{"name":"supergroup_id","type":"int53"},{"name":"username","type":"string"},{"name":"is_active","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel","_":"Disables all active non-editable usernames of a supergroup or channel, requires owner privileges in the supergroup or channel "},"type":{"subclass":"disableAllSupergroupUsernames","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel ","usernames":"The new order of active usernames. All currently active usernames must be specified","_":"Changes order of active usernames of a supergroup or channel, requires owner privileges in the supergroup or channel "},"type":{"subclass":"reorderSupergroupActiveUsernames","properties":[{"name":"supergroup_id","type":"int53"},{"name":"usernames","type":"vector<string>"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup ","sticker_set_id":"New value of the supergroup sticker set identifier. Use 0 to remove the supergroup sticker set","_":"Changes the sticker set of a supergroup; requires can_change_info administrator right "},"type":{"subclass":"setSupergroupStickerSet","properties":[{"name":"supergroup_id","type":"int53"},{"name":"sticker_set_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the channel ","sign_messages":"New value of sign_messages","_":"Toggles whether sender signature is added to sent messages in a channel; requires can_change_info administrator right "},"type":{"subclass":"toggleSupergroupSignMessages","properties":[{"name":"supergroup_id","type":"int53"},{"name":"sign_messages","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup ","join_to_send_messages":"New value of join_to_send_messages","_":"Toggles whether joining is mandatory to send messages to a discussion supergroup; requires can_restrict_members administrator right "},"type":{"subclass":"toggleSupergroupJoinToSendMessages","properties":[{"name":"supergroup_id","type":"int53"},{"name":"join_to_send_messages","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the channel ","join_by_request":"New value of join_by_request","_":"Toggles whether all users directly joining the supergroup need to be approved by supergroup administrators; requires can_restrict_members administrator right "},"type":{"subclass":"toggleSupergroupJoinByRequest","properties":[{"name":"supergroup_id","type":"int53"},{"name":"join_by_request","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"The identifier of the supergroup ","is_all_history_available":"The new value of is_all_history_available","_":"Toggles whether the message history of a supergroup is available to new members; requires can_change_info administrator right "},"type":{"subclass":"toggleSupergroupIsAllHistoryAvailable","properties":[{"name":"supergroup_id","type":"int53"},{"name":"is_all_history_available","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"The identifier of the supergroup, which isn't a broadcast group ","is_aggressive_anti_spam_enabled":"The new value of is_aggressive_anti_spam_enabled","_":"Toggles whether aggressive anti-spam checks are enabled in the supergroup; requires can_delete_messages administrator right. Can be called only if the supergroup has at least getOption(\"aggressive_anti_spam_supergroup_member_count_min\") members "},"type":{"subclass":"toggleSupergroupIsAggressiveAntiSpamEnabled","properties":[{"name":"supergroup_id","type":"int53"},{"name":"is_aggressive_anti_spam_enabled","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup ","is_forum":"New value of is_forum. A supergroup can be converted to a forum, only if it has at least getOption(\"forum_member_count_min\") members","_":"Toggles whether the supergroup is a forum; requires owner privileges in the supergroup "},"type":{"subclass":"toggleSupergroupIsForum","properties":[{"name":"supergroup_id","type":"int53"},{"name":"is_forum","type":"Bool"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup","_":"Upgrades supergroup to a broadcast group; requires owner privileges in the supergroup "},"type":{"subclass":"toggleSupergroupIsBroadcastGroup","properties":[{"name":"supergroup_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Supergroup identifier ","message_ids":"Identifiers of messages to report","_":"Reports messages in a supergroup as spam; requires administrator rights in the supergroup "},"type":{"subclass":"reportSupergroupSpam","properties":[{"name":"supergroup_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Supergroup identifier ","message_id":"Identifier of the erroneously deleted message","_":"Reports a false deletion of a message by aggressive anti-spam checks; requires administrator rights in the supergroup. Can be called only for messages from chatEventMessageDeleted with can_report_anti_spam_false_positive == true "},"type":{"subclass":"reportSupergroupAntiSpamFalsePositive","properties":[{"name":"supergroup_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"supergroup_id":"Identifier of the supergroup or channel ","filter":"The type of users to return; pass null to use supergroupMembersFilterRecent ","offset":"Number of users to skip ","limit":"The maximum number of users be returned; up to 200","_":"Returns information about members or banned users in a supergroup or channel. Can be used only if supergroupFullInfo.can_get_members == true; additionally, administrator privileges may be required for some filters "},"type":{"subclass":"getSupergroupMembers","properties":[{"name":"supergroup_id","type":"int53"},{"name":"filter","type":"SupergroupMembersFilter"},{"name":"offset","type":"int32"},{"name":"limit","type":"int32"}],"abstractClass":"ChatMembers"}},{"documentation":{"secret_chat_id":"Secret chat identifier","_":"Closes a secret chat, effectively transferring its state to secretChatStateClosed "},"type":{"subclass":"closeSecretChat","properties":[{"name":"secret_chat_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","query":"Search query by which to filter events ","from_event_id":"Identifier of an event from which to return results. Use 0 to get results from the latest events ","limit":"The maximum number of events to return; up to 100 ","filters":"The types of events to return; pass null to get chat events of all types ","user_ids":"User identifiers by which to filter events. By default, events relating to all users will be returned","_":"Returns a list of service actions taken by chat members and administrators in the last 48 hours. Available only for supergroups and channels. Requires administrator rights. Returns results in reverse chronological order (i.e., in order of decreasing event_id) "},"type":{"subclass":"getChatEventLog","properties":[{"name":"chat_id","type":"int53"},{"name":"query","type":"string"},{"name":"from_event_id","type":"int64"},{"name":"limit","type":"int32"},{"name":"filters","type":"chatEventLogFilters"},{"name":"user_ids","type":"vector<int53>"}],"abstractClass":"ChatEvents"}},{"documentation":{"input_invoice":"The invoice ","theme":"Preferred payment form theme; pass null to use the default theme","_":"Returns an invoice payment form. This method must be called when the user presses inlineKeyboardButtonBuy "},"type":{"subclass":"getPaymentForm","properties":[{"name":"input_invoice","type":"InputInvoice"},{"name":"theme","type":"themeParameters"}],"abstractClass":"PaymentForm"}},{"documentation":{"input_invoice":"The invoice ","order_info":"The order information, provided by the user; pass null if empty ","allow_save":"Pass true to save the order information","_":"Validates the order information provided by a user and returns the available shipping options for a flexible invoice "},"type":{"subclass":"validateOrderInfo","properties":[{"name":"input_invoice","type":"InputInvoice"},{"name":"order_info","type":"orderInfo"},{"name":"allow_save","type":"Bool"}],"abstractClass":"ValidatedOrderInfo"}},{"documentation":{"input_invoice":"The invoice ","payment_form_id":"Payment form identifier returned by getPaymentForm ","order_info_id":"Identifier returned by validateOrderInfo, or an empty string ","shipping_option_id":"Identifier of a chosen shipping option, if applicable ","credentials":"The credentials chosen by user for payment ","tip_amount":"Chosen by the user amount of tip in the smallest units of the currency","_":"Sends a filled-out payment form to the bot for final verification "},"type":{"subclass":"sendPaymentForm","properties":[{"name":"input_invoice","type":"InputInvoice"},{"name":"payment_form_id","type":"int64"},{"name":"order_info_id","type":"string"},{"name":"shipping_option_id","type":"string"},{"name":"credentials","type":"InputCredentials"},{"name":"tip_amount","type":"int53"}],"abstractClass":"PaymentResult"}},{"documentation":{"chat_id":"Chat identifier of the messagePaymentSuccessful message ","message_id":"Message identifier","_":"Returns information about a successful payment "},"type":{"subclass":"getPaymentReceipt","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"}],"abstractClass":"PaymentReceipt"}},{"documentation":{"_":"Returns saved order information. Returns a 404 error if there is no saved order information"},"type":{"subclass":"getSavedOrderInfo","properties":[],"abstractClass":"OrderInfo"}},{"documentation":{"_":"Deletes saved order information"},"type":{"subclass":"deleteSavedOrderInfo","properties":[],"abstractClass":"Ok"}},{"documentation":{"_":"Deletes saved credentials for all payment provider bots"},"type":{"subclass":"deleteSavedCredentials","properties":[],"abstractClass":"Ok"}},{"documentation":{"invoice":"Information about the invoice of the type inputMessageInvoice","_":"Creates a link for the given invoice; for bots only "},"type":{"subclass":"createInvoiceLink","properties":[{"name":"invoice","type":"InputMessageContent"}],"abstractClass":"HttpUrl"}},{"documentation":{"_":"Returns a user that can be contacted to get support"},"type":{"subclass":"getSupportUser","properties":[],"abstractClass":"User"}},{"documentation":{"for_dark_theme":"Pass true to order returned backgrounds for a dark theme","_":"Returns backgrounds installed by the user "},"type":{"subclass":"getBackgrounds","properties":[{"name":"for_dark_theme","type":"Bool"}],"abstractClass":"Backgrounds"}},{"documentation":{"name":"Background name ","type":"Background type","_":"Constructs a persistent HTTP URL for a background "},"type":{"subclass":"getBackgroundUrl","properties":[{"name":"name","type":"string"},{"name":"type","type":"BackgroundType"}],"abstractClass":"HttpUrl"}},{"documentation":{"name":"The name of the background","_":"Searches for a background by its name "},"type":{"subclass":"searchBackground","properties":[{"name":"name","type":"string"}],"abstractClass":"Background"}},{"documentation":{"background":"The input background to use; pass null to create a new filled backgrounds or to remove the current background ","type":"Background type; pass null to use the default type of the remote background or to remove the current background ","for_dark_theme":"Pass true if the background is changed for a dark theme","_":"Changes the background selected by the user; adds background to the list of installed backgrounds "},"type":{"subclass":"setBackground","properties":[{"name":"background","type":"InputBackground"},{"name":"type","type":"BackgroundType"},{"name":"for_dark_theme","type":"Bool"}],"abstractClass":"Background"}},{"documentation":{"background_id":"The background identifier","_":"Removes background from the list of installed backgrounds "},"type":{"subclass":"removeBackground","properties":[{"name":"background_id","type":"int64"}],"abstractClass":"Ok"}},{"documentation":{"_":"Resets list of installed backgrounds to its default value"},"type":{"subclass":"resetBackgrounds","properties":[],"abstractClass":"Ok"}},{"documentation":{"only_local":"Pass true to get only locally available information without sending network requests","_":"Returns information about the current localization target. This is an offline request if only_local is true. Can be called before authorization "},"type":{"subclass":"getLocalizationTargetInfo","properties":[{"name":"only_local","type":"Bool"}],"abstractClass":"LocalizationTargetInfo"}},{"documentation":{"language_pack_id":"Language pack identifier","_":"Returns information about a language pack. Returned language pack identifier may be different from a provided one. Can be called before authorization "},"type":{"subclass":"getLanguagePackInfo","properties":[{"name":"language_pack_id","type":"string"}],"abstractClass":"LanguagePackInfo"}},{"documentation":{"language_pack_id":"Language pack identifier of the strings to be returned ","keys":"Language pack keys of the strings to be returned; leave empty to request all available strings","_":"Returns strings from a language pack in the current localization target by their keys. Can be called before authorization "},"type":{"subclass":"getLanguagePackStrings","properties":[{"name":"language_pack_id","type":"string"},{"name":"keys","type":"vector<string>"}],"abstractClass":"LanguagePackStrings"}},{"documentation":{"language_pack_id":"Language pack identifier","_":"Fetches the latest versions of all strings from a language pack in the current localization target from the server. This method doesn't need to be called explicitly for the current used/base language packs. Can be called before authorization "},"type":{"subclass":"synchronizeLanguagePack","properties":[{"name":"language_pack_id","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"language_pack_id":"Identifier of a language pack to be added; may be different from a name that is used in an \"https://t.me/setlanguage/\" link","_":"Adds a custom server language pack to the list of installed language packs in current localization target. Can be called before authorization "},"type":{"subclass":"addCustomServerLanguagePack","properties":[{"name":"language_pack_id","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"info":"Information about the language pack. Language pack ID must start with 'X', consist only of English letters, digits and hyphens, and must not exceed 64 characters. Can be called before authorization ","strings":"Strings of the new language pack","_":"Adds or changes a custom local language pack to the current localization target "},"type":{"subclass":"setCustomLanguagePack","properties":[{"name":"info","type":"languagePackInfo"},{"name":"strings","type":"vector<languagePackString>"}],"abstractClass":"Ok"}},{"documentation":{"info":"New information about the custom local language pack","_":"Edits information about a custom local language pack in the current localization target. Can be called before authorization "},"type":{"subclass":"editCustomLanguagePackInfo","properties":[{"name":"info","type":"languagePackInfo"}],"abstractClass":"Ok"}},{"documentation":{"language_pack_id":"Identifier of a previously added custom local language pack in the current localization target ","new_string":"New language pack string","_":"Adds, edits or deletes a string in a custom local language pack. Can be called before authorization "},"type":{"subclass":"setCustomLanguagePackString","properties":[{"name":"language_pack_id","type":"string"},{"name":"new_string","type":"languagePackString"}],"abstractClass":"Ok"}},{"documentation":{"language_pack_id":"Identifier of the language pack to delete","_":"Deletes all information about a language pack in the current localization target. The language pack which is currently in use (including base language pack) or is being synchronized can't be deleted. Can be called before authorization "},"type":{"subclass":"deleteLanguagePack","properties":[{"name":"language_pack_id","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"device_token":"Device token ","other_user_ids":"List of user identifiers of other users currently using the application","_":"Registers the currently used device for receiving push notifications. Returns a globally unique identifier of the push notification subscription "},"type":{"subclass":"registerDevice","properties":[{"name":"device_token","type":"DeviceToken"},{"name":"other_user_ids","type":"vector<int53>"}],"abstractClass":"PushReceiverId"}},{"documentation":{"payload":"JSON-encoded push notification payload with all fields sent by the server, and \"google.sent_time\" and \"google.notification.sound\" fields added","_":"Handles a push notification. Returns error with code 406 if the push notification is not supported and connection to the server is required to fetch new data. Can be called before authorization "},"type":{"subclass":"processPushNotification","properties":[{"name":"payload","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"payload":"JSON-encoded push notification payload","_":"Returns a globally unique push notification subscription identifier for identification of an account, which has received a push notification. Can be called synchronously "},"type":{"subclass":"getPushReceiverId","properties":[{"name":"payload","type":"string"}],"abstractClass":"PushReceiverId"}},{"documentation":{"referrer":"Google Play referrer to identify the user","_":"Returns t.me URLs recently visited by a newly registered user "},"type":{"subclass":"getRecentlyVisitedTMeUrls","properties":[{"name":"referrer","type":"string"}],"abstractClass":"TMeUrls"}},{"documentation":{"setting":"The privacy setting ","rules":"The new privacy rules","_":"Changes user privacy settings "},"type":{"subclass":"setUserPrivacySettingRules","properties":[{"name":"setting","type":"UserPrivacySetting"},{"name":"rules","type":"userPrivacySettingRules"}],"abstractClass":"Ok"}},{"documentation":{"setting":"The privacy setting","_":"Returns the current privacy settings "},"type":{"subclass":"getUserPrivacySettingRules","properties":[{"name":"setting","type":"UserPrivacySetting"}],"abstractClass":"UserPrivacySettingRules"}},{"documentation":{"name":"The name of the option","_":"Returns the value of an option by its name. (Check the list of available options on https://core.telegram.org/tdlib/options.) Can be called before authorization. Can be called synchronously for options \"version\" and \"commit_hash\" "},"type":{"subclass":"getOption","properties":[{"name":"name","type":"string"}],"abstractClass":"OptionValue"}},{"documentation":{"name":"The name of the option ","value":"The new value of the option; pass null to reset option value to a default value","_":"Sets the value of an option. (Check the list of available options on https://core.telegram.org/tdlib/options.) Only writable options can be set. Can be called before authorization "},"type":{"subclass":"setOption","properties":[{"name":"name","type":"string"},{"name":"value","type":"OptionValue"}],"abstractClass":"Ok"}},{"documentation":{"ttl":"New account TTL","_":"Changes the period of inactivity after which the account of the current user will automatically be deleted "},"type":{"subclass":"setAccountTtl","properties":[{"name":"ttl","type":"accountTtl"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns the period of inactivity after which the account of the current user will automatically be deleted"},"type":{"subclass":"getAccountTtl","properties":[],"abstractClass":"AccountTtl"}},{"documentation":{"reason":"The reason why the account was deleted; optional ","password":"The 2-step verification password of the current user. If not specified, account deletion can be canceled within one week","_":"Deletes the account of the current user, deleting all information associated with the user from the server. The phone number of the account can be used to create a new account. Can be called before authorization when the current authorization state is authorizationStateWaitPassword "},"type":{"subclass":"deleteAccount","properties":[{"name":"reason","type":"string"},{"name":"password","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"ttl":"New message TTL; must be from 0 up to 365 * 86400 and be divisible by 86400. If 0, then messages aren't deleted automatically","_":"Changes the default message Time To Live setting (self-destruct timer) for new chats "},"type":{"subclass":"setDefaultMessageTtl","properties":[{"name":"ttl","type":"messageTtl"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns default message Time To Live setting (self-destruct timer) for new chats"},"type":{"subclass":"getDefaultMessageTtl","properties":[],"abstractClass":"MessageTtl"}},{"documentation":{"chat_id":"Chat identifier","_":"Removes a chat action bar without any other action "},"type":{"subclass":"removeChatActionBar","properties":[{"name":"chat_id","type":"int53"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_ids":"Identifiers of reported messages; may be empty to report the whole chat ","reason":"The reason for reporting the chat ","text":"Additional report details; 0-1024 characters","_":"Reports a chat to the Telegram moderators. A chat can be reported only from the chat action bar, or if chat.can_be_reported "},"type":{"subclass":"reportChat","properties":[{"name":"chat_id","type":"int53"},{"name":"message_ids","type":"vector<int53>"},{"name":"reason","type":"ChatReportReason"},{"name":"text","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","file_id":"Identifier of the photo to report. Only full photos from chatPhoto can be reported ","reason":"The reason for reporting the chat photo ","text":"Additional report details; 0-1024 characters","_":"Reports a chat photo to the Telegram moderators. A chat photo can be reported only if chat.can_be_reported "},"type":{"subclass":"reportChatPhoto","properties":[{"name":"chat_id","type":"int53"},{"name":"file_id","type":"int32"},{"name":"reason","type":"ChatReportReason"},{"name":"text","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","sender_id":"Identifier of the sender, which added the reaction","_":"Reports reactions set on a message to the Telegram moderators. Reactions on a message can be reported only if message.can_report_reactions "},"type":{"subclass":"reportMessageReactions","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"sender_id","type":"MessageSender"}],"abstractClass":"Ok"}},{"documentation":{"chat_id":"Chat identifier ","is_dark":"Pass true if a dark theme is used by the application","_":"Returns detailed statistics about a chat. Currently, this method can be used only for supergroups and channels. Can be used only if supergroupFullInfo.can_get_statistics == true "},"type":{"subclass":"getChatStatistics","properties":[{"name":"chat_id","type":"int53"},{"name":"is_dark","type":"Bool"}],"abstractClass":"ChatStatistics"}},{"documentation":{"chat_id":"Chat identifier ","message_id":"Message identifier ","is_dark":"Pass true if a dark theme is used by the application","_":"Returns detailed statistics about a message. Can be used only if message.can_get_statistics == true "},"type":{"subclass":"getMessageStatistics","properties":[{"name":"chat_id","type":"int53"},{"name":"message_id","type":"int53"},{"name":"is_dark","type":"Bool"}],"abstractClass":"MessageStatistics"}},{"documentation":{"chat_id":"Chat identifier ","token":"The token for graph loading ","x":"X-value for zoomed in graph or 0 otherwise","_":"Loads an asynchronous or a zoomed in statistical graph "},"type":{"subclass":"getStatisticalGraph","properties":[{"name":"chat_id","type":"int53"},{"name":"token","type":"string"},{"name":"x","type":"int53"}],"abstractClass":"StatisticalGraph"}},{"documentation":{"_":"Returns database statistics"},"type":{"subclass":"getDatabaseStatistics","properties":[],"abstractClass":"DatabaseStatistics"}},{"documentation":{"type":"The new network type; pass null to set network type to networkTypeOther","_":"Sets the current network type. Can be called before authorization. Calling this method forces all network connections to reopen, mitigating the delay in switching between different networks, so it must be called whenever the network is changed, even if the network type remains the same. -Network type is used to check whether the library can use the network at all and also for collecting detailed network data usage statistics "},"type":{"subclass":"setNetworkType","properties":[{"name":"type","type":"NetworkType"}],"abstractClass":"Ok"}},{"documentation":{"only_current":"Pass true to get statistics only for the current library launch","_":"Returns network data usage statistics. Can be called before authorization "},"type":{"subclass":"getNetworkStatistics","properties":[{"name":"only_current","type":"Bool"}],"abstractClass":"NetworkStatistics"}},{"documentation":{"entry":"The network statistics entry with the data to be added to statistics","_":"Adds the specified data to data usage statistics. Can be called before authorization "},"type":{"subclass":"addNetworkStatistics","properties":[{"name":"entry","type":"NetworkStatisticsEntry"}],"abstractClass":"Ok"}},{"documentation":{"_":"Resets all network data usage statistics to zero. Can be called before authorization"},"type":{"subclass":"resetNetworkStatistics","properties":[],"abstractClass":"Ok"}},{"documentation":{"_":"Returns auto-download settings presets for the current user"},"type":{"subclass":"getAutoDownloadSettingsPresets","properties":[],"abstractClass":"AutoDownloadSettingsPresets"}},{"documentation":{"settings":"New user auto-download settings ","type":"Type of the network for which the new settings are relevant","_":"Sets auto-download settings "},"type":{"subclass":"setAutoDownloadSettings","properties":[{"name":"settings","type":"autoDownloadSettings"},{"name":"type","type":"NetworkType"}],"abstractClass":"Ok"}},{"documentation":{"bank_card_number":"The bank card number","_":"Returns information about a bank card "},"type":{"subclass":"getBankCardInfo","properties":[{"name":"bank_card_number","type":"string"}],"abstractClass":"BankCardInfo"}},{"documentation":{"type":"Telegram Passport element type ","password":"The 2-step verification password of the current user","_":"Returns one of the available Telegram Passport elements "},"type":{"subclass":"getPassportElement","properties":[{"name":"type","type":"PassportElementType"},{"name":"password","type":"string"}],"abstractClass":"PassportElement"}},{"documentation":{"password":"The 2-step verification password of the current user","_":"Returns all available Telegram Passport elements "},"type":{"subclass":"getAllPassportElements","properties":[{"name":"password","type":"string"}],"abstractClass":"PassportElements"}},{"documentation":{"element":"Input Telegram Passport element ","password":"The 2-step verification password of the current user","_":"Adds an element to the user's Telegram Passport. May return an error with a message \"PHONE_VERIFICATION_NEEDED\" or \"EMAIL_VERIFICATION_NEEDED\" if the chosen phone number or the chosen email address must be verified first "},"type":{"subclass":"setPassportElement","properties":[{"name":"element","type":"InputPassportElement"},{"name":"password","type":"string"}],"abstractClass":"PassportElement"}},{"documentation":{"type":"Element type","_":"Deletes a Telegram Passport element "},"type":{"subclass":"deletePassportElement","properties":[{"name":"type","type":"PassportElementType"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"User identifier ","errors":"The errors","_":"Informs the user that some of the elements in their Telegram Passport contain errors; for bots only. The user will not be able to resend the elements, until the errors are fixed "},"type":{"subclass":"setPassportElementErrors","properties":[{"name":"user_id","type":"int53"},{"name":"errors","type":"vector<inputPassportElementError>"}],"abstractClass":"Ok"}},{"documentation":{"country_code":"A two-letter ISO 3166-1 alpha-2 country code","_":"Returns an IETF language tag of the language preferred in the country, which must be used to fill native fields in Telegram Passport personal details. Returns a 404 error if unknown "},"type":{"subclass":"getPreferredCountryLanguage","properties":[{"name":"country_code","type":"string"}],"abstractClass":"Text"}},{"documentation":{"phone_number":"The phone number of the user, in international format ","settings":"Settings for the authentication of the user's phone number; pass null to use default settings","_":"Sends a code to verify a phone number to be added to a user's Telegram Passport "},"type":{"subclass":"sendPhoneNumberVerificationCode","properties":[{"name":"phone_number","type":"string"},{"name":"settings","type":"phoneNumberAuthenticationSettings"}],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"_":"Resends the code to verify a phone number to be added to a user's Telegram Passport"},"type":{"subclass":"resendPhoneNumberVerificationCode","properties":[],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"code":"Verification code to check","_":"Checks the phone number verification code for Telegram Passport "},"type":{"subclass":"checkPhoneNumberVerificationCode","properties":[{"name":"code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"email_address":"Email address","_":"Sends a code to verify an email address to be added to a user's Telegram Passport "},"type":{"subclass":"sendEmailAddressVerificationCode","properties":[{"name":"email_address","type":"string"}],"abstractClass":"EmailAddressAuthenticationCodeInfo"}},{"documentation":{"_":"Resends the code to verify an email address to be added to a user's Telegram Passport"},"type":{"subclass":"resendEmailAddressVerificationCode","properties":[],"abstractClass":"EmailAddressAuthenticationCodeInfo"}},{"documentation":{"code":"Verification code to check","_":"Checks the email address verification code for Telegram Passport "},"type":{"subclass":"checkEmailAddressVerificationCode","properties":[{"name":"code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"bot_user_id":"User identifier of the service's bot ","scope":"Telegram Passport element types requested by the service ","public_key":"Service's public key ","nonce":"Unique request identifier provided by the service","_":"Returns a Telegram Passport authorization form for sharing data with a service "},"type":{"subclass":"getPassportAuthorizationForm","properties":[{"name":"bot_user_id","type":"int53"},{"name":"scope","type":"string"},{"name":"public_key","type":"string"},{"name":"nonce","type":"string"}],"abstractClass":"PassportAuthorizationForm"}},{"documentation":{"autorization_form_id":"Authorization form identifier ","password":"The 2-step verification password of the current user","_":"Returns already available Telegram Passport elements suitable for completing a Telegram Passport authorization form. Result can be received only once for each authorization form "},"type":{"subclass":"getPassportAuthorizationFormAvailableElements","properties":[{"name":"autorization_form_id","type":"int32"},{"name":"password","type":"string"}],"abstractClass":"PassportElementsWithErrors"}},{"documentation":{"autorization_form_id":"Authorization form identifier ","types":"Types of Telegram Passport elements chosen by user to complete the authorization form","_":"Sends a Telegram Passport authorization form, effectively sharing data with the service. This method must be called after getPassportAuthorizationFormAvailableElements if some previously available elements are going to be reused "},"type":{"subclass":"sendPassportAuthorizationForm","properties":[{"name":"autorization_form_id","type":"int32"},{"name":"types","type":"vector<PassportElementType>"}],"abstractClass":"Ok"}},{"documentation":{"hash":"Hash value from the link ","phone_number":"Phone number value from the link ","settings":"Settings for the authentication of the user's phone number; pass null to use default settings","_":"Sends phone number confirmation code to handle links of the type internalLinkTypePhoneNumberConfirmation "},"type":{"subclass":"sendPhoneNumberConfirmationCode","properties":[{"name":"hash","type":"string"},{"name":"phone_number","type":"string"},{"name":"settings","type":"phoneNumberAuthenticationSettings"}],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"_":"Resends phone number confirmation code"},"type":{"subclass":"resendPhoneNumberConfirmationCode","properties":[],"abstractClass":"AuthenticationCodeInfo"}},{"documentation":{"code":"Confirmation code to check","_":"Checks phone number confirmation code "},"type":{"subclass":"checkPhoneNumberConfirmationCode","properties":[{"name":"code","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"pending_update_count":"The number of pending updates ","error_message":"The last error message","_":"Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only "},"type":{"subclass":"setBotUpdatesStatus","properties":[{"name":"pending_update_count","type":"int32"},{"name":"error_message","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"Sticker file owner; ignored for regular users ","sticker":"Sticker file to upload","_":"Uploads a file with a sticker; returns the uploaded file "},"type":{"subclass":"uploadStickerFile","properties":[{"name":"user_id","type":"int53"},{"name":"sticker","type":"inputSticker"}],"abstractClass":"File"}},{"documentation":{"title":"Sticker set title; 1-64 characters","_":"Returns a suggested name for a new sticker set with a given title "},"type":{"subclass":"getSuggestedStickerSetName","properties":[{"name":"title","type":"string"}],"abstractClass":"Text"}},{"documentation":{"name":"Name to be checked","_":"Checks whether a name can be used for a new sticker set "},"type":{"subclass":"checkStickerSetName","properties":[{"name":"name","type":"string"}],"abstractClass":"CheckStickerSetNameResult"}},{"documentation":{"user_id":"Sticker set owner; ignored for regular users ","title":"Sticker set title; 1-64 characters ","name":"Sticker set name. Can contain only English letters, digits and underscores. Must end with *\"_by_<bot username>\"* (*<bot_username>* is case insensitive) for bots; 1-64 characters ","sticker_type":"Type of the stickers in the set ","stickers":"List of stickers to be added to the set; must be non-empty. All stickers must have the same format. For TGS stickers, uploadStickerFile must be used before the sticker is shown ","source":"Source of the sticker set; may be empty if unknown","_":"Creates a new sticker set. Returns the newly created sticker set "},"type":{"subclass":"createNewStickerSet","properties":[{"name":"user_id","type":"int53"},{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"sticker_type","type":"StickerType"},{"name":"stickers","type":"vector<inputSticker>"},{"name":"source","type":"string"}],"abstractClass":"StickerSet"}},{"documentation":{"user_id":"Sticker set owner ","name":"Sticker set name ","sticker":"Sticker to add to the set","_":"Adds a new sticker to a set; for bots only. Returns the sticker set "},"type":{"subclass":"addStickerToSet","properties":[{"name":"user_id","type":"int53"},{"name":"name","type":"string"},{"name":"sticker","type":"inputSticker"}],"abstractClass":"StickerSet"}},{"documentation":{"user_id":"Sticker set owner ","name":"Sticker set name ","thumbnail":"Thumbnail to set in PNG, TGS, or WEBM format; pass null to remove the sticker set thumbnail. Thumbnail format must match the format of stickers in the set","_":"Sets a sticker set thumbnail; for bots only. Returns the sticker set "},"type":{"subclass":"setStickerSetThumbnail","properties":[{"name":"user_id","type":"int53"},{"name":"name","type":"string"},{"name":"thumbnail","type":"InputFile"}],"abstractClass":"StickerSet"}},{"documentation":{"sticker":"Sticker ","position":"New position of the sticker in the set, 0-based","_":"Changes the position of a sticker in the set to which it belongs; for bots only. The sticker set must have been created by the bot "},"type":{"subclass":"setStickerPositionInSet","properties":[{"name":"sticker","type":"InputFile"},{"name":"position","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"sticker":"Sticker","_":"Removes a sticker from the set to which it belongs; for bots only. The sticker set must have been created by the bot "},"type":{"subclass":"removeStickerFromSet","properties":[{"name":"sticker","type":"InputFile"}],"abstractClass":"Ok"}},{"documentation":{"location":"Location of the map center ","zoom":"Map zoom level; 13-20 ","width":"Map width in pixels before applying scale; 16-1024 ","height":"Map height in pixels before applying scale; 16-1024 ","scale":"Map scale; 1-3 ","chat_id":"Identifier of a chat in which the thumbnail will be shown. Use 0 if unknown","_":"Returns information about a file with a map thumbnail in PNG format. Only map thumbnail files with size less than 1MB can be downloaded "},"type":{"subclass":"getMapThumbnailFile","properties":[{"name":"location","type":"location"},{"name":"zoom","type":"int32"},{"name":"width","type":"int32"},{"name":"height","type":"int32"},{"name":"scale","type":"int32"},{"name":"chat_id","type":"int53"}],"abstractClass":"File"}},{"documentation":{"limit_type":"Type of the limit","_":"Returns information about a limit, increased for Premium users. Returns a 404 error if the limit is unknown "},"type":{"subclass":"getPremiumLimit","properties":[{"name":"limit_type","type":"PremiumLimitType"}],"abstractClass":"PremiumLimit"}},{"documentation":{"source":"Source of the request; pass null if the method is called from some non-standard source","_":"Returns information about features, available to Premium users "},"type":{"subclass":"getPremiumFeatures","properties":[{"name":"source","type":"PremiumSource"}],"abstractClass":"PremiumFeatures"}},{"documentation":{"_":"Returns examples of premium stickers for demonstration purposes"},"type":{"subclass":"getPremiumStickerExamples","properties":[],"abstractClass":"Stickers"}},{"documentation":{"feature":"The viewed premium feature","_":"Informs TDLib that the user viewed detailed information about a Premium feature on the Premium features screen "},"type":{"subclass":"viewPremiumFeature","properties":[{"name":"feature","type":"PremiumFeature"}],"abstractClass":"Ok"}},{"documentation":{"_":"Informs TDLib that the user clicked Premium subscription button on the Premium features screen"},"type":{"subclass":"clickPremiumSubscriptionButton","properties":[],"abstractClass":"Ok"}},{"documentation":{"_":"Returns state of Telegram Premium subscription and promotion videos for Premium features"},"type":{"subclass":"getPremiumState","properties":[],"abstractClass":"PremiumState"}},{"documentation":{"purpose":"Transaction purpose","_":"Checks whether Telegram Premium purchase is possible. Must be called before in-store Premium purchase "},"type":{"subclass":"canPurchasePremium","properties":[{"name":"purpose","type":"StorePaymentPurpose"}],"abstractClass":"Ok"}},{"documentation":{"receipt":"App Store receipt ","purpose":"Transaction purpose","_":"Informs server about a purchase through App Store. For official applications only "},"type":{"subclass":"assignAppStoreTransaction","properties":[{"name":"receipt","type":"bytes"},{"name":"purpose","type":"StorePaymentPurpose"}],"abstractClass":"Ok"}},{"documentation":{"package_name":"Application package name ","store_product_id":"Identifier of the purchased store product ","purchase_token":"Google Play purchase token ","purpose":"Transaction purpose","_":"Informs server about a purchase through Google Play. For official applications only "},"type":{"subclass":"assignGooglePlayTransaction","properties":[{"name":"package_name","type":"string"},{"name":"store_product_id","type":"string"},{"name":"purchase_token","type":"string"},{"name":"purpose","type":"StorePaymentPurpose"}],"abstractClass":"Ok"}},{"documentation":{"terms_of_service_id":"Terms of service identifier","_":"Accepts Telegram terms of services "},"type":{"subclass":"acceptTermsOfService","properties":[{"name":"terms_of_service_id","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"method":"The method name ","parameters":"JSON-serialized method parameters","_":"Sends a custom request; for bots only "},"type":{"subclass":"sendCustomRequest","properties":[{"name":"method","type":"string"},{"name":"parameters","type":"string"}],"abstractClass":"CustomRequestResult"}},{"documentation":{"custom_query_id":"Identifier of a custom query ","data":"JSON-serialized answer to the query","_":"Answers a custom query; for bots only "},"type":{"subclass":"answerCustomQuery","properties":[{"name":"custom_query_id","type":"int64"},{"name":"data","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"seconds":"Number of seconds before the function returns","_":"Succeeds after a specified amount of time has passed. Can be called before initialization "},"type":{"subclass":"setAlarm","properties":[{"name":"seconds","type":"double"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns information about existing countries. Can be called before authorization"},"type":{"subclass":"getCountries","properties":[],"abstractClass":"Countries"}},{"documentation":{"_":"Uses the current IP address to find the current country. Returns two-letter ISO 3166-1 alpha-2 country code. Can be called before authorization"},"type":{"subclass":"getCountryCode","properties":[],"abstractClass":"Text"}},{"documentation":{"phone_number_prefix":"The phone number prefix","_":"Returns information about a phone number by its prefix. Can be called before authorization "},"type":{"subclass":"getPhoneNumberInfo","properties":[{"name":"phone_number_prefix","type":"string"}],"abstractClass":"PhoneNumberInfo"}},{"documentation":{"language_code":"A two-letter ISO 639-1 language code for country information localization ","phone_number_prefix":"The phone number prefix","_":"Returns information about a phone number by its prefix synchronously. getCountries must be called at least once after changing localization to the specified language if properly localized country information is expected. Can be called synchronously "},"type":{"subclass":"getPhoneNumberInfoSync","properties":[{"name":"language_code","type":"string"},{"name":"phone_number_prefix","type":"string"}],"abstractClass":"PhoneNumberInfo"}},{"documentation":{"_":"Returns the link for downloading official Telegram application to be used when the current user invites friends to Telegram"},"type":{"subclass":"getApplicationDownloadLink","properties":[],"abstractClass":"HttpUrl"}},{"documentation":{"link":"The link","_":"Returns information about a tg:// deep link. Use \"tg://need_update_for_some_feature\" or \"tg:some_unsupported_feature\" for testing. Returns a 404 error for unknown links. Can be called before authorization "},"type":{"subclass":"getDeepLinkInfo","properties":[{"name":"link","type":"string"}],"abstractClass":"DeepLinkInfo"}},{"documentation":{"_":"Returns application config, provided by the server. Can be called before authorization"},"type":{"subclass":"getApplicationConfig","properties":[],"abstractClass":"JsonValue"}},{"documentation":{"type":"Event type ","chat_id":"Optional chat identifier, associated with the event ","data":"The log event data","_":"Saves application log event on the server. Can be called before authorization "},"type":{"subclass":"saveApplicationLogEvent","properties":[{"name":"type","type":"string"},{"name":"chat_id","type":"int53"},{"name":"data","type":"JsonValue"}],"abstractClass":"Ok"}},{"documentation":{"proxy_id":"Proxy identifier ","server":"Proxy server IP address ","port":"Proxy server port ","enable":"Pass true to immediately enable the proxy ","type":"Proxy type","_":"Edits an existing proxy server for network requests. Can be called before authorization "},"type":{"subclass":"editProxy","properties":[{"name":"proxy_id","type":"int32"},{"name":"server","type":"string"},{"name":"port","type":"int32"},{"name":"enable","type":"Bool"},{"name":"type","type":"ProxyType"}],"abstractClass":"Proxy"}},{"documentation":{"proxy_id":"Proxy identifier","_":"Enables a proxy. Only one proxy can be enabled at a time. Can be called before authorization "},"type":{"subclass":"enableProxy","properties":[{"name":"proxy_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"_":"Disables the currently enabled proxy. Can be called before authorization"},"type":{"subclass":"disableProxy","properties":[],"abstractClass":"Ok"}},{"documentation":{"proxy_id":"Proxy identifier","_":"Removes a proxy server. Can be called before authorization "},"type":{"subclass":"removeProxy","properties":[{"name":"proxy_id","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns list of proxies that are currently set up. Can be called before authorization"},"type":{"subclass":"getProxies","properties":[],"abstractClass":"Proxies"}},{"documentation":{"proxy_id":"Proxy identifier","_":"Returns an HTTPS link, which can be used to add a proxy. Available only for SOCKS5 and MTProto proxies. Can be called before authorization "},"type":{"subclass":"getProxyLink","properties":[{"name":"proxy_id","type":"int32"}],"abstractClass":"HttpUrl"}},{"documentation":{"proxy_id":"Proxy identifier. Use 0 to ping a Telegram server without a proxy","_":"Computes time needed to receive a response from a Telegram server through a proxy. Can be called before authorization "},"type":{"subclass":"pingProxy","properties":[{"name":"proxy_id","type":"int32"}],"abstractClass":"Seconds"}},{"documentation":{"log_stream":"New log stream","_":"Sets new log stream for internal logging of TDLib. Can be called synchronously "},"type":{"subclass":"setLogStream","properties":[{"name":"log_stream","type":"LogStream"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns information about currently used log stream for internal logging of TDLib. Can be called synchronously"},"type":{"subclass":"getLogStream","properties":[],"abstractClass":"LogStream"}},{"documentation":{"new_verbosity_level":"New value of the verbosity level for logging. Value 0 corresponds to fatal errors, value 1 corresponds to errors, value 2 corresponds to warnings and debug warnings, value 3 corresponds to informational, value 4 corresponds to debug, value 5 corresponds to verbose debug, value greater than 5 and up to 1023 can be used to enable even more logging","_":"Sets the verbosity level of the internal logging of TDLib. Can be called synchronously "},"type":{"subclass":"setLogVerbosityLevel","properties":[{"name":"new_verbosity_level","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"_":"Returns current verbosity level of the internal logging of TDLib. Can be called synchronously"},"type":{"subclass":"getLogVerbosityLevel","properties":[],"abstractClass":"LogVerbosityLevel"}},{"documentation":{"_":"Returns list of available TDLib internal log tags, for example, [\"actor\", \"binlog\", \"connections\", \"notifications\", \"proxy\"]. Can be called synchronously"},"type":{"subclass":"getLogTags","properties":[],"abstractClass":"LogTags"}},{"documentation":{"tag":"Logging tag to change verbosity level ","new_verbosity_level":"New verbosity level; 1-1024","_":"Sets the verbosity level for a specified TDLib internal log tag. Can be called synchronously "},"type":{"subclass":"setLogTagVerbosityLevel","properties":[{"name":"tag","type":"string"},{"name":"new_verbosity_level","type":"int32"}],"abstractClass":"Ok"}},{"documentation":{"tag":"Logging tag to change verbosity level","_":"Returns current verbosity level for a specified TDLib internal log tag. Can be called synchronously "},"type":{"subclass":"getLogTagVerbosityLevel","properties":[{"name":"tag","type":"string"}],"abstractClass":"LogVerbosityLevel"}},{"documentation":{"verbosity_level":"The minimum verbosity level needed for the message to be logged; 0-1023 ","text":"Text of a message to log","_":"Adds a message to TDLib internal log. Can be called synchronously "},"type":{"subclass":"addLogMessage","properties":[{"name":"verbosity_level","type":"int32"},{"name":"text","type":"string"}],"abstractClass":"Ok"}},{"documentation":{"user_id":"User identifier","_":"Returns support information for the given user; for Telegram support only "},"type":{"subclass":"getUserSupportInfo","properties":[{"name":"user_id","type":"int53"}],"abstractClass":"UserSupportInfo"}},{"documentation":{"user_id":"User identifier ","message":"New information message","_":"Sets support information for the given user; for Telegram support only "},"type":{"subclass":"setUserSupportInfo","properties":[{"name":"user_id","type":"int53"},{"name":"message","type":"formattedText"}],"abstractClass":"UserSupportInfo"}},{"documentation":{"_":"Does nothing; for testing only. This is an offline method. Can be called before authorization"},"type":{"subclass":"testCallEmpty","properties":[],"abstractClass":"Ok"}},{"documentation":{"x":"String to return","_":"Returns the received string; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testCallString","properties":[{"name":"x","type":"string"}],"abstractClass":"TestString"}},{"documentation":{"x":"Bytes to return","_":"Returns the received bytes; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testCallBytes","properties":[{"name":"x","type":"bytes"}],"abstractClass":"TestBytes"}},{"documentation":{"x":"Vector of numbers to return","_":"Returns the received vector of numbers; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testCallVectorInt","properties":[{"name":"x","type":"vector<int32>"}],"abstractClass":"TestVectorInt"}},{"documentation":{"x":"Vector of objects to return","_":"Returns the received vector of objects containing a number; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testCallVectorIntObject","properties":[{"name":"x","type":"vector<testInt>"}],"abstractClass":"TestVectorIntObject"}},{"documentation":{"x":"Vector of strings to return","_":"Returns the received vector of strings; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testCallVectorString","properties":[{"name":"x","type":"vector<string>"}],"abstractClass":"TestVectorString"}},{"documentation":{"x":"Vector of objects to return","_":"Returns the received vector of objects containing a string; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testCallVectorStringObject","properties":[{"name":"x","type":"vector<testString>"}],"abstractClass":"TestVectorStringObject"}},{"documentation":{"x":"Number to square","_":"Returns the squared received number; for testing only. This is an offline method. Can be called before authorization "},"type":{"subclass":"testSquareInt","properties":[{"name":"x","type":"int32"}],"abstractClass":"TestInt"}},{"documentation":{"_":"Sends a simple network request to the Telegram servers; for testing only. Can be called before authorization"},"type":{"subclass":"testNetwork","properties":[],"abstractClass":"Ok"}},{"documentation":{"server":"Proxy server IP address ","port":"Proxy server port ","type":"Proxy type ","dc_id":"Identifier of a datacenter with which to test connection ","timeout":"The maximum overall timeout for the request","_":"Sends a simple network request to the Telegram servers via proxy; for testing only. Can be called before authorization "},"type":{"subclass":"testProxy","properties":[{"name":"server","type":"string"},{"name":"port","type":"int32"},{"name":"type","type":"ProxyType"},{"name":"dc_id","type":"int32"},{"name":"timeout","type":"double"}],"abstractClass":"Ok"}},{"documentation":{"_":"Forces an updates.getDifference call to the Telegram servers; for testing only"},"type":{"subclass":"testGetDifference","properties":[],"abstractClass":"Ok"}},{"documentation":{"_":"Does nothing and ensures that the Update object is used; for testing only. This is an offline method. Can be called before authorization"},"type":{"subclass":"testUseUpdate","properties":[],"abstractClass":"Update"}},{"documentation":{"error":"The error to be returned","_":"Returns the specified error and ensures that the Error object is used; for testing only. Can be called synchronously "},"type":{"subclass":"testReturnError","properties":[{"name":"error","type":"error"}],"abstractClass":"Error"}},{"documentation":{"new_verbosity_level":"New value of the verbosity level for logging.","_":"Changes the verbosity level of TDWeb logging "},"type":{"subclass":"setJsLogVerbosityLevel","properties":[{"name":"new_verbosity_level","type":"jsLogLevel"}],"abstractClass":"Ok"}}],"options":{"always_parse_markdown":{"type":"Boolean","writable":true,"description":"If true, text entities will be automatically parsed in all inputMessageText objects"},"archive_and_mute_new_chats_from_unknown_users":{"type":"Boolean","writable":true,"description":"If true, new chats from non-contacts will be automatically archived and muted. The option can be set only if the option “can_archive_and_mute_new_chats_from_unknown_users” is true. getOption needs to be called explicitly to fetch the latest value of the option, changed from another device"},"disable_animated_emoji":{"type":"Boolean","writable":true,"description":"If true, animated emoji will be disabled and shown as plain emoji"},"disable_contact_registered_notifications":{"type":"Boolean","writable":true,"description":"If true, notifications about the user's contacts who have joined Telegram will be disabled. User will still receive the corresponding message in the private chat. getOption needs to be called explicitly to fetch the latest value of the option, changed from another device"},"disable_persistent_network_statistics":{"type":"Boolean","writable":true,"description":"If true, persistent network statistics will be disabled, which significantly reduces disk usage"},"disable_sent_scheduled_message_notifications":{"type":"Boolean","writable":true,"description":"If true, notifications about outgoing scheduled messages that were sent will be disabled"},"disable_time_adjustment_protection":{"type":"Boolean","writable":true,"description":"If true, protection from external time adjustment will be disabled, which significantly reduces disk usage"},"disable_top_chats":{"type":"Boolean","writable":true,"description":"If true, support for top chats and statistics collection is disabled"},"ignore_background_updates":{"type":"Boolean","writable":true,"description":"If true, allows to skip all updates received while the TDLib instance was not running. The option does nothing if the database or secret chats are used"},"ignore_default_disable_notification":{"type":"Boolean","writable":true,"description":"If true, the disable_notification value specified in the request will be always used instead of the default value"},"ignore_inline_thumbnails":{"type":"Boolean","writable":true,"description":"If true, prevents file thumbnails sent by the server along with messages from being saved on the disk"},"ignore_platform_restrictions":{"type":"Boolean","writable":true,"description":"If true, chat and message restrictions specific to the currently used operating system will be ignored"},"ignore_sensitive_content_restrictions":{"type":"Boolean","writable":true,"description":"If true, sensitive content will be shown on all user devices. getOption needs to be called explicitly to fetch the latest value of the option, changed from another device"},"is_location_visible":{"type":"Boolean","writable":true,"description":"If true, other users will be allowed to see the current user's location. getOption needs to be called explicitly to fetch the latest value of the option, changed from another device"},"language_pack_database_path":{"type":"String","writable":true,"description":"Path to a database for storing language pack strings, so that this database can be shared between different accounts. By default, language pack strings are stored only in memory. Changes of value of this option will be applied only after TDLib restart, so it should be set before call to setTdlibParameters."},"language_pack_id":{"type":"String","writable":true,"description":"Identifier of the currently used language pack from the current localization target"},"localization_target":{"type":"String","writable":true,"description":"Name for the current localization target (currently supported: “android”, “android_x”, “ios”, “macos” and “tdesktop”)"},"message_unload_delay":{"type":"Integer","writable":true,"description":"The maximum time messages are stored in memory before they are unloaded, 60-86400; in seconds. Defaults to 60 for users and 1800 for bots"},"notification_group_count_max":{"type":"Integer","writable":true,"description":"Maximum number of notification groups to be shown simultaneously, 0-25"},"notification_group_size_max":{"type":"Integer","writable":true,"description":"Maximum number of simultaneously shown notifications in a group, 1-25. Defaults to 10"},"online":{"type":"Boolean","writable":true,"description":"Online status of the current user"},"prefer_ipv6":{"type":"Boolean","writable":true,"description":"If true, IPv6 addresses will be preferred over IPv4 addresses"},"use_pfs":{"type":"Boolean","writable":true,"description":"If true, Perfect Forward Secrecy will be enabled for interaction with the Telegram servers for cloud chats"},"use_quick_ack":{"type":"Boolean","writable":true,"description":"If true, quick acknowledgement will be enabled for outgoing messages"},"use_storage_optimizer":{"type":"Boolean","writable":true,"description":"If true, the background storage optimizer will be enabled"},"utc_time_offset":{"type":"Integer","writable":true,"description":"A UTC time offset used for splitting messages by days. The option is reset automatically on each TDLib instance launch, so it needs to be set manually only if the time offset is changed during execution."},"animation_search_bot_username":{"type":"String","writable":false,"description":"Username of a bot which can be used in inline mode for animations search"},"authentication_token":{"type":"String","writable":false,"description":"An authentication token to be used on subsequent authorizations and received when logging out"},"authorization_date":{"type":"Integer","writable":false,"description":"Point in time (Unix timestamp) when authorization was received"},"basic_group_size_max":{"type":"Integer","writable":false,"description":"Maximum number of members in a basic group"},"call_connect_timeout_ms":{"type":"Integer","writable":false,"description":"Maximum time to wait for call connection creation to be passed to libtgvoip"},"call_packet_timeout_ms":{"type":"Integer","writable":false,"description":"Maximum time to wait for call packet delivery to be passed to libtgvoip"},"can_archive_and_mute_new_chats_from_unknown_users":{"type":"Boolean","writable":false,"description":"If true, the option “archive_and_mute_new_chats_from_unknown_users” can be changed"},"can_ignore_sensitive_content_restrictions":{"type":"Boolean","writable":false,"description":"If true, the option “ignore_sensitive_content_restrictions” can be changed"},"channel_bot_user_id":{"type":"Integer","writable":false,"description":"Identifier of the bot which is shown as the sender of messages sent on behalf of channels when viewed from an outdated client"},"enabled_proxy_id":{"type":"Integer","writable":false,"description":"Identifier of the enabled proxy"},"expect_blocking":{"type":"Boolean","writable":false,"description":"If true, access to Telegram is likely blocked for the user"},"favorite_stickers_limit":{"type":"Integer","writable":false,"description":"Maximum number of favorite stickers"},"forwarded_message_count_max":{"type":"Integer","writable":false,"description":"Maximum number of forwarded messages per one request"},"group_anonymous_bot_user_id":{"type":"Integer","writable":false,"description":"Identifier of the bot which is shown as the sender of anonymous messages in groups when viewed from an outdated client"},"message_caption_length_max":{"type":"Integer","writable":false,"description":"Maximum length of a message caption"},"message_text_length_max":{"type":"Integer","writable":false,"description":"Maximum length of a message text"},"my_id":{"type":"Integer","writable":false,"description":"Identifier of the current user"},"pinned_archived_chat_count_max":{"type":"Integer","writable":false,"description":"Maximum number of pinned cloud chats in the Archive chat list. The same amount of secret chats can be pinned locally"},"pinned_chat_count_max":{"type":"Integer","writable":false,"description":"Maximum number of pinned cloud chats in the Main chat list. The same amount of secret chats can be pinned locally"},"photo_search_bot_username":{"type":"String","writable":false,"description":"Username of a bot which can be used in inline mode for photos search"},"replies_bot_chat_id":{"type":"Integer","writable":false,"description":"Identifier of the @replies bot"},"suggested_language_pack_id":{"type":"String","writable":false,"description":"Identifier of the language pack, suggested for the user by the server"},"suggested_video_note_audio_bitrate":{"type":"Integer","writable":false,"description":"Suggested bit rate for audio encoding in video notes, in kbit/s"},"suggested_video_note_length":{"type":"Integer","writable":false,"description":"Suggested width and height of the video in video notes"},"suggested_video_note_video_bitrate":{"type":"Integer","writable":false,"description":"Suggested bit rate for video encoding in video notes, in kbit/s"},"supergroup_size_max":{"type":"Integer","writable":false,"description":"Maximum number of members in a supergroup"},"t_me_url":{"type":"String","writable":false,"description":"Current value of t.me URL, i.e. https://t.me/"},"telegram_service_notifications_chat_id":{"type":"Integer","writable":false,"description":"Identifier of the Telegram Service Notifications chat"},"test_mode":{"type":"Boolean","writable":false,"description":"If true, the test environment is being used instead of the production environment"},"unix_time":{"type":"Integer","writable":false,"description":"An estimation of the current Unix timestamp. The option will not be updated automatically unless the difference between the previous estimation and the locally available monotonic clocks changes significantly"},"venue_search_bot_username":{"type":"String","writable":false,"description":"Username of a bot which can be used in inline mode for venues search"},"version":{"type":"String","writable":false,"description":"TDLib version. This options is guaranteed to come before all other updates since TDLib 1.4.0"}}}